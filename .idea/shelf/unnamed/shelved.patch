Index: app/src/main/java/com/example/barnes/ummo/holder/SelectableHeaderHolder.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/SelectableHeaderHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/SelectableHeaderHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,68 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.johnkil.print.PrintView;
-import com.unnamed.b.atv.model.TreeNode;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class SelectableHeaderHolder extends TreeNode.BaseNodeViewHolder<IconTreeItemHolder.IconTreeItem> {
-    private TextView tvValue;
-    private PrintView arrowView;
-    private CheckBox nodeSelector;
-
-
-    public SelectableHeaderHolder(Context context) {
-        super(context);
-    }
-
-    @Override
-    public View createNodeView(final TreeNode node, IconTreeItemHolder.IconTreeItem value) {
-        final LayoutInflater inflater = LayoutInflater.from(context);
-        final View view = inflater.inflate(R.layout.layout_selectable_header, null, false);
-
-        tvValue = (TextView) view.findViewById(R.id.node_value);
-        tvValue.setText(value.text);
-
-        final PrintView iconView = (PrintView) view.findViewById(R.id.icon);
-        iconView.setIconText(context.getResources().getString(value.icon));
-
-        arrowView = (PrintView) view.findViewById(R.id.arrow_icon);
-        if (node.isLeaf()) {
-            arrowView.setVisibility(View.GONE);
-        }
-
-        nodeSelector = (CheckBox) view.findViewById(R.id.node_selector);
-        nodeSelector.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                node.setSelected(isChecked);
-                for (TreeNode n : node.getChildren()) {
-                    getTreeView().selectNode(n, isChecked);
-                }
-            }
-        });
-        nodeSelector.setChecked(node.isSelected());
-
-        return view;
-    }
-
-    @Override
-    public void toggle(boolean active) {
-        arrowView.setIconText(context.getResources().getString(active ? R.string.ic_keyboard_arrow_down : R.string.ic_keyboard_arrow_right));
-    }
-
-    @Override
-    public void toggleSelectionMode(boolean editModeEnabled) {
-        nodeSelector.setVisibility(editModeEnabled ? View.VISIBLE : View.GONE);
-        nodeSelector.setChecked(mNode.isSelected());
-    }
-}
Index: floatbutton/floatbutton.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- floatbutton/floatbutton.iml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ floatbutton/floatbutton.iml	(revision )
@@ -12,10 +12,7 @@
         <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
         <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
         <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
-        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugAndroidTest" />
-        <option name="COMPILE_JAVA_TEST_TASK_NAME" value="compileDebugAndroidTestSources" />
         <afterSyncTasks>
-          <task>generateDebugAndroidTestSources</task>
           <task>generateDebugSources</task>
         </afterSyncTasks>
         <option name="ALLOW_USER_CONFIGURATION" value="false" />
@@ -29,7 +26,7 @@
   </component>
   <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
-    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/androidTest/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
@@ -51,6 +48,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
@@ -58,6 +62,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/MainActivity.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/MainActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/MainActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,225 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-
-import com.example.barnes.ummo.R;
-
-/**
- * Created by barnes on 11/1/15.
- */
-public class MainActivity extends AppCompatActivity implements QUserListner,QMasterListener
-{
-    QUser qUser;
-
-
-    @Override
-    public void qReady(String string) {
-
-    }
-
-    @Override
-    public void joinedQsError(String err) {
-
-    }
-
-    @Override
-    public void gotJoinedQs(String string) {
-
-    }
-
-    @Override
-    public void qError(String err) {
-
-    }
-
-    //These are the functions to be implemented
-    @Override
-    public void userRegistered(String string) {
-        // parse the string a JSONObject or JSONArray
-    }
-
-    @Override
-    public void qJoined(String string) {
-
-    }
-
-    @Override
-    public void qLeft(String string) {
-
-    }
-
-    @Override
-    public void updated(String string) {
-        //The String We get Here is from the Daemon, Its The information on Joined Qs.
-        Log.d("Updates",string);
-
-    }
-
-    @Override
-    public void categoriesReady(String string) {
-
-    }
-
-    @Override
-    public void allQsReady(String string) {
-        Log.d("Suceess",string);
-    }
-
-    @Override
-    public void userRegistrationError(String err) {
-
-    }
-
-    @Override
-    public void qJoinedError(String err) {
-
-    }
-
-    @Override
-    public void qLeftError(String err) {
-
-    }
-
-    @Override
-    public void updateError(String err) {
-
-    }
-
-    @Override
-    public void categoriesError(String err) {
-
-    }
-
-    @Override
-    public void allQError(String err) {
-
-    }
-
-    //End Ovrriding Interface
-
-    //Functions to be implemented for qmaster
-
-    @Override
-    public void qCreated(String string) {
-
-    }
-
-    @Override
-    public void registered(String string) {
-        Log.d("Success",string);
-    }
-
-    @Override
-    public void qDestroyed(String string) {
-
-    }
-
-    @Override
-    public void userDQd(String string) {
-
-    }
-
-    @Override
-    public void userMoved(String string) {
-
-    }
-
-    @Override
-    public void feedBackRecieved(String string) {
-
-    }
-
-    @Override
-    public void myQRecieved(String string) {
-
-    }
-
-    @Override
-    public void updatesRecieved(String string) {
-
-    }
-
-    @Override
-    public void createQError(String string) {
-
-    }
-
-    @Override
-    public void registrationError(String string) {
-        Log.d("Registration Err",string);
-    }
-
-    @Override
-    public void onQDestroyError(String sting) {
-
-    }
-
-    @Override
-    public void onUserDQError(String string) {
-
-    }
-
-    @Override
-    public void onUserMoveError(String string) {
-
-    }
-
-    @Override
-    public void onFeedBackError(String string) {
-
-    }
-
-    @Override
-    public void onUpdtaesError(String string) {
-
-    }
-
-    //End Functions to be implemented for QMaster
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.ummo_splash);
-
-        qUser=new QUser(this);
-        if(qUser.isRegistered()) {
-            qUser.getAvailableQs();
-        }
-
-        else {
-            Log.d("User","Not Registered");
-            qUser.register("Mbhamali Sihle","76558975");
-        }
-
-        //qUser.updateJoinedQs("");
-
-
-        //This Example starts The Daemon
-        Log.e("about", "to call fuction");
-        qUser.startUpdatesDaemon();
-        //End Of Example for Binding a service
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.menu_main, menu);
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-
-
-
-        return super.onOptionsItemSelected(item);
-    }
-}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -2,110 +2,114 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:xlmns="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
-    package="com.example.barnes.ummo">
+    package="com.ummo.barnes.qman">
 
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+  <uses-permission android:name="android.permission.INTERNET" />
+  <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
-    <uses-permission android:name="android.permission.WAKE_LOCK" />
-    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
+  <uses-permission android:name="android.permission.WAKE_LOCK" />
+  <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
 
 
-    <permission
+  <permission
-        android:name="com.example.barnes.ummo.permission.C2D_MESSAGE"
+      android:name="com.ummo.barnes.qman.permission.C2D_MESSAGE"
-        android:protectionLevel="signature" />
+      android:protectionLevel="signature" />
 
-    <uses-permission android:name="com.example.sihle.gcmsample.permission.C2D_MESSAGE" />
+  <uses-permission android:name="com.ummo.barnes.qman.permission.C2D_MESSAGE" />
 
-    <application
-        android:allowBackup="true"
-        android:icon="@mipmap/ummo_logo"
-        android:label="@string/app_name"
-        tools:replace="android:icon"
-        android:theme="@style/AppTheme" >
-        <service
+  <application
+      android:allowBackup="true"
+      android:icon="@mipmap/ummo_logo"
+      android:label="@string/app_name"
+      tools:replace="android:icon"
+      android:theme="@style/AppTheme" >
+    <service
-            android:name="com.example.barnes.ummo.gcm.RegistrationIntentService"
+        android:name="com.ummo.barnes.qman.gcm.RegistrationIntentService"
-            android:exported="false" />
+        android:exported="false" />
 
-        <activity
-            android:name=".SplashScreen"
-            android:label="@string/app_name" >
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
+    <activity
+        android:name=".SplashScreen"
+        android:label="@string/app_name" >
+      <intent-filter>
+        <action android:name="android.intent.action.MAIN" />
 
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        <activity android:name=".SingleFragmentActivity" />
-        <activity android:name=".qman_signup" />
-        <activity
-            android:name=".Qs"
-            android:label="@string/title_activity_qs" >
-        </activity>
+        <category android:name="android.intent.category.LAUNCHER" />
+      </intent-filter>
+    </activity>
+    <activity android:name=".SingleFragmentActivity" />
+    <activity android:name=".qman_signup" />
+    <activity
+        android:name=".Qs"
+        android:label="@string/title_activity_qs" >
+    </activity>
 
-        <activity android:name=".fragment.SelectableTreeFragment" />
-        <activity android:name=".fragment.AfterFabAnimationActivity" />
+    <activity android:name=".fragment.SelectableTreeFragment" />
+    <activity android:name=".fragment.AfterFabAnimationActivity" />
 
-        <activity
-            android:name=".Main_Activity"
+    <activity
+        android:name=".Main_Activity"
+        android:parentActivityName=".fragment.SelectableTreeFragment"
-            android:label="@string/title_activity_qs" >
+        android:label="@string/title_activity_qs" >
+      <meta-data
+          android:name="android.support.PARENT_ACTIVITY"
+          android:value=".fragment.SelectableTreeFragment"/>
-        </activity>
+    </activity>
 
-        <service
+    <service
-            android:name="com.example.barnes.ummo.gcm.MyInstanceIDListenerService"
+        android:name="com.ummo.barnes.qman.gcm.MyInstanceIDListenerService"
-            android:exported="false" >
-            <intent-filter>
-                <action android:name="com.google.android.gms.iid.InstanceID" />
-            </intent-filter>
-        </service>
+        android:exported="false" >
+      <intent-filter>
+        <action android:name="com.google.android.gms.iid.InstanceID" />
+      </intent-filter>
+    </service>
 
-        <receiver
-            android:name="com.google.android.gms.gcm.GcmReceiver"
-            android:exported="true"
-            android:permission="com.google.android.c2dm.permission.SEND" >
-            <intent-filter>
-                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
+    <receiver
+        android:name="com.google.android.gms.gcm.GcmReceiver"
+        android:exported="true"
+        android:permission="com.google.android.c2dm.permission.SEND" >
+      <intent-filter>
+        <action android:name="com.google.android.c2dm.intent.RECEIVE" />
-
-                <category android:name="com.codepath.gcmquickstart" />
+          <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
+        <category android:name="com.ummo.barnes.qman" />
-            </intent-filter>
-        </receiver>
+      </intent-filter>
+    </receiver>
 
 
 
-        <meta-data
-            android:name="com.google.android.gms.version"
-            android:value="@integer/google_play_services_version" />
+    <meta-data
+        android:name="com.google.android.gms.version"
+        android:value="@integer/google_play_services_version" />
 
-        <meta-data
-            android:name="io.fabric.ApiKey"
-            android:value="29cbd600bb8183011201895a931db91e93f2d614" />
+    <meta-data
+        android:name="io.fabric.ApiKey"
+        android:value="29cbd600bb8183011201895a931db91e93f2d614" />
 
-        <provider
-            android:name="com.google.android.gms.measurement.AppMeasurementContentProvider"
+    <provider
+        android:name="com.google.android.gms.measurement.AppMeasurementContentProvider"
-            android:authorities="com.example.barnes.ummo.google_measurement_service"
+        android:authorities="com.ummo.barnes.qman.google_measurement_service"
-            android:exported="false" />
+        android:exported="false" />
 
-        <receiver
-            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
-            android:enabled="true" >
-            <intent-filter>
-                <action android:name="com.google.android.gms.measurement.UPLOAD" />
-            </intent-filter>
-        </receiver>
+    <receiver
+        android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
+        android:enabled="true" >
+      <intent-filter>
+        <action android:name="com.google.android.gms.measurement.UPLOAD" />
+      </intent-filter>
+    </receiver>
 
-        <service
-            android:name="com.google.android.gms.measurement.AppMeasurementService"
-            android:enabled="true"
-            android:exported="false" />
+    <service
+        android:name="com.google.android.gms.measurement.AppMeasurementService"
+        android:enabled="true"
+        android:exported="false" />
 
-        <service
-            android:name=".gcm.GcmMessageHandler"
-            android:exported="false" >
-            <intent-filter>
-                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
-            </intent-filter>
-        </service>
-    </application>
+    <service
+        android:name=".gcm.GcmMessageHandler"
+        android:exported="false" >
+      <intent-filter>
+        <action android:name="com.google.android.c2dm.intent.RECEIVE" />
+      </intent-filter>
+    </service>
+  </application>
 
 </manifest>
Index: app/src/main/java/com/example/barnes/ummo/fragment/BaseActivityFragment.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/BaseActivityFragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/BaseActivityFragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,55 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.view.MenuItem;
-import android.widget.Toast;
-
-import com.example.barnes.ummo.R;
-
-/**
- * Created by barnes on 12/4/15.
- */
-public class BaseActivityFragment extends Fragment
-{
-    public static BaseActivityFragment newInstance()
-    {
-
-        Bundle args = new Bundle();
-
-        BaseActivityFragment fragment = new BaseActivityFragment();
-        fragment.setArguments(args);
-        return fragment;
-    }
-    protected void enterFromBottomAnimation()
-    {
-        getActivity().overridePendingTransition(R.anim.activity_open_translate_from_bottom, R.anim.activity_no_animation);
-    }
-
-    protected void exitToBottomAnimation()
-    {
-        getActivity().overridePendingTransition(R.anim.activity_no_animation, R.anim.activity_close_translate_to_bottom);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item)
-    {
-        switch (item.getItemId())
-        {
-            case R.id.menu_send:
-                Toast.makeText(getActivity(), "Yeah!", Toast.LENGTH_SHORT).show();
-                break;
-            case android.R.id.home:
-                getActivity().onBackPressed();
-                return true;
-        }
-        return super.onOptionsItemSelected(item);
-    }
-
-    @Override
-    public void onPause()
-    {
-        exitToBottomAnimation();
-        super.onPause();
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/db/DbHelper.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/db/DbHelper.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/db/DbHelper.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,79 +0,0 @@
-package com.example.barnes.ummo.db;
-
-import android.content.Context;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteException;
-import android.database.sqlite.SQLiteOpenHelper;
-import android.util.Log;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class DbHelper extends SQLiteOpenHelper
-{
-    private static final String CREATE_TABLE_SERVICE_TYPE = "CREATE TABLE " +
-            Constants.TABLE_Q_SERVICETYPE + " (" +
-            Constants.Q_SERVICETYPEID + " INTEGER PRIMARY KEY, " +
-            Constants.Q_SERVICETYPENAME + " TEXT NOT NULL)";
-
-    private static final String CREATE_TABLE_SERVICE_PROVIDER = "CREATE TABLE " +
-            Constants.TABLE_Q_SERVICEPROVIDER + " (" +
-            Constants.Q_SERVICEPROVIDERID + " INTEGER PRIMARY KEY, " +
-            Constants.Q_SERVICEPROVIDERNAME + " TEXT NOT NULL, " +
-            Constants.Q_SERVICETYPEID +" INTEGER NOT NULL, " +
-            "FOREIGN KEY(" + Constants.Q_SERVICETYPEID + ") REFERENCES " + Constants.TABLE_Q_SERVICETYPE + "(" + Constants.Q_SERVICETYPEID + "))";
-
-    /*private static final String CREATE_TABLE_SERVICE_PROVIDER = "CREATE TABLE " +
-            Constants.TABLE_Q_SERVICEPROVIDER + " (" +
-            Constants.Q_SERVICEPROVIDERID + " INTEGER PRIMARY KEY, " +
-            Constants.Q_SERVICEPROVIDERNAME + " TEXT NOT NULL, " +
-            Constants.Q_SERVICETYPEID +" INTEGER FOREINGKEY REFERENCES " + Constants.TABLE_Q_SERVICETYPE + "(" + Constants.Q_SERVICETYPEID + "))";*/
-
-    private static final String CREATE_TABLE_SERVICE_NAME = "CREATE TABLE " +
-            Constants.TABLE_Q_SERVICE + " (" +
-            Constants.Q_SERVICENAMEID + " INTEGER PRIMARY KEY, " +
-            Constants.Q_SERVICENAME + " TEXT NOT NULL, " +
-            Constants.Q_SERVICETYPEID + " INTEGER NOT NULL, " +
-            Constants.Q_SERVICEPROVIDERID + " INTEGER NOT NULL, " +
-            "FOREIGN KEY(" + Constants.Q_SERVICETYPEID + ") REFERENCES " + Constants.TABLE_Q_SERVICETYPE + "(" + Constants.Q_SERVICETYPEID + "), "+
-            "FOREIGN KEY(" + Constants.Q_SERVICEPROVIDERID + ") REFERENCES " + Constants.TABLE_Q_SERVICEPROVIDER + "(" + Constants.Q_SERVICEPROVIDERID + "))";
-
-    private static final String CREATE_TABLE_QTABS = "CREATE TABLE " +
-            Constants.TABLE_NAME_Q + " (" +
-            Constants.Q_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
-            Constants.Q_SERVICENAMEID + " INTEGER FOREIGNKEY REFERENCES " + Constants.TABLE_Q_SERVICE + "(" + Constants.Q_SERVICENAMEID + "), " +
-            Constants.Q_NAME + " TEXT NOT NULL, " +
-            Constants.Q_TAB_POSITION + " INTEGER NOT NULL, " +
-            Constants.Q_POSITION + " TEXT NOT NULL)";
-
-    public DbHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, int version)
-    {
-        super(context, name, factory, version);
-    }
-    @Override
-    public void onCreate(SQLiteDatabase db)
-    {
-        Log.v("MyDBhelper onCreate", "Creating all the tables");
-        try
-        {
-            db.execSQL(CREATE_TABLE_SERVICE_TYPE);
-            db.execSQL(CREATE_TABLE_SERVICE_PROVIDER);
-            db.execSQL(CREATE_TABLE_SERVICE_NAME);
-            db.execSQL(CREATE_TABLE_QTABS);
-        }
-        catch(SQLiteException ex)
-        {
-            Log.v("Create table exception", ex.getMessage());
-        }
-    }
-    @Override
-    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
-        Log.w("TaskDBAdapter", "Upgrading from version " + oldVersion + " to " + newVersion + ", which will destroy all old data");
-        db.execSQL("drop table if exists " + Constants.TABLE_Q_SERVICETYPE);
-        db.execSQL("drop table if exists " + Constants.TABLE_Q_SERVICEPROVIDER);
-        db.execSQL("drop table if exists " + Constants.TABLE_Q_SERVICE);
-        db.execSQL("drop table if exists " + Constants.TABLE_NAME_Q);
-        onCreate(db);
-    }
-}
-
Index: app/src/main/java/com/example/barnes/ummo/fragment/ScrollViewFragment.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/ScrollViewFragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/ScrollViewFragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,374 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.CountDownTimer;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v4.content.LocalBroadcastManager;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.animation.ScaleAnimation;
-import android.widget.Button;
-import android.widget.RelativeLayout;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.Main_Activity;
-import com.example.barnes.ummo.R;
-import com.example.barnes.ummo.ummoAPI.JoinedQ;
-import com.example.barnes.ummo.ummoAPI.QUser;
-import com.github.florent37.hollyviewpager.HollyViewPagerBus;
-import com.github.ksoichiro.android.observablescrollview.ObservableScrollView;
-import com.uber.sdk.android.rides.RequestButton;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-import cn.pedant.SweetAlert.SweetAlertDialog;
-
-/**
- * Created by barnes on 12/30/15.
- */
-public class ScrollViewFragment extends Fragment {
-
-    @Bind(R.id.scrollView)
-    ObservableScrollView scrollView;
-
-    @Bind(R.id.title)
-    TextView title;
-
-    @Bind(R.id.man_four)
-    Button btn4;
-
-    @Bind(R.id.man_one)
-    Button btn1;
-
-    @Bind(R.id.man_two)
-            Button btn2;
-
-    @Bind(R.id.man_three)
-            Button btn3;
-    @Bind(R.id.man_five)
-            Button btn5;
-    View v;
-    private int i = -1;
-    Context c;
-
-    static String qName;
-    static String qPosition;
-    static String qAlphanum;
-
-
-
-    public static ScrollViewFragment newInstance(JoinedQ joinedQ, String qname, String qposition, String qalphanum)
-    {
-        Bundle args = new Bundle();
-        args.putString("title", joinedQ.getqName());
-        args.putString("qname", qname);
-        args.putString("qposition", joinedQ.getMyPos());
-        //qPosition = joinedQ.getMyPos();
-        Log.e("NEWINST", "Possition=" + joinedQ.getMyPos());
-        args.putString("qalphanum", joinedQ.getMyAlphanumCode());
-        ScrollViewFragment fragment = new ScrollViewFragment();
-        fragment.setArguments(args);
-        //Log.e("POSSITION",qPosition);
-        return fragment;
-    }
-
-    public void setInfo(JoinedQ joinedQ){
-        String pos = joinedQ.getMyPos();
-        int ps = Integer.valueOf(pos)%5;
-
-        RelativeLayout.LayoutParams btn1_params = (RelativeLayout.LayoutParams)btn1.getLayoutParams();
-        Log.e("SETINFO","BTNPARAM="+btn1_params.height);
-        btn1_params.width=75;
-        btn1_params.height=75;
-        btn1.setLayoutParams(btn1_params);
-        btn1.setText("");
-        RelativeLayout.LayoutParams btn2_params = (RelativeLayout.LayoutParams)btn2.getLayoutParams();
-        btn2_params.width=75;
-        btn2_params.height=75;
-        btn2.setLayoutParams(btn2_params);
-        btn2.setText("");
-        RelativeLayout.LayoutParams btn3_params = (RelativeLayout.LayoutParams)btn3.getLayoutParams();
-        btn3_params.width=75;
-        btn3_params.height=75;
-        btn3.setLayoutParams(btn3_params);
-        btn3.setText("");
-        RelativeLayout.LayoutParams btn4_params = (RelativeLayout.LayoutParams)btn4.getLayoutParams();
-        btn4_params.width = 75;
-        btn4_params.height= 75;
-        btn4.setLayoutParams(btn4_params);
-        btn4.setText("");
-        RelativeLayout.LayoutParams btn5_params = (RelativeLayout.LayoutParams)btn5.getLayoutParams();
-        btn5_params.width=75;
-        btn5_params.height=75;
-        btn5.setText("");
-        btn5.setLayoutParams(btn5_params);
-
-        Log.e("LOADINFO", "BTN" + String.valueOf(ps));
-        switch (ps){
-            case 1:
-                loadQinfo(btn1,pos);
-                break;
-            case 2:
-                loadQinfo(btn2,pos);
-                break;
-            case 3:
-                loadQinfo(btn3,pos);
-                break;
-            case 4:
-                loadQinfo(btn4,pos);
-                break;
-            case 0:
-                loadQinfo(btn5,pos);
-                break;
-        }
-
-
-    }
-
-    public void loadQinfo(Button qPositionbtn, final String position)
-    {
-        Log.e("LOADINFO", "Possition=" + position);
-        qPositionbtn.setText("#" + position);
-
-
-        qPositionbtn.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                dialog(c, "", position);
-            }
-        });
-        RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) qPositionbtn.getLayoutParams();
-        params.width = 150;
-        //ScaleAnimation sa = new ScaleAnimation(75,150,75,150);
-        //sa.setDuration(1000);
-        //qPositionbtn.setAnimation(sa);
-        qPositionbtn.animate();
-        params.height = 150;
-        //params.rightMargin = 150;
-        //params.rightMargin = 90;
-        qPositionbtn.setLayoutParams(params);
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState)
-    {
-        super.onCreate(savedInstanceState);
-        if(savedInstanceState!=null) {
-            qName = getArguments().getString("qname");
-            qPosition = getArguments().getString("qposition");
-            qAlphanum = getArguments().getString("qalphanum");
-        }
-
-      /*  LocalBroadcastManager.getInstance(getActivity()).registerReceiver(mMessageReceiver,
-                new IntentFilter("com.example.barnes.ummo.CATEGORIES"));*/
-    }
-
-
-
-    private BroadcastReceiver mMessageReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            // Extract data included in the Intent
-            String message = intent.getStringExtra("message");
-            try{
-                JSONObject obj = new JSONObject(message);
-                QUser user = new QUser(getActivity());
-                JoinedQ joinedQ = new JoinedQ(obj,user.getCellNumb());
-                joinedQ.save(getActivity(),user);
-               // button.setText(joinedQ.getMyPos());
-                Bundle bundle = ScrollViewFragment.this.getArguments();
-                Log.e("SCROLLVIEW", "POS=" + ScrollViewFragment.this.getArguments().getString("qposition"));
-               // loadQinfo(button, bundle.getString("qposition"));
-                //((Main_Activity)(getActivity())).qnames = new QUser(getActivity()).getLocalJoinedQList();
-                //adapter.notifyDataSetChanged();
-
-                /*for(int i=0;i<qnames.size();i++){
-                    ((ScrollViewFragment)adapter.getItem(i)).setInfo(qnames.get(i));
-                }*/
-
-                //hollyViewPager.removeAllViews();
-
-                //setView();
-            }
-            catch (JSONException jse){
-                Log.e("Q_ACTIVITY",jse.toString());
-            }
-            Log.d("receiver", "Got message: " + message);
-        }
-    };
-
-    @Nullable
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
-    {
-        View view = LayoutInflater.from(container.getContext()).inflate(R.layout.fragment_scroll, container, false);
-        c = view.getContext();
-        v=view;
-        //int pos = Integer.parseInt(qPosition);
-        String lastNumber = "4";
-        Button man_Q_1 = (Button)view.findViewById(R.id.man_one);
-
-        RequestButton requestButton = new RequestButton(c);
-        requestButton.setClientId("uber_ummo");
-        //requestButton.findViewById(R.id.man_one);
-        qPosition = getArguments().getString("qposition");
-        String pos = qPosition;
-        int ps = Integer.valueOf(qPosition)%5;
-        Button man_Q_2 = (Button)view.findViewById(R.id.man_two);
-        Button man_Q_3 = (Button)view.findViewById(R.id.man_three);
-        Button man_Q_4 = (Button)view.findViewById(R.id.man_four);
-        Button man_Q_5 = (Button)view.findViewById(R.id.man_five);
-        //man_Q_1.setText("5");
-        //loadQinfo(man_Q_1, "5");
-
-       // button = man_Q_1;
-        /*
-
-        if (lastNumber.equals("0"))
-        {
-         //   button=man_Q_5;
-            loadQinfo(man_Q_5, qPosition);
-        }
-        else if (lastNumber.equals("1"))
-        {
-       //     button=man_Q_1;
-            loadQinfo(man_Q_1, qPosition);
-        }
-        else if (lastNumber.equals("2"))
-        {
-         //   button = man_Q_2;
-            loadQinfo(man_Q_2, qPosition);
-        }
-        else if (lastNumber.equals("3"))
-        {
-           // button = man_Q_3;
-            loadQinfo(man_Q_3, qPosition);
-        }
-        else if (lastNumber.equals("4"))
-        {
-            loadQinfo(man_Q_4, qPosition);
-        }
-        else if (lastNumber.equals("5"))
-        {
-            loadQinfo(man_Q_5, qPosition);
-        }
-        else if (lastNumber.equals("6"))
-        {
-            loadQinfo(man_Q_1, qPosition);
-        }
-        else if (lastNumber.equals("7"))
-        {
-            loadQinfo(man_Q_2, qPosition);
-        }
-        else if (lastNumber.equals("8"))
-        {
-            loadQinfo(man_Q_3, qPosition);
-        }
-        else if (lastNumber.equals("9"))
-        {
-            loadQinfo(man_Q_4, qPosition);
-        }*/
-        //return inflater.inflate(R.layout.fragment_scroll, container, false);
-
-        switch (ps){
-            case 1:
-                loadQinfo(man_Q_1,pos);
-                break;
-            case 2:
-                loadQinfo(man_Q_2,pos);
-                break;
-            case 3:
-                loadQinfo(man_Q_3,pos);
-                break;
-            case 4:
-                loadQinfo(man_Q_4,pos);
-                break;
-            case 0:
-                loadQinfo(man_Q_5,pos);
-                break;
-        }
-        return view;
-    }
-
-    @Override
-    public void onViewCreated(View view, Bundle savedInstanceState)
-    {
-        super.onViewCreated(view, savedInstanceState);
-        ButterKnife.bind(this, view);
-            Log.e("CREATEVIEW", "Position" + getArguments().getString("qposition"));
-        title.setText(getArguments().getString("title"));
-        HollyViewPagerBus.registerScrollView(getActivity(), scrollView);
-    }
-
-    public void dialog(Context context, final String text, final String position)
-    {
-        final Context con = context;
-        final String text_ = text;
-        final SweetAlertDialog pDialog;
-        pDialog = new SweetAlertDialog(context, SweetAlertDialog.PROGRESS_TYPE)
-                .setTitleText(" "+text)
-                .setContentText("Loading...");
-        pDialog.show();
-        pDialog.setCancelable(false);
-        new CountDownTimer(800 * 7, 800)
-        {
-            public void onTick(long millisUntilFinished)
-            {
-                i++;
-                switch (i)
-                {
-                    case 0:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.blue_btn_bg_color));
-                        break;
-                    case 1:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.material_deep_teal_50));
-                        break;
-                    case 2:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                    case 3:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.material_deep_teal_20));
-                        break;
-                    case 4:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.material_blue_grey_80));
-                        break;
-                    case 5:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.warning_stroke_color));
-                        break;
-                    case 6:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                }
-            }
-            public void onFinish()
-            {
-                i = -1;
-                pDialog.setTitleText(" " + text_ + " Queue")
-                        .setContentText("Position in queue : "+ position +
-                                "\n" + "Length of queue : 22" +
-                                "\n" + "Service time : 04:17" +
-                                "\n" + "Wait time :01:05")
-                        .setConfirmText("OK")
-                        .showCancelButton(true)
-                        .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {
-                            @Override
-                            public void onClick(SweetAlertDialog sDialog) {
-                                //pDialog.dismiss();
-                            }
-                        });
-            }
-        }.start();
-    }
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/holder/SocialViewHolder.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/SocialViewHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/SocialViewHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,59 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.johnkil.print.PrintView;
-import com.unnamed.b.atv.model.TreeNode;
-
-import java.util.Random;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class SocialViewHolder extends TreeNode.BaseNodeViewHolder<SocialViewHolder.SocialItem> {
-
-    private static final String[] NAMES = new String[]{"Bruce Wayne", "Clark Kent", "Barry Allen", "Hal Jordan"};
-
-    public SocialViewHolder(Context context) {
-        super(context);
-    }
-
-    @Override
-    public View createNodeView(TreeNode node, SocialItem value) {
-        final LayoutInflater inflater = LayoutInflater.from(context);
-        final View view = inflater.inflate(R.layout.layout_social_node, null, false);
-
-        final PrintView iconView = (PrintView) view.findViewById(R.id.icon);
-        iconView.setIconText(context.getResources().getString(value.icon));
-
-        TextView connectionsLabel = (TextView) view.findViewById(R.id.connections);
-        Random r = new Random();
-        connectionsLabel.setText(r.nextInt(150) + " connections");
-
-        TextView userNameLabel = (TextView) view.findViewById(R.id.username);
-        userNameLabel.setText(NAMES[r.nextInt(4)]);
-
-        TextView sizeText = (TextView) view.findViewById(R.id.size);
-        sizeText.setText(r.nextInt(10) + " items");
-        return view;
-    }
-
-    @Override
-    public void toggle(boolean active)
-    {
-    }
-
-    public static class SocialItem
-    {
-        public int icon;
-        public SocialItem(int icon) {
-            this.icon = icon;
-        }
-        // rest will be hardcoded
-    }
-}
-
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/UmmoDaemon.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/UmmoDaemon.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/UmmoDaemon.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,100 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-import android.app.Activity;
-import android.app.NotificationManager;
-import android.app.PendingIntent;
-import android.app.Service;
-import android.app.TaskStackBuilder;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Binder;
-import android.os.IBinder;
-import android.support.v4.app.NotificationCompat;
-import android.util.Log;
-
-import com.example.barnes.ummo.R;
-
-/**
- * Created by barnes on 11/1/15.
- */
-public class UmmoDaemon extends Service
-{
-    //    private QUser user;
-    Activity calee;
-    private final IBinder mBinder = new LocalBinder();
-
-    int mId =0;
-    public UmmoDaemon() {
-    }
-
-    public void makeNotification(){
-        Log.e("eroor","Making Notification");
-        NotificationCompat.Builder mBuilder =
-                new NotificationCompat.Builder(this)
-                        .setSmallIcon(R.drawable.ic_launcher)
-                        .setContentTitle("This Is Your Ummoment")
-                        .setContentText("Click to View")
-                        .setAutoCancel(true)
-                        .setDefaults(NotificationCompat.DEFAULT_SOUND);
-// Creates an explicit intent for an Activity in your app
-        Intent resultIntent = new Intent(this,calee.getClass());
-
-// The stack builder object will contain an artificial back stack for the
-// started Activity.
-// This ensures that navigating backward from the Activity leads out of
-// your application to the Home screen.
-        TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);
-// Adds the back stack for the Intent (but not the Intent itself)
-        stackBuilder.addParentStack(calee.getClass());
-// Adds the Intent that starts the Activity to the top of the stack
-        stackBuilder.addNextIntent(resultIntent);
-        PendingIntent resultPendingIntent =
-                stackBuilder.getPendingIntent(
-                        0,
-                        PendingIntent.FLAG_UPDATE_CURRENT
-                );
-        mBuilder.setContentIntent(resultPendingIntent);
-        NotificationManager mNotificationManager =
-                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
-// mId allows you to update the notification later on.
-        mNotificationManager.notify(mId, mBuilder.build());
-
-    }
-    public void getUpadates(final QUser user){
-        Thread t = new Thread(new Runnable() {
-            @Override
-            public void run() {
-                while(true){
-                    Log.d("app","In Service");
-                    //user.updateJoinedQs("");
-                    try {
-                        Thread.sleep(60000);
-                    }
-
-                    catch (InterruptedException e){
-                        Log.e("Updates Thread",e.toString());
-                    }
-                }
-            }
-        });
-
-        t.start();
-    }
-
-    public class LocalBinder extends Binder {
-        public UmmoDaemon getService(){
-            return UmmoDaemon.this;
-        }
-    }
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        // TODO: Return the communication channel to the service.
-        //throw new UnsupportedOperationException("Not yet implemented");
-        return mBinder;
-    }
-
-    public void setCalee(Activity callingEctivity){
-        calee=callingEctivity;
-    }
-}
\ No newline at end of file
Index: app/src/main/gen/com/example/barnes/ummo/Manifest.java
===================================================================
--- app/src/main/gen/com/example/barnes/ummo/Manifest.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/gen/com/example/barnes/ummo/Manifest.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,7 +0,0 @@
-/*___Generated_by_IDEA___*/
-
-package com.example.barnes.ummo;
-
-/* This stub is only used by the IDE. It is NOT the Manifest class actually packed into the APK */
-public final class Manifest {
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/holder/ProfileHolder.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/ProfileHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/ProfileHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,43 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.johnkil.print.PrintView;
-import com.unnamed.b.atv.model.TreeNode;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class ProfileHolder extends TreeNode.BaseNodeViewHolder<IconTreeItemHolder.IconTreeItem> {
-
-
-    public ProfileHolder(Context context) {
-        super(context);
-    }
-
-    @Override
-    public View createNodeView(TreeNode node, IconTreeItemHolder.IconTreeItem value) {
-        final LayoutInflater inflater = LayoutInflater.from(context);
-        final View view = inflater.inflate(R.layout.layout_profile_node, null, false);
-        TextView tvValue = (TextView) view.findViewById(R.id.node_value);
-        tvValue.setText(value.text);
-
-        final PrintView iconView = (PrintView) view.findViewById(R.id.icon);
-        iconView.setIconText(context.getResources().getString(value.icon));
-        return view;
-    }
-
-    @Override
-    public void toggle(boolean active)
-    {
-    }
-
-    @Override
-    public int getContainerStyle() {
-        return R.style.TreeNodeStyleCustom;
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/holder/SelectableHeaderHolder_2.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/SelectableHeaderHolder_2.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/SelectableHeaderHolder_2.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,65 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.ivbaranov.mli.MaterialLetterIcon;
-import com.github.johnkil.print.PrintView;
-import com.unnamed.b.atv.model.TreeNode;
-
-import java.util.Random;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class SelectableHeaderHolder_2 extends TreeNode.BaseNodeViewHolder<MaterialLetterIconTreeItemHolder.IconTreeItem>
-{
-    public TextView tvValue;
-    private PrintView arrowView;
-    String serviceProviderName;
-    //private CheckBox nodeSelector;
-    //public MaterialLetterIcon mIcon;
-    public SelectableHeaderHolder_2(Context context) {
-        super(context);
-    }
-
-    @Override
-    public View createNodeView(final TreeNode node, MaterialLetterIconTreeItemHolder.IconTreeItem value)
-    {
-        final LayoutInflater inflater = LayoutInflater.from(context);
-        final View view = inflater.inflate(R.layout.layout_selectable_header, null, false);
-        tvValue = (TextView) view.findViewById(R.id.node_value);
-        tvValue.setText(value.text);
-        serviceProviderName = value.text.toString();
-        int[] mMaterialColors;
-        Random RANDOM = new Random();
-        MaterialLetterIcon mIcon = (MaterialLetterIcon) view.findViewById(R.id.icon);
-        //iconView.setIconText(context.getResources().getString(value.icon));
-        mMaterialColors = view.getContext().getResources().getIntArray(R.array.colors);
-        mIcon.setShapeColor(mMaterialColors[RANDOM.nextInt(mMaterialColors.length)]);
-        mIcon.setInitials(true);
-        mIcon.setInitialsNumber(1);
-        mIcon.setLetterSize(18);
-        mIcon.setLetter(serviceProviderName);
-        arrowView = (PrintView) view.findViewById(R.id.arrow_icon);
-        if (node.isLeaf())
-        {
-            arrowView.setVisibility(View.GONE);
-        }
-        return view;
-    }
-
-    @Override
-    public void toggle(boolean active)
-    {
-        arrowView.setIconText(context.getResources().getString(active ? R.string.ic_keyboard_arrow_down : R.string.ic_keyboard_arrow_right));
-    }
-
-    @Override
-    public void toggleSelectionMode(boolean editModeEnabled)
-    {
-    }
-}
\ No newline at end of file
Index: fabtransitionactivity/src/main/res/values/attr.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/src/main/res/values/attr.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/src/main/res/values/attr.xml	(revision )
@@ -1,0 +1,0 @@
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ .idea/gradle.xml	(revision )
@@ -17,6 +17,17 @@
             <option value="$PROJECT_DIR$/materiallettericon" />
           </set>
         </option>
+        <option name="myModules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+            <option value="$PROJECT_DIR$/fabtransitionactivity" />
+            <option value="$PROJECT_DIR$/floatbutton" />
+            <option value="$PROJECT_DIR$/hollyviewpager" />
+            <option value="$PROJECT_DIR$/library" />
+            <option value="$PROJECT_DIR$/materiallettericon" />
+          </set>
+        </option>
       </GradleProjectSettings>
     </option>
   </component>
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/gcm/MyInstanceIDListenerService.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/gcm/MyInstanceIDListenerService.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/gcm/MyInstanceIDListenerService.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,21 +0,0 @@
-package com.example.barnes.ummo.gcm;
-
-/**
- * Created by sihle on 12/3/15.
- */
-import android.content.Intent;
-
-import com.example.barnes.ummo.gcm.RegistrationIntentService;
-import com.google.android.gms.iid.InstanceIDListenerService;
-
-/**
- * Created by sihle on 11/28/15.
- */
-public class MyInstanceIDListenerService extends InstanceIDListenerService {
-    @Override
-    public void onTokenRefresh() {
-        // Fetch updated Instance ID token and notify of changes
-        Intent intent = new Intent(this, RegistrationIntentService.class);
-        startService(intent);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/SplashScreen.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/SplashScreen.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/SplashScreen.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,277 +0,0 @@
-package com.example.barnes.ummo;
-
-import android.app.Activity;
-import android.app.ProgressDialog;
-import android.content.Intent;
-import android.net.ConnectivityManager;
-import android.os.AsyncTask;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.widget.Toast;
-
-import com.example.barnes.ummo.fragment.SelectableTreeFragment;
-import com.example.barnes.ummo.gcm.RegistrationIntentService;
-import com.example.barnes.ummo.ummoAPI.QUser;
-import com.example.barnes.ummo.ummoAPI.QUserListner;
-
-import java.util.LinkedHashMap;
-import java.util.Timer;
-import java.util.TimerTask;
-
-import uk.co.chrisjenx.calligraphy.CalligraphyConfig;
-
-//import com.google.android.gms.analytics.GoogleAnalytics;
-//import com.google.android.gms.analytics.HitBuilders;
-///i//mport com.google.android.gms.analytics.Tracker;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class SplashScreen extends Activity implements QUserListner
-{
-    private ProgressDialog p_Dialog;
-    //Appended by Jay begins
-    // public static GoogleAnalytics analytics;
-    // public static Tracker tracker;
-    private String name = "Ummo Splash";
-    //Appended by Jay ends
-    final LinkedHashMap<String, Class<?>> listItems = new LinkedHashMap<>();
-    long Delay = 10000;
-
-    @Override
-    public void joinedQsError(String err) {
-
-    }
-
-    @Override
-    public void gotJoinedQs(String string) {
-        new QUser(this).getCategories();
-    }
-
-    @Override
-    public void qReady(String string) {
-
-    }
-
-    @Override
-    public void qError(String err) {
-
-    }
-
-    @Override
-    public void userRegistered(String string) {
-        // parse the string a JSONObject or JSONArray
-        //Registration  is successful , Start Main Activity
-    }
-
-    @Override
-    public void qJoined(String string) {
-
-
-
-    }
-
-    @Override
-    public void qLeft(String string) {
-
-    }
-
-    @Override
-    public void updated(String string) {
-        new QUser(this).getCategories();
-    }
-
-    @Override
-    public void categoriesReady(String string) {
-        Intent i = new Intent(this, SelectableTreeFragment.class);
-        i.putExtra("categoriesJSON", string);
-        startActivity(i);
-        finish();
-        overridePendingTransition(R.layout.fadein, R.layout.fadeout);
-    }
-
-    @Override
-    public void allQsReady(String string) {
-        Log.d("data",string);
-        listItems.put("Selectable Nodes", SelectableTreeFragment.class);
-        Class<?> clazz = listItems.values().toArray(new Class<?>[]{})[0];
-        Intent i = new Intent(SplashScreen.this, SingleFragmentActivity.class);
-        i.putExtra(SingleFragmentActivity.FRAGMENT_PARAM, clazz);
-        SplashScreen.this.startActivity(i);
-        SplashScreen.this.finish();
-        overridePendingTransition(R.layout.fadein, R.layout.fadeout);
-    }
-    @Override
-    public void userRegistrationError(String err) {
-        //There was an Error During Registration
-    }
-
-    @Override
-    public void qJoinedError(String err) {
-
-    }
-
-    @Override
-    public void qLeftError(String err) {
-
-    }
-
-    @Override
-    public void updateError(String err) {
-
-    }
-
-    @Override
-    public void categoriesError(String err) {
-
-    }
-
-    @Override
-    public void allQError(String err) {
-        Log.e("Error Getting Qs",err);
-    }
-
-    //End Ovrriding Interface
-    @Override
-    protected void onCreate(Bundle savedInstanceState)
-    {
-        super.onCreate(savedInstanceState);
-        Intent i = new Intent(this, RegistrationIntentService.class);
-        startService(i);
-        setContentView(R.layout.ummo_splash);
-        //Intent intent = new Intent(this, RegistrationIntentService.class);
-        //startService(intent);
-        //Appended by Jay begins
-        //analytics = GoogleAnalytics.getInstance(this);
-        //analytics.setLocalDispatchPeriod(1800);
-
-        //tracker = analytics.newTracker("UA-70767186-1");
-        //tracker.enableAutoActivityTracking(true);
-        //tracker.enableExceptionReporting(true);
-        //tracker.enableAdvertisingIdCollection(false);
-        //Log.i("GA says -----", "Setting screen name: " + name);
-        //tracker.setScreenName("Image~" + name);
-        //tracker.send(new HitBuilders.ScreenViewBuilder().build());
-        //Appended by Jay ends
-
-        CalligraphyConfig.initDefault(new CalligraphyConfig.Builder()
-                        .setDefaultFontPath("fonts/Ubuntu-C.ttf")
-                        .setFontAttrId(R.attr.fontPath)
-                        .build()
-        );
-
-        //finish();
-        QUser user = new QUser(SplashScreen.this);
-
-        //user.getAvailableQs();
-        //Start MainActivity.class
-        if (user.isRegistered()){
-            user.updateJoinedQs();
-       /*     listItems.put("Selectable Nodes", SelectableTreeFragment.class);
-            Class<?> clazz = listItems.values().toArray(new Class<?>[]{})[0];
-            Intent i = new Intent(SplashScreen.this, SingleFragmentActivity.class);
-            i.putExtra(SingleFragmentActivity.FRAGMENT_PARAM, clazz);
-            SplashScreen.this.startActivity(i);
-          */
-        }
-
-        else {
-            Intent intent = new Intent(SplashScreen.this,qman_signup.class);
-            startActivity(intent);
-            SplashScreen.this.finish();
-        }
-
-
-
-        Timer RunSplash = new Timer();
-        if (isInternetOn() == true)
-        {
-            TimerTask ShowSplash = new TimerTask() {
-                @Override
-                public void run() {
-                    //Close SplashScreenActivity.class
-
-                }
-
-                ;
-            };
-            //Start the timer
-            RunSplash.schedule(ShowSplash, Delay);
-        }
-    }
-
-    public final boolean isInternetOn()
-    {
-        //get Connectivity Manager object to check connection
-        ConnectivityManager connec = (ConnectivityManager)getSystemService(getBaseContext().CONNECTIVITY_SERVICE);
-        // Check for network connections
-        if (    connec.getNetworkInfo(0).getState() == android.net.NetworkInfo.State.CONNECTED  ||
-                connec.getNetworkInfo(0).getState() == android.net.NetworkInfo.State.CONNECTING ||
-                connec.getNetworkInfo(1).getState() == android.net.NetworkInfo.State.CONNECTING ||
-                connec.getNetworkInfo(1).getState() == android.net.NetworkInfo.State.CONNECTED )
-        {
-            //if connected with internet
-            //Toast.makeText(this, " Connected ", Toast.LENGTH_LONG).show();
-            return true;
-        }
-        else if ( connec.getNetworkInfo(0).getState() == android.net.NetworkInfo.State.DISCONNECTED ||
-                connec.getNetworkInfo(1).getState() == android.net.NetworkInfo.State.DISCONNECTED  )
-        {
-            Toast.makeText(this, "Please turn on your data or connect to a wifi hotspot", Toast.LENGTH_LONG).show();
-            return false;
-        }
-        return false;
-    }
-
-    class LoadQues extends AsyncTask<String, String, String>
-    {
-        /**
-         * Before starting background thread Show Progress Dialog
-         * */
-        @Override
-        protected void onPreExecute()
-        {
-            super.onPreExecute();
-            p_Dialog = new ProgressDialog(SplashScreen.this);
-            p_Dialog.setMessage("Loading Ques ...");
-            p_Dialog.setIndeterminate(false);
-            p_Dialog.setCancelable(false);
-            p_Dialog.show();
-        }
-        /**
-         * getting papers JSON
-         * */
-        protected String doInBackground(String... args)
-        {
-            Log.d("app","Does in background");
-            QUser user = new QUser(SplashScreen.this);
-            user.getAvailableQs();
-            return null;
-        }
-        /**
-         * After completing background task Dismiss the progress dialog
-         * **/
-        protected void onPostExecute(String file_url)
-        {
-
-        }
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-
-        return super.onOptionsItemSelected(item);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/FormPoster.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/FormPoster.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/FormPoster.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,59 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStreamWriter;
-import java.net.HttpURLConnection;
-import java.net.URL;
-import java.net.UnknownHostException;
-
-/**
- * Created by barnes on 11/1/15.
- */
-public class FormPoster
-{
-    //Always Override For QUserListner Interface
-
-
-
-    private URL url;
-    // from Chapter 5, Example 5-8
-    private QueryString query = new QueryString();
-
-    public FormPoster(URL url) {
-        if (!url.getProtocol().toLowerCase().startsWith("http")) {
-            throw new IllegalArgumentException(
-                    "Posting only works for http URLs");
-        }
-        this.url = url;
-    }
-
-    public void add(String name, String value) {
-        query.add(name, value);
-    }
-
-    public URL getURL() {
-        return this.url;
-    }
-
-    public InputStream post() throws IOException {
-// open the connection and prepare it to POST
-
-        HttpURLConnection uc = (HttpURLConnection)url.openConnection();
-        uc.setDoOutput(true);
-        try {
-            OutputStreamWriter out
-                    = new OutputStreamWriter(uc.getOutputStream(), "UTF-8");
-// The POST line, the Content-type header,
-// and the Content-length headers are sent by the URLConnection.
-// We just need to send the data
-            out.write(query.toString());
-            out.write("\r\n");
-            out.flush();
-        }
-
-        catch (UnknownHostException e){}
-// Return the response
-        return uc.getInputStream();
-    }
-}
\ No newline at end of file
Index: app/app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app.iml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/app.iml	(revision )
@@ -12,10 +12,7 @@
         <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
         <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
         <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
-        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugAndroidTest" />
-        <option name="COMPILE_JAVA_TEST_TASK_NAME" value="compileDebugAndroidTestSources" />
         <afterSyncTasks>
-          <task>generateDebugAndroidTestSources</task>
           <task>generateDebugSources</task>
         </afterSyncTasks>
         <option name="ALLOW_USER_CONFIGURATION" value="false" />
@@ -28,13 +25,14 @@
   </component>
   <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
-    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/androidTest/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/google-services/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/fabric/res/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/debug" type="java-resource" />
@@ -51,6 +49,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
@@ -58,6 +63,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
@@ -67,6 +79,8 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/builds" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/cn.pedant.sweetalert/library/1.3/jars" />
@@ -80,6 +94,8 @@
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.crashlytics.sdk.android/crashlytics-core/2.3.4/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.crashlytics.sdk.android/crashlytics/2.5.1/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.github.chenupt.android/multiplemodel/1.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.github.fengdai/alertdialogpro-core/0.2.6/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.github.fengdai/alertdialogpro-theme-material/0.2.6/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.github.johnkil.print/print/1.2.2/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.github.shell-software/fab/1.1.2/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.github.shell-software/uitools/1.1.0/jars" />
@@ -97,10 +113,16 @@
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/net.soulwolf.widget/dialogBuilder/1.0.0/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/uk.co.chrisjenx/calligraphy/2.1.0/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-runtime-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-verifier" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-support" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/reload-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/restart-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
@@ -111,9 +133,11 @@
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" exported="" name="butterknife-7.0.1" level="project" />
     <orderEntry type="library" exported="" name="google-http-client-1.19.0" level="project" />
+    <orderEntry type="library" exported="" name="alertdialogpro-theme-material-0.2.6" level="project" />
     <orderEntry type="library" exported="" name="play-services-base-8.3.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-measurement-8.3.0" level="project" />
     <orderEntry type="library" exported="" name="dialogBuilder-1.0.0" level="project" />
+    <orderEntry type="library" exported="" name="alertdialogpro-core-0.2.6" level="project" />
     <orderEntry type="library" exported="" name="slf4j-api-1.7.9" level="project" />
     <orderEntry type="library" exported="" name="recyclerview-v7-23.1.1" level="project" />
     <orderEntry type="library" exported="" name="uitools-1.1.0" level="project" />
@@ -138,8 +162,8 @@
     <orderEntry type="library" exported="" name="crashlytics-core-2.3.4" level="project" />
     <orderEntry type="library" exported="" name="circleimageview-2.0.0" level="project" />
     <orderEntry type="library" exported="" name="design-23.1.1" level="project" />
-    <orderEntry type="library" exported="" name="library-1.3" level="project" />
     <orderEntry type="library" exported="" name="play-services-basement-8.3.0" level="project" />
+    <orderEntry type="library" exported="" name="library-1.3" level="project" />
     <orderEntry type="library" exported="" name="google-http-client-jackson2-1.19.0" level="project" />
     <orderEntry type="library" exported="" name="viewmover-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="calligraphy-2.1.0" level="project" />
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/JSONParser.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/JSONParser.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/JSONParser.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,123 +0,0 @@
-package com.example.barnes.ummo;
-
-import android.util.Log;
-import org.json.JSONException;
-import org.json.JSONObject;
-import java.io.BufferedInputStream;
-import java.io.BufferedReader;
-import java.io.DataOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.UnsupportedEncodingException;
-import java.net.HttpURLConnection;
-import java.net.URL;
-import java.net.URLEncoder;
-import java.util.HashMap;
-
-public class JSONParser
-{
-    String charset = "UTF-8";
-    HttpURLConnection conn;
-    DataOutputStream wr;
-    StringBuilder result = new StringBuilder();
-    URL urlObj;
-    JSONObject jObj = null;
-    StringBuilder sbParams;
-    String paramsString;
-
-    public JSONObject makeHttpRequest(String url, String method, HashMap<String, String> params)
-    {
-        sbParams = new StringBuilder();
-        int i = 0;
-        for (String key : params.keySet())
-        {
-            try
-            {
-                if (i != 0)
-                {
-                    sbParams.append("&");
-                }
-                sbParams.append(key).append("=").append(URLEncoder.encode(params.get(key), charset));
-            } catch (UnsupportedEncodingException e)
-            {
-                e.printStackTrace();
-            }
-            i++;
-        }
-
-        if (method.equals("POST"))
-        {
-            // request method is POST
-            try
-            {
-                urlObj = new URL(url);
-                conn = (HttpURLConnection) urlObj.openConnection();
-                conn.setDoOutput(true);
-                conn.setRequestMethod("POST");
-                conn.setRequestProperty("Accept-Charset", charset);
-                conn.setReadTimeout(10000);
-                conn.setConnectTimeout(15000);
-                conn.connect();
-                paramsString = sbParams.toString();
-                wr = new DataOutputStream(conn.getOutputStream());
-                wr.writeBytes(paramsString);
-                wr.flush();
-                wr.close();
-            } catch (IOException e)
-            {
-                e.printStackTrace();
-            }
-        }
-        else if(method.equals("GET"))
-        {
-            // request method is GET
-            if (sbParams.length() != 0)
-            {
-                url += "?" + sbParams.toString();
-            }
-            try
-            {
-                urlObj = new URL(url);
-                conn = (HttpURLConnection) urlObj.openConnection();
-                conn.setDoOutput(false);
-                conn.setRequestMethod("GET");
-                conn.setRequestProperty("Accept-Charset", charset);
-                conn.setConnectTimeout(15000);
-                conn.connect();
-            } catch (IOException e)
-            {
-                e.printStackTrace();
-            }
-        }
-        try
-        {
-            //Receive the response from the server
-            InputStream in = new BufferedInputStream(conn.getInputStream());
-            BufferedReader reader = new BufferedReader(new InputStreamReader(in));
-            String line;
-            while ((line = reader.readLine()) != null)
-            {
-                result.append(line);
-            }
-
-            Log.d("JSON Parser", "result: " + result.toString());
-        } catch (IOException e)
-        {
-            e.printStackTrace();
-        }
-        conn.disconnect();
-        // try parse the string to a JSON object
-        try
-
-        {
-            jObj = new JSONObject(result.toString());
-        }
-        catch (JSONException e)
-        {
-            Log.e("JSON Parser", "Error parsing data " + e.toString());
-        }
-        // return JSON Object
-        return jObj;
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/db/Db.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/db/Db.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/db/Db.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,655 +0,0 @@
-package com.example.barnes.ummo.db;
-
-import android.content.ContentValues;
-import android.content.Context;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteException;
-import android.os.Build;
-import android.widget.Toast;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class Db
-{
-    private SQLiteDatabase db;
-    private final Context context;
-    private final DbHelper dbhelper;
-    public Db(Context c)
-    {
-        context = c;
-        dbhelper = new DbHelper(context, Constants.DATABASE_NAME, null, Constants.DATABASE_VERSION);
-        //dbhelper.onCreate(db);
-    }
-    public void close()
-    {
-        db.close();
-    }
-    public void open() throws SQLiteException
-    {
-        db = dbhelper.getWritableDatabase();
-        try
-        {
-            db = dbhelper.getWritableDatabase();
-            db.execSQL("PRAGMA foreign_keys=ON;");
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN)
-            {
-                db.setForeignKeyConstraintsEnabled(true);
-            }
-        }
-        catch(SQLiteException ex)
-        {
-            db = dbhelper.getReadableDatabase();
-        }
-    }
-
-    public long insertServiceTypeQ(int serviceTypeId, String qtypename)
-    {
-        long insert;
-        try
-        {
-            ContentValues newTaskValue = new ContentValues();
-            newTaskValue.put(Constants.Q_SERVICETYPEID, serviceTypeId);
-            newTaskValue.put(Constants.Q_SERVICETYPENAME, qtypename);
-            insert =  db.insert(Constants.TABLE_Q_SERVICETYPE, null, newTaskValue);
-        }
-        catch(SQLiteException ex)
-        {
-            Toast.makeText(context, "Not Saved", Toast.LENGTH_LONG).show();
-            insert = -1;
-        }
-        return insert;
-    }
-
-    public long insertServiceProviderQ(int serviceProviderId, String qprovidername, int qserviceTypeId)
-    {
-        long insert;
-        try
-        {
-            ContentValues newTaskValue = new ContentValues();
-            newTaskValue.put(Constants.Q_SERVICEPROVIDERID, serviceProviderId);
-            newTaskValue.put(Constants.Q_SERVICEPROVIDERNAME, qprovidername);
-            newTaskValue.put(Constants.Q_SERVICETYPEID, qserviceTypeId);
-            insert =  db.insert(Constants.TABLE_Q_SERVICEPROVIDER, null, newTaskValue);
-        }
-        catch(SQLiteException ex)
-        {
-            Toast.makeText(context, "Not Saved", Toast.LENGTH_LONG).show();
-            insert = -1;
-        }
-        return insert;
-    }
-
-    public long insertServiceNameQ(int serviceId, String qservicename, int qserviceTypeId, int qserviceProviderId)
-    {
-        long insert;
-        try
-        {
-            ContentValues newTaskValue = new ContentValues();
-            newTaskValue.put(Constants.Q_SERVICENAMEID, serviceId);
-            newTaskValue.put(Constants.Q_SERVICENAME, qservicename);
-            newTaskValue.put(Constants.Q_SERVICETYPEID, qserviceTypeId);
-            newTaskValue.put(Constants.Q_SERVICEPROVIDERID, qserviceProviderId);
-            insert =  db.insert(Constants.TABLE_Q_SERVICE, null, newTaskValue);
-        }
-        catch(SQLiteException ex)
-        {
-            Toast.makeText(context, "Not Saved", Toast.LENGTH_LONG).show();
-            insert = -1;
-        }
-        return insert;
-    }
-
-    public long insertQ(int qserviceid, String qname, int qtabPositon, String qposition)
-    {
-        long insert;
-        try
-        {
-            ContentValues newTaskValue = new ContentValues();
-            newTaskValue.put(Constants.Q_SERVICENAMEID, qserviceid);
-            newTaskValue.put(Constants.Q_NAME, qname);
-            newTaskValue.put(Constants.Q_TAB_POSITION, qtabPositon);
-            newTaskValue.put(Constants.Q_POSITION, qposition);
-            insert =  db.insert(Constants.TABLE_NAME_Q, null, newTaskValue);
-        }
-        catch(SQLiteException ex)
-        {
-            Toast.makeText(context, "Not Saved", Toast.LENGTH_LONG).show();
-            insert = -1;
-        }
-        return insert;
-    }
-
-    public boolean deleteQ(String num)
-    {
-        return db.delete(Constants.TABLE_NAME_Q,Constants.Q_ID + "=" + num,null) > 0;
-    }
-
-    public List<String> getJoinedQ_id(String qserviceName)
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q + " WHERE " + Constants.Q_NAME + " = '" + qserviceName +"'";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(0));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQService_id(String qserviceName)
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_Q_SERVICE + " WHERE " + Constants.Q_SERVICENAME + " = '" + qserviceName +"'";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(0));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQs_Joined()
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q;
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(3));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQsJoined()
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q;
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(0));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQNameJoined()
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q;
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(2));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQPositionJoined(String qname)
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q + " WHERE " + Constants.Q_NAME + " = '" + qname +"'";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(4));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQNameJoinedFromTabPosition(int tabPosition)
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q + " WHERE " + Constants.Q_TAB_POSITION + " = '" + tabPosition + "'";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(2));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQPosition()
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q ;
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(4));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQServiceProviderName(int id)
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_Q_SERVICEPROVIDER + " WHERE " + Constants.Q_SERVICETYPEID + " = '" + id +"'";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(1));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQServicePid(String pname)
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_Q_SERVICEPROVIDER + " WHERE " + Constants.Q_SERVICEPROVIDERNAME + " = '" + pname +"'";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(0));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getQServiceName(int id)
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_Q_SERVICE + " WHERE " + Constants.Q_SERVICEPROVIDERID + " = '" + id +"'";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(1));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getAllQServiceTypesName()
-    {
-        List<String> labels = new ArrayList<String>();
-        try
-        {
-            // Select All Query
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_Q_SERVICETYPE + " ORDER BY " + Constants.Q_SERVICETYPEID + " DESC";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            //Cursor c = db.query(Constants.TABLE_NAME_2, null, null, null, null, null, null);
-            // looping through all rows and adding to list
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    labels.add(c.getString(1));
-                }
-                while (c.moveToNext());
-            }
-            // closing connection
-            c.close();
-            //db.close();
-        }
-        catch(SQLiteException ex)
-        {
-            //return -1;
-        }
-        // returning lables
-        return labels;
-    }
-
-    public List<String> getQServiceTypeid(String tname)
-    {
-        List<String> labels = new ArrayList<String>();
-        try
-        {
-            // Select All Query
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_Q_SERVICETYPE + " WHERE " + Constants.Q_SERVICETYPENAME + " = '" + tname + "';";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            //Cursor c = db.query(Constants.TABLE_NAME_2, null, null, null, null, null, null);
-            // looping through all rows and adding to list
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    labels.add(c.getString(0));
-                }
-                while (c.moveToNext());
-            }
-            // closing connection
-            c.close();
-            //db.close();
-        }
-        catch(SQLiteException ex)
-        {
-            //return -1;
-        }
-        // returning lables
-        return labels;
-    }
-
-    public Cursor getQTabPosition()
-    {
-        //Cursor c = db.query(Constants.TABLE_NAME_1, null, null, null, null, null, null);
-        String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q + " ORDER BY " + Constants.Q_TAB_POSITION + " DESC";
-        db = dbhelper.getReadableDatabase();
-        Cursor c = db.rawQuery(selectQuery, null);
-        return c;
-    }
-
-    public List<String> getAllQTabPosition()
-    {
-        List<String> labels = new ArrayList<String>();
-        try
-        {
-            // Select All Query
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q + " ORDER BY " + Constants.Q_TAB_POSITION + " DESC";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            //Cursor c = db.query(Constants.TABLE_NAME_2, null, null, null, null, null, null);
-            // looping through all rows and adding to list
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    labels.add(c.getString(1));
-                }
-                while (c.moveToNext());
-            }
-            // closing connection
-            c.close();
-            //db.close();
-        }
-        catch(SQLiteException ex)
-        {
-            //return -1;
-        }
-        // returning lables
-        return labels;
-    }
-
-    public List<String> getAllQId()
-    {
-        List<String> labels = new ArrayList<String>();
-        try
-        {
-            // Select All Query
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q + " ORDER BY " + Constants.Q_TAB_POSITION + " DESC";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            //Cursor c = db.query(Constants.TABLE_NAME_2, null, null, null, null, null, null);
-            // looping through all rows and adding to list
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    labels.add(c.getString(0));
-                }
-                while (c.moveToNext());
-            }
-            // closing connection
-            c.close();
-            //db.close();
-        }
-        catch(SQLiteException ex)
-        {
-            //return -1;
-        }
-        // returning lables
-        return labels;
-    }
-
-
-    public List<String> getQName(String name)
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q + " WHERE " + Constants.Q_NAME + " = '" + name +"'";
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(1));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-    public List<String> getJoinedQName()
-    {
-        List<String> qName = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q;
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    qName.add(c.getString(1));
-                }
-                while(c.moveToNext());
-            }
-            else
-            {
-
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return qName;
-    }
-
-
-    public List<String> getAllQs()
-    {
-        List<String> labels = new ArrayList<String>();
-        try
-        {
-            String selectQuery = "SELECT * FROM " + Constants.TABLE_NAME_Q + " ORDER BY " + Constants.Q_TAB_POSITION;
-            db = dbhelper.getReadableDatabase();
-            Cursor c = db.rawQuery(selectQuery, null);
-            // looping through all rows and adding to list
-            if (c.moveToFirst())
-            {
-                do
-                {
-                    labels.add(c.getString(2));
-                }
-                while (c.moveToNext());
-            }
-            c.close();
-        }
-        catch(SQLiteException ex)
-        {
-        }
-        return labels;
-    }
-
-
-    public boolean updateQPosition(String qid, String qname, String qtabPosition, String qposition)
-    {
-        ContentValues value = new ContentValues();
-        value.put(Constants.Q_NAME, qname);
-        value.put(Constants.Q_TAB_POSITION, qtabPosition);
-        value.put(Constants.Q_POSITION, qposition);
-        return db.update(Constants.TABLE_NAME_Q,value, Constants.Q_ID + "=" + qid,null) > 0;
-    }
-}
Index: app/src/main/java/com/example/barnes/ummo/holder/PlaceHolderHolder.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/PlaceHolderHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/PlaceHolderHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,53 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.johnkil.print.PrintView;
-import com.unnamed.b.atv.model.TreeNode;
-
-import java.util.Random;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class PlaceHolderHolder extends TreeNode.BaseNodeViewHolder<PlaceHolderHolder.PlaceItem> {
-
-
-    public PlaceHolderHolder(Context context) {
-        super(context);
-    }
-
-    @Override
-    public View createNodeView(TreeNode node, PlaceItem value) {
-        final LayoutInflater inflater = LayoutInflater.from(context);
-        final View view = inflater.inflate(R.layout.layout_place_node, null, false);
-
-
-        TextView placeName = (TextView) view.findViewById(R.id.place_name);
-        placeName.setText(value.name);
-
-        Random r = new Random();
-        boolean like = r.nextBoolean();
-
-        PrintView likeView = (PrintView) view.findViewById(R.id.like);
-        likeView.setIconText(context.getString(like ? R.string.ic_thumbs_up : R.string.ic_thumbs_down));
-        return view;
-    }
-
-    @Override
-    public void toggle(boolean active) {
-    }
-
-    public static class PlaceItem {
-        public String name;
-
-        public PlaceItem(String name) {
-            this.name = name;
-        }
-        // rest will be hardcoded
-    }
-}
\ No newline at end of file
Index: fabtransitionactivity/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/src/main/AndroidManifest.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/src/main/AndroidManifest.xml	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/holder/IconTreeItemHolder.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/IconTreeItemHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/IconTreeItemHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,75 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.johnkil.print.PrintView;
-import com.unnamed.b.atv.model.TreeNode;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class IconTreeItemHolder extends TreeNode.BaseNodeViewHolder<IconTreeItemHolder.IconTreeItem> {
-    public TextView tvValue;
-    private PrintView arrowView;
-
-    public IconTreeItemHolder(Context context) {
-        super(context);
-    }
-
-    @Override
-    public View createNodeView(final TreeNode node, IconTreeItem value)
-    {
-        final LayoutInflater inflater = LayoutInflater.from(context);
-        final View view = inflater.inflate(R.layout.layout_icon_node, null, false);
-        tvValue = (TextView) view.findViewById(R.id.node_value);
-        tvValue.setText(value.text);
-
-        final PrintView iconView = (PrintView) view.findViewById(R.id.icon);
-        iconView.setIconText(context.getResources().getString(value.icon));
-
-        arrowView = (PrintView) view.findViewById(R.id.arrow_icon);
-
-        view.findViewById(R.id.btn_addFolder).setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                TreeNode newFolder = new TreeNode(new IconTreeItem("New Folder",R.string.ic_folder));
-                getTreeView().addNode(node, newFolder);
-            }
-        });
-
-        view.findViewById(R.id.btn_delete).setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                getTreeView().removeNode(node);
-            }
-        });
-
-        //if My computer
-        if (node.getLevel() == 1)
-        {
-            view.findViewById(R.id.btn_delete).setVisibility(View.GONE);
-        }
-        return view;
-    }
-
-    @Override
-    public void toggle(boolean active) {
-        arrowView.setIconText(context.getResources().getString(active ? R.string.ic_keyboard_arrow_down : R.string.ic_keyboard_arrow_right));
-    }
-
-    public static class IconTreeItem
-    {
-        public int icon;
-        public String text;
-
-        public IconTreeItem(String text,int icon)
-        {
-            this.icon = icon;
-            this.text = text;
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/JoinedQ.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/JoinedQ.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/JoinedQ.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,200 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-import android.app.Activity;
-import android.app.Fragment;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
-import android.util.Log;
-
-import com.example.barnes.ummo.R;
-import com.example.barnes.ummo.fragment.Qfragment;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-/**
- * Created by sihle on 12/19/15.
- */
-public class JoinedQ {
-    private String qName;
-    private String qId;
-    private String ttdq;
-    private String tltdq;
-    private String cellnumb;
-    private String myPos;
-    private int qLength;
-    private String myAlphanumCode;
-    private Qfragment fragment;
-
-    public JoinedQ(){
-
-    }
-
-    public void deleateQ(String q_id,Activity activity){
-
-        PreferenceManager.getDefaultSharedPreferences(activity).edit().remove(q_id).commit();
-    }
-
-    public void readByQId(String q_id,Activity activity){
-        String qJSONString = PreferenceManager.getDefaultSharedPreferences(activity).getString(q_id,"Q_ID");
-        if(qJSONString!="Q_ID"){
-            try{
-                JSONObject object = new JSONObject(qJSONString);
-                qName=object.getString("qName");
-                qId=object.getString("qId");
-                //ttdq=object.getString("ttdq");
-                //tltdq=object.getString("tltdq");
-                cellnumb=object.getString("cellnumb");
-                myPos=object.getString("myPos");
-                Log.e("READPOS",myPos);
-                qLength=object.getInt("qLength");
-                myAlphanumCode=object.getString("myAlphanumCode");
-            }
-
-            catch (JSONException jse){
-                Log.e("READBYQID",jse.toString());
-                Log.e("STRING",qJSONString);
-            }
-        }
-
-        else {
-            Log.e("READQBYID",qJSONString);
-        }
-    }
-
-    public void save(Activity activity,QUser user){
-        try{
-            JSONObject object = new JSONObject();
-            object.put("qName",qName);
-            object.put("qId",qId);
-           // object.put("ttdq",ttdq);
-           // object.put("tltdq",tltdq);
-            object.put("cellnumb",cellnumb);
-            object.put("myPos",myPos);
-            object.put("qLength",qLength);
-            object.put("myAlphanumCode", myAlphanumCode);
-            Log.e("SAVING",object.toString());
-            if(user.isQJoined(qId)){
-                PreferenceManager.getDefaultSharedPreferences(activity).edit().putString(qId,object.toString()).commit();
-            }
-
-        }
-        catch (JSONException jse){
-            Log.e("SAVINGQ",jse.toString());
-        }
-    }
-
-    public JoinedQ(String name,String id, String ttq, String ltq, String myp,int lenth,String alp,Qfragment f){
-        qName=name;
-        qId=id;
-        ttdq=ttq;
-        tltdq=ltq;
-        myPos=myp;
-        qLength=lenth;
-        myAlphanumCode=alp;
-        fragment=f;
-    }
-
-    public String getqName(){
-        return qName;
-    }
-
-    public String getqId(){
-        return qId;
-    }
-
-    public String getTtdq(){
-        return ttdq;
-    }
-
-    public String getTltdq(){
-        return tltdq;
-    }
-
-    public String getMyAlphanumCode(){
-        return myAlphanumCode;
-    }
-
-    public String getMyPos(){
-        return myPos;
-    }
-
-    public Qfragment getFragment(){
-        return fragment;
-    }
-
-    public void setName(String name){
-        qName = name;
-    }
-
-    public void setqId(String id){
-        qId = id;
-
-    }
-
-    public void setTtdq(String tdq){
-        ttdq = tdq;
-    }
-
-    public void setTltdq(String _tltdq){
-        tltdq=_tltdq;
-    }
-
-    public void setFragment(Qfragment _fragment){
-        fragment=_fragment;
-    }
-
-    public JoinedQ(String qid,Activity activity){
-        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(activity);
-        String q_data = sp.getString(qid, "Q_DATA");
-        String cell = sp.getString(activity.getString(R.string.PREF_USER_CELLNUMBER),"CELL");
-        if (q_data!="Q_DATA"){
-            JSONObject object;
-            try {
-                object = new JSONObject(q_data);
-                setFromJSON(object,cell);
-            }
-
-            catch (JSONException jse){
-                Log.e("JSON_ER",jse.toString());
-            }
-
-        }
-    }
-
-
-
-    public JoinedQ(JSONObject object,String cell){
-        setFromJSON(object,cell);
-    }
-
-
-
-
-    public void setFromJSON(JSONObject object,String cell){
-        try {
-            cellnumb = cell;
-            qName=object.getJSONObject("managedQ").getString("qName");
-            qId=object.getString("cellNum");
-            myPos=String.valueOf(object.getJSONObject("managedQ").getJSONObject("qErs").getJSONObject(cellnumb).getInt("position"));
-            Log.e("JQPOSSIT",myPos);
-            qLength = object.getJSONObject("managedQ").getJSONObject("qErs").length();
-            myAlphanumCode=object.getJSONObject("managedQ").getJSONObject("qErs").getJSONObject(cellnumb).getString("numCode");
-        }
-
-        catch (JSONException jse){
-            Log.e("JOINEDQ",jse.toString());
-            Log.e("JOINEDQ","Object="+object.toString());
-        }
-    }
-
-}
-
-
-/*This class is instantiated when new Q data from the cloud is got.
-The q data is saved as a shared preferance, with the key being the q_id
-The q_id is also added to the array of joined qs that are saved as a JSONArray string on the sharedPreferences.
-Each time the list of joined qs is got from the internet, the The list of, all q_data is deleated, new q data is created and saved
-from the internet data, and new joined q list is created and saved.
- */
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ .idea/vcs.xml	(revision )
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/MyAdapter.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/MyAdapter.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/MyAdapter.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,149 +0,0 @@
-package com.example.barnes.ummo;
-
-import android.content.Context;
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-import com.github.ivbaranov.mli.MaterialLetterIcon;
-
-import java.util.Random;
-
-/**
- * Created by barnes on 1/10/16.
- */
-public class MyAdapter extends RecyclerView.Adapter<MyAdapter.ViewHolder>
-{
-    private static final int TYPE_HEADER = 0;  // Declaring Variable to Understand which View is being worked on
-    // IF the view under inflation and population is header or Item
-    private static final int TYPE_ITEM = 1;
-    private String mNavTitles[]; // String Array to store the passed titles Value from MainActivity.java
-    private int mIcons[];       // Int Array to store the passed icons resource value from MainActivity.java
-    private String name;        //String Resource for header View Name
-    private int profile;        //int Resource for header view profile picture
-    private String email;       //String Resource for header view email
-    int[] mMaterialColors;
-    Random RANDOM = new Random();
-    Context cont;
-
-    //iconView.setIconText(context.getResources().getString(value.icon));
-
-    // Creating a ViewHolder which extends the RecyclerView View Holder
-    // ViewHolder are used to to store the inflated views in order to recycle them
-
-    public static class ViewHolder extends RecyclerView.ViewHolder
-    {
-        int Holderid;
-        TextView textView;
-        ImageView imageView;
-        MaterialLetterIcon profile;
-        TextView Name;
-        TextView email;
-        MaterialLetterIcon mIcon;
-
-        public ViewHolder(View itemView,int ViewType)
-        {
-            //Creating ViewHolder Constructor with View and viewType As a parameter
-            super(itemView);
-            //Here we set the appropriate view in accordance with the the view type as passed when the holder object is created
-            if(ViewType == TYPE_ITEM)
-            {
-                textView = (TextView) itemView.findViewById(R.id.rowText); // Creating TextView object with the id of textView from item_row.xml
-                imageView = (ImageView) itemView.findViewById(R.id.rowIcon);// Creating ImageView object with the id of ImageView from item_row.xml
-                //mIcon = (ImageView) itemView.findViewById(R.id.rowIcon);
-                Holderid = 1;                                               // setting holder id as 1 as the object being populated are of type item row
-            }
-            else
-            {
-                Name = (TextView) itemView.findViewById(R.id.name);         // Creating Text View object from header.xml for name
-                email = (TextView) itemView.findViewById(R.id.email);       // Creating Text View object from header.xml for email
-                profile = (MaterialLetterIcon) itemView.findViewById(R.id.circleView);// Creating Image view object from header.xml for profile pic
-                Holderid = 0;                                                // Setting holder id = 0 as the object being populated are of type header view
-            }
-        }
-    }
-
-    public MyAdapter(String Titles[], int Icons[], String Name, String Email, int Profile, Context context)
-    {
-        // MyAdapter Constructor with titles and icons parameter
-        // titles, icons, name, email, profile pic are passed from the main activity as we
-        mNavTitles = Titles;                //have seen earlier
-        mIcons = Icons;
-        name = Name;
-        email = Email;
-        profile = Profile;
-        cont = context;//here we assign those passed values to the values we declared here
-        //in adapter
-    }
-    //Below first we ovverride the method onCreateViewHolder which is called when the ViewHolder is
-    //Created, In this method we inflate the item_row.xml layout if the viewType is Type_ITEM or else we inflate header.xml
-    // if the viewType is TYPE_HEADER
-    // and pass it to the view holder
-    @Override
-    public MyAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType)
-    {
-        if (viewType == TYPE_ITEM)
-        {
-            View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_row,parent,false); //Inflating the layout
-            ViewHolder vhItem = new ViewHolder(v,viewType); //Creating ViewHolder and passing the object of type view
-            mMaterialColors = cont.getResources().getIntArray(R.array.colors);
-            return vhItem; // Returning the created object
-            //inflate your layout and pass it to view holder
-        } else if (viewType == TYPE_HEADER)
-        {
-            View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.header,parent,false); //Inflating the layout
-            ViewHolder vhHeader = new ViewHolder(v,viewType); //Creating ViewHolder and passing the object of type view
-            mMaterialColors = cont.getResources().getIntArray(R.array.colors);
-            return vhHeader; //returning the object created
-        }
-        return null;
-    }
-    //Next we override a method which is called when the item in a row is needed to be displayed, here the int position
-    //Tells us item at which position is being constructed to be displayed and the holder id of the holder object tell us
-    //which view type is being created 1 for item row
-    @Override
-    public void onBindViewHolder(MyAdapter.ViewHolder holder, int position)
-    {
-        if(holder.Holderid ==1)
-        {                              // as the list view is going to be called after the header view so we decrement the
-            // position by 1 and pass it to the holder while setting the text and image
-            holder.textView.setText(mNavTitles[position - 1]); // Setting the Text with the array of our Titles
-            holder.imageView.setImageResource(mIcons[position - 1]);// Settimg the image with array of our icons
-        }
-        else
-        {
-            //holder.profile.setI(profile);           // Similarly we set the resources for header view
-            holder.profile.setShapeColor(mMaterialColors[RANDOM.nextInt(mMaterialColors.length)]);
-            holder.profile.setInitials(true);
-            holder.profile.setInitialsNumber(2);
-            holder.profile.setLetterSize(18);
-            holder.profile.setLetter(name);
-            holder.Name.setText(name);
-            holder.email.setText(email);
-        }
-    }
-
-    // This method returns the number of items present in the list
-    @Override
-    public int getItemCount()
-    {
-        return mNavTitles.length+1; // the number of items in the list will be +1 the titles including the header view.
-    }
-
-    // Witht the following method we check what type of view is being passed
-    @Override
-    public int getItemViewType(int position)
-    {
-        if (isPositionHeader(position))
-            return TYPE_HEADER;
-        return TYPE_ITEM;
-    }
-
-    private boolean isPositionHeader(int position)
-    {
-        return position == 0;
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/QUserListner.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/QUserListner.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/QUserListner.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,26 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-/**
- * Created by barnes on 11/1/15.
- */
-public interface QUserListner
-{
-    public void userRegistered(String string);
-    public void qJoined(String string);
-    public void qLeft(String string);
-    public void updated(String string);
-    public void categoriesReady(String string);
-    public void allQsReady(String string);
-    public  void qReady(String string);
-    public void gotJoinedQs(String string);
-
-    //Errors
-    public void joinedQsError(String err);
-    public void userRegistrationError(String err);
-    public void qJoinedError(String err);
-    public void qLeftError(String err);
-    public void updateError(String err);
-    public void categoriesError(String err);
-    public void allQError(String err);
-    public void qError(String err);
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/holder/HeaderHolder.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/HeaderHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/HeaderHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,48 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.johnkil.print.PrintView;
-import com.unnamed.b.atv.model.TreeNode;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class HeaderHolder extends TreeNode.BaseNodeViewHolder<IconTreeItemHolder.IconTreeItem> {
-
-    private PrintView arrowView;
-
-    public HeaderHolder(Context context) {
-        super(context);
-    }
-
-    @Override
-    public View createNodeView(TreeNode node, IconTreeItemHolder.IconTreeItem value) {
-        final LayoutInflater inflater = LayoutInflater.from(context);
-        final View view = inflater.inflate(R.layout.layout_header_node, null, false);
-        TextView tvValue = (TextView) view.findViewById(R.id.node_value);
-        tvValue.setText(value.text);
-
-        final PrintView iconView = (PrintView) view.findViewById(R.id.icon);
-        iconView.setIconText(context.getResources().getString(value.icon));
-
-        arrowView = (PrintView) view.findViewById(R.id.arrow_icon);
-        if (node.isLeaf()) {
-            arrowView.setVisibility(View.INVISIBLE);
-        }
-
-        return view;
-    }
-
-    @Override
-    public void toggle(boolean active) {
-        arrowView.setIconText(context.getResources().getString(active ? R.string.ic_keyboard_arrow_down : R.string.ic_keyboard_arrow_right));
-    }
-
-
-}
-
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ .idea/misc.xml	(revision )
@@ -37,7 +37,7 @@
     <ConfirmationsSetting value="0" id="Add" />
     <ConfirmationsSetting value="0" id="Remove" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/build.gradle	(revision )
@@ -1,6 +1,6 @@
-apply plugin: 'android-sdk-manager'
-apply plugin: 'com.android.application'
 
+apply plugin: 'com.android.application'
+apply plugin: 'com.google.gms.google-services'
 buildscript {
     repositories {
         maven { url 'https://maven.fabric.io/public' }
@@ -22,7 +22,7 @@
     compileSdkVersion 23
     buildToolsVersion "23.0.1"
     defaultConfig {
-        applicationId "com.example.barnes.ummo"
+        applicationId "com.ummo.barnes.qman"
         minSdkVersion 16
         targetSdkVersion 23
         versionCode 1
@@ -67,6 +67,7 @@
     compile 'com.android.support:recyclerview-v7:23.1.1'
     compile 'com.android.support:cardview-v7:23.1.1'
     compile 'com.github.johnkil.print:print:1.2.2'
+    compile 'com.github.fengdai:alertdialogpro-theme-material:0.2.6'
     compile 'cn.pedant.sweetalert:library:1.3'
     compile 'com.google.guava:guava:18.0'
     compile 'com.github.chenupt.android:multiplemodel:1.1.0@aar'
\ No newline at end of file
Index: fabtransitionactivity/maven-push.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/maven-push.gradle	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/maven-push.gradle	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/ummoTester.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoTester.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoTester.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,21 +0,0 @@
-package com.example.barnes.ummo;
-
-/**
- * Created by blinker on 12/3/15.
- */
-public class ummoTester {
-    String alias;
-    int cellNum, testID;
-
-    public ummoTester (String al, int cell, int id){
-        this.alias = al;
-        this.cellNum = cell;
-        this.testID = id;
-    }
-
-    public ummoTester(String al, int cell) {
-        this.alias = al;
-        this.cellNum = cell;
-        this.testID = -1;
-    }
-}
Index: app/src/main/java/com/example/barnes/ummo/SingleFragmentActivity.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/SingleFragmentActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/SingleFragmentActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,272 +0,0 @@
-package com.example.barnes.ummo;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-
-import com.example.barnes.ummo.db.Db;
-import com.example.barnes.ummo.fragment.SelectableTreeFragment;
-import com.example.barnes.ummo.holder.SelectableItemHolder;
-import com.example.barnes.ummo.ummoAPI.QUser;
-import com.example.barnes.ummo.ummoAPI.QUserListner;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-/**
- * Created by barnes on 8/7/15.
- */
-public class SingleFragmentActivity extends Activity implements QUserListner
-{
-    Db db;
-    private QUser user;
-    private vQ selectedQ;
-    private String categoriesJSON;
-    private String qsJSON;
-    private String qJSON;
-    private String joinedQsJSON;
-    private String serviceProvidersJSON;
-    //Some setters and getters for qs
-    public void setSelectedQ(vQ vq)
-    {
-        selectedQ=vq;
-    }
-    public String getJoinedQsJSON(){
-        return joinedQsJSON;
-    }
-    public void joinSelectedQ(){
-        user.joinQ(selectedQ.getCellNumb());
-    }
-    public void setQinfoDialog(SelectableItemHolder info){
-        selectedQ.setInfo(info);
-    }
-    public vQ getSelectedQ(){
-        return selectedQ;
-    }
-    public void setSelectedQ(String cell)
-    {
-        selectedQ = new vQ();
-        selectedQ.setCellNumb(cell);
-    }
-    public void setSelectedQ(JSONObject obj)
-    {
-        selectedQ = new vQ();
-        selectedQ.setFromJSON(obj);
-    }
-    //end setters and getters for qs
-    //Overriding for QUserListener Begins Here
-    //sucess Handlers
-    @Override
-    public void gotJoinedQs(String string) {
-        Log.d("JoinedQs",string);
-    }
-    @Override
-    public void qReady(String string)
-    {
-        qJSON=string;
-        Log.d("QDATA",string);
-        try
-        {
-            JSONObject object = new JSONObject(qJSON);
-            selectedQ.getInfo().dialog(qJSON);
-        }
-        catch (JSONException jse)
-        {
-            Log.d("Error",jse.toString());
-        }
-    }
-
-    @Override
-    public void qError(String err)
-    {
-    }
-
-    public String getCategoriesJSON(){
-        return categoriesJSON;
-    }
-
-    public String getQsJSON(){
-        return qsJSON;
-    }
-
-    public String getServiceProvidersJSON(){
-        return serviceProvidersJSON;
-    }
-
-    public QUser getUser(){
-        return user;
-    }
-
-    public final static String FRAGMENT_PARAM = "fragment";
-
-    @Override
-    public void userRegistered(String string)
-    {
-    }
-
-    @Override
-    public void qJoined(String string)
-    {
-    }
-
-    @Override
-    public void qLeft(String string)
-    {
-    }
-
-    @Override
-    public void updated(String string)
-    {
-        Log.d("joinedQs",string);
-        try
-        {
-            //JSONObject object = new JSONObject(string);
-            JSONArray JSONqs = new JSONArray(string);
-            joinedQsJSON = JSONqs.toString();
-            if(JSONqs.length()>0)
-            {
-                Intent i = new Intent();
-                i.putExtra("joinedQs",joinedQsJSON);
-                //i.putExtra("qpos",string2);
-                i.setClass(this, Main_Activity.class);
-                this.startActivity(i);
-            }
-        }
-        catch (JSONException jse)
-        {
-            Log.e("JoinedQs",jse.toString());
-        }
-    }
-
-    @Override
-    public void categoriesReady(String string)
-    {
-        categoriesJSON = string;
-      /*  Bundle b = getIntent().getExtras();
-        Class<?> fragmentClass = (Class<?>) b.get(FRAGMENT_PARAM);
-        Fragment f = (Fragment)(new SelectableTreeFragment());//Fragment.instantiate(this, SelectableTreeFragment.class);
-        f.setArguments(b);
-        getFragmentManager().beginTransaction().replace(R.id.fragment, f, fragmentClass.getName()).commit();
-        //  user.makeNotification();
-        //Intent i = new Intent(SingleFragmentActivity.this, SelectableTreeFragment.class);
-        //i.putExtra("message", b);
-        //startActivity(i);*/
-    }
-    @Override
-    public void allQsReady(String string)
-    {
-        qsJSON = string;
-        Log.d("qs",string);
-    }
-    //Error Handlers
-    @Override
-    public void joinedQsError(String err)
-    {
-    }
-    @Override
-    public void userRegistrationError(String err)
-    {
-    }
-    @Override
-    public void qJoinedError(String err)
-    {
-    }
-    @Override
-    public void qLeftError(String err)
-    {
-    }
-    @Override
-    public void updateError(String err)
-    {
-    }
-    @Override
-    public void categoriesError(String err)
-    {
-    }
-    @Override
-    public void allQError(String err)
-    {
-    }
-    //End Overriding for QUserListener
-    @Override
-    protected void onCreate(Bundle bundle)
-    {
-        super.onCreate(bundle);
-        setContentView(R.layout.activity_single_fragment);
-        db = new Db(this);
-        db.open();
-        db.insertServiceTypeQ(101, "Financial Services");
-        db.insertServiceProviderQ(102, "SwaziBank", 101);
-        db.insertServiceProviderQ(103, "FNB", 101);
-        db.insertServiceNameQ(104, "Deposit", 101, 102);
-        db.insertServiceNameQ(105, "Withdrawals", 101, 103);
-        //db.insertServiceNameQ(106, "Foreign Exchange", 101, 102);
-        /*db.insertServiceTypeQ(101, "Government Services");
-        db.insertServiceProviderQ(201, "SRA", 101);
-        db.insertServiceNameQ(304, "Tax Payment", 101, 201);
-        db.insertServiceNameQ(305,"Trading licence",101,201);
-        /*db.insertServiceTypeQ(102, "MTN Services");
-        db.insertServiceProviderQ(401, "Ezulwini MTN", 102);
-        db.insertServiceNameQ(500, "SIM Swap", 102, 401);
-        db.insertServiceNameQ(501, "Air Time", 102, 401);
-        db.insertServiceNameQ(502, "Internet Services", 102, 401);
-        //db.insertServiceTypeQ(100, "MTN Services");
-        //db.insertServiceProviderQ(2, "Ezulwini MTN", 1);
-        //db.insertServiceNameQ(3, "SIM Swap", 1, 2);
-        db.close();
-        //db.insertServiceNameQ(501, "Air Time", 102, 401);
-        //db.insertServiceNameQ(502, "Internet Services", 102, 401);*/
-        user = new QUser(this);
-        user.getCategories();
-        // Bundle b = getIntent().getExtras();
-        //Class<?> fragmentClass = (Class<?>) b.get(FRAGMENT_PARAM);
-        //Fragment f = Fragment.instantiate(this, fragmentClass.getName());
-        //f.setArguments(b);
-        //getFragmentManager().beginTransaction().replace(R.id.fragment, f, fragmentClass.getName()).commit();
-        //Log.e("about", "to call function");
-        //user.startUpdatesDaemon();
-        Bundle b = getIntent().getExtras();
-        Class<?> fragmentClass = (Class<?>) b.get(FRAGMENT_PARAM);
-        /*Fragment f = Fragment.instantiate(this, fragmentClass.getName());
-        f.setArguments(b);
-        getFragmentManager().beginTransaction().replace(R.id.fragment, f, fragmentClass.getName()).commit();*/
-        Intent i = new Intent(SingleFragmentActivity.this, SelectableTreeFragment.class);
-        i.putExtra("message", b);
-        startActivity(i);
-    }
-}
-
-class vQ
-{
-    private String cellNumb;
-    private SelectableItemHolder info;
-    private String qLocation;
-    private int qlength;
-    private int ttdqMin;
-    private int ttdqSec;
-    public void setInfo(SelectableItemHolder info1){
-        info=info1;
-    }
-    public SelectableItemHolder getInfo(){
-        return info;
-    }
-    public vQ()
-    {
-    }
-    public void calculateStats()
-    {
-    }
-    public String getCellNumb(){
-        return cellNumb;
-    }
-    public void setFromJSON(JSONObject vq)
-    {
-        Log.e("cellNumber",cellNumb);
-        info.dialog(vq.toString());
-    }
-    public void setCellNumb(String cellNumb1){
-        cellNumb = cellNumb1;
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/fragment/BaseActivity_2.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/BaseActivity_2.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/BaseActivity_2.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,34 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-
-import com.example.barnes.ummo.R;
-
-/**
- * Created by barnes on 12/17/15.
- */
-public class BaseActivity_2 extends AppCompatActivity
-{
-    protected void setUpToolbarWithTitle(String title, boolean hasBackButton)
-    {
-        Toolbar toolBar = (Toolbar) findViewById(R.id.toolbar_actionbar_);
-        setSupportActionBar(toolBar);
-        if(getSupportActionBar() != null)
-        {
-            getSupportActionBar().setTitle(title);
-            getSupportActionBar().setDisplayShowHomeEnabled(hasBackButton);
-            getSupportActionBar().setDisplayHomeAsUpEnabled(hasBackButton);
-        }
-    }
-
-    protected void enterFromBottomAnimation()
-    {
-        overridePendingTransition(R.anim.activity_open_translate_from_bottom, R.anim.activity_no_animation);
-    }
-
-    protected void exitToBottomAnimation()
-    {
-        overridePendingTransition(R.anim.activity_no_animation, R.anim.activity_close_translate_to_bottom);
-    }
-}
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/QMasterListener.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/QMasterListener.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/QMasterListener.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,27 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-/**
- * Created by barnes on 11/1/15.
- */
-public interface QMasterListener
-{
-    //Success Functions
-    public void qCreated(String string);
-    public void registered(String string);
-    public void qDestroyed(String string);
-    public void userDQd(String string);
-    public void userMoved(String string);
-    public void feedBackRecieved(String string);
-    public void myQRecieved(String string);
-    public void updatesRecieved(String string);
-
-    //Error Handling Functions
-
-    public void createQError(String string);
-    public void registrationError(String string);
-    public void onQDestroyError(String sting);
-    public void onUserDQError(String string);
-    public void onUserMoveError(String string);
-    public void onFeedBackError(String string);
-    public void onUpdtaesError(String string);
-}
\ No newline at end of file
Index: app/src/main/gen/com/example/barnes/ummo/BuildConfig.java
===================================================================
--- app/src/main/gen/com/example/barnes/ummo/BuildConfig.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/gen/com/example/barnes/ummo/BuildConfig.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,8 +0,0 @@
-/*___Generated_by_IDEA___*/
-
-package com.example.barnes.ummo;
-
-/* This stub is only used by the IDE. It is NOT the BuildConfig class actually packed into the APK */
-public final class BuildConfig {
-  public final static boolean DEBUG = Boolean.parseBoolean(null);
-}
\ No newline at end of file
Index: materiallettericon/materiallettericon.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- materiallettericon/materiallettericon.iml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ materiallettericon/materiallettericon.iml	(revision )
@@ -12,10 +12,7 @@
         <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
         <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
         <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
-        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugAndroidTest" />
-        <option name="COMPILE_JAVA_TEST_TASK_NAME" value="compileDebugAndroidTestSources" />
         <afterSyncTasks>
-          <task>generateDebugAndroidTestSources</task>
           <task>generateDebugSources</task>
         </afterSyncTasks>
         <option name="ALLOW_USER_CONFIGURATION" value="false" />
@@ -29,7 +26,7 @@
   </component>
   <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
-    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/androidTest/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
@@ -51,6 +48,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
@@ -65,6 +69,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/fragment/ScrollViewFragment2.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/ScrollViewFragment2.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/ScrollViewFragment2.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,202 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.content.Context;
-import android.os.Bundle;
-import android.os.CountDownTimer;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.RelativeLayout;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.florent37.hollyviewpager.HollyViewPagerBus;
-import com.github.ksoichiro.android.observablescrollview.ObservableScrollView;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-import cn.pedant.SweetAlert.SweetAlertDialog;
-
-/**
- * Created by barnes on 1/1/16.
- */
-public class ScrollViewFragment2 extends Fragment
-{
-    @Bind(R.id.scrollView)
-    ObservableScrollView scrollView;
-
-    @Bind(R.id.title)
-    TextView title;
-
-    private int i = -1;
-    Context c;
-
-    static String qName;
-    static String qPosition;
-    static String qAlphanum;
-
-    public static ScrollViewFragment2 newInstance(String title)
-    {
-        Bundle args = new Bundle();
-        args.putString("title",title);
-        ScrollViewFragment2 fragment = new ScrollViewFragment2();
-        fragment.setArguments(args);
-        return fragment;
-    }
-
-    public void loadQinfo(Button qPositionbtn, final String position)
-    {
-        qPositionbtn.setText("#" + position);
-        qPositionbtn.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                dialog(c, "", position);
-            }
-        });
-        RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) qPositionbtn.getLayoutParams();
-        params.width = 150;
-        params.height = 150;
-        //params.rightMargin = 150;
-        //params.rightMargin = 90;
-        qPositionbtn.setLayoutParams(params);
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState)
-    {
-        super.onCreate(savedInstanceState);
-    }
-
-    @Nullable
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
-    {
-        View view = LayoutInflater.from(container.getContext()).inflate(R.layout.fragment_scroll, container, false);
-        c = view.getContext();
-        //int pos = Integer.parseInt(qPosition);
-        qPosition = "1";
-        String lastNumber = qPosition.substring(qPosition.length() - 1);
-        Button man_Q_1 = (Button)view.findViewById(R.id.man_one);
-        Button man_Q_2 = (Button)view.findViewById(R.id.man_two);
-        Button man_Q_3 = (Button)view.findViewById(R.id.man_three);
-        Button man_Q_4 = (Button)view.findViewById(R.id.man_four);
-        Button man_Q_5 = (Button)view.findViewById(R.id.man_five);
-        //man_Q_1.setText("5");
-        //loadQinfo(man_Q_1, "5");
-
-        if (lastNumber.equals("0"))
-        {
-            loadQinfo(man_Q_5, qPosition);
-        }
-        else if (lastNumber.equals("1"))
-        {
-            loadQinfo(man_Q_1, qPosition);
-        }
-        else if (lastNumber.equals("2"))
-        {
-            loadQinfo(man_Q_2, qPosition);
-        }
-        else if (lastNumber.equals("3"))
-        {
-            loadQinfo(man_Q_3, qPosition);
-        }
-        else if (lastNumber.equals("4"))
-        {
-            loadQinfo(man_Q_4, qPosition);
-        }
-        else if (lastNumber.equals("5"))
-        {
-            loadQinfo(man_Q_5, qPosition);
-        }
-        else if (lastNumber.equals("6"))
-        {
-            loadQinfo(man_Q_1, qPosition);
-        }
-        else if (lastNumber.equals("7"))
-        {
-            loadQinfo(man_Q_2, qPosition);
-        }
-        else if (lastNumber.equals("8"))
-        {
-            loadQinfo(man_Q_3, qPosition);
-        }
-        else if (lastNumber.equals("9"))
-        {
-            loadQinfo(man_Q_4, qPosition);
-        }
-        //return inflater.inflate(R.layout.fragment_scroll, container, false);
-        return view;
-    }
-
-    @Override
-    public void onViewCreated(View view, Bundle savedInstanceState)
-    {
-        super.onViewCreated(view, savedInstanceState);
-        ButterKnife.bind(this, view);
-        title.setText(getArguments().getString("title"));
-        HollyViewPagerBus.registerScrollView(getActivity(), scrollView);
-    }
-
-    public void dialog(Context context, final String text, final String position)
-    {
-        final Context con = context;
-        final String text_ = text;
-        final SweetAlertDialog pDialog;
-        pDialog = new SweetAlertDialog(context, SweetAlertDialog.PROGRESS_TYPE)
-                .setTitleText(" "+text)
-                .setContentText("Loading...");
-        pDialog.show();
-        pDialog.setCancelable(false);
-        new CountDownTimer(800 * 7, 800)
-        {
-            public void onTick(long millisUntilFinished)
-            {
-                i++;
-                switch (i)
-                {
-                    case 0:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.blue_btn_bg_color));
-                        break;
-                    case 1:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.material_deep_teal_50));
-                        break;
-                    case 2:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                    case 3:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.material_deep_teal_20));
-                        break;
-                    case 4:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.material_blue_grey_80));
-                        break;
-                    case 5:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.warning_stroke_color));
-                        break;
-                    case 6:
-                        pDialog.getProgressHelper().setBarColor(con.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                }
-            }
-            public void onFinish()
-            {
-                i = -1;
-                pDialog.setTitleText(" " + text_ + " Queue")
-                        .setContentText("Queue Position:"+ position +
-                                "\n" + " Queue Length:22" +
-                                "\n" + "Queue DQ time:00:05" +
-                                "\n" + "Queue Time Left to DQ:01:05")
-                        .setConfirmText("OK")
-                        .showCancelButton(true)
-                        .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {
-                            @Override
-                            public void onClick(SweetAlertDialog sDialog) {
-                                pDialog.dismiss();
-                            }
-                        });
-            }
-        }.start();
-    }
-}
Index: app/src/main/java/com/example/barnes/ummo/gcm/RegistrationIntentService.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/gcm/RegistrationIntentService.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/gcm/RegistrationIntentService.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,61 +0,0 @@
-package com.example.barnes.ummo.gcm;
-
-/**
- * Created by sihle on 12/3/15.
- */
-import android.app.IntentService;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
-import android.util.Log;
-
-import com.example.barnes.ummo.R;
-import com.google.android.gms.gcm.GoogleCloudMessaging;
-import com.google.android.gms.iid.InstanceID;
-
-import java.io.IOException;
-
-/**
- * Created by sihle on 11/28/15.
- */
-public class RegistrationIntentService extends IntentService {
-    private static final String TAG = "RegIntentService";
-
-    public static final String SENT_TOKEN_TO_SERVER = "sentTokenToServer";
-    public static final String GCM_TOKEN = "gcmToken";
-
-    public RegistrationIntentService(){
-        super(TAG);
-    }
-
-    @Override
-    protected void onHandleIntent(Intent intent) {
-        Log.d(TAG,"Handle Intenet");
-        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);
-        String token = "";
-        InstanceID instanceID = InstanceID.getInstance(this);
-        String senderId = getResources().getString(R.string.gcm_defaultSenderId);
-
-        // Fetch token here
-        try {
-
-            token = instanceID.getToken(senderId, GoogleCloudMessaging.INSTANCE_ID_SCOPE);
-            Log.d(TAG, "GCM Registration Token: " + token);
-
-
-        } catch (IOException e) {
-            Log.d(TAG, "Failed to complete token refresh", e);
-            // If an exception happens while fetching the new token or updating our registration data
-            // on a third-party server, this ensures that we'll attempt the update at a later time.
-            sharedPreferences.edit().putBoolean(SENT_TOKEN_TO_SERVER, false).apply();
-        }
-        // save token
-        sharedPreferences.edit().putString(GCM_TOKEN, token).apply();
-        // pass along this data
-        sendRegistrationToServer(token);
-    }
-
-    private void sendRegistrationToServer(String token) {
-        // Add custom implementation, as needed.
-    }
-}
\ No newline at end of file
Index: fabtransitionactivity/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/.gitignore	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/.gitignore	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/gen/com/example/barnes/ummo/R.java
===================================================================
--- app/src/main/gen/com/example/barnes/ummo/R.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/gen/com/example/barnes/ummo/R.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,7 +0,0 @@
-/*___Generated_by_IDEA___*/
-
-package com.example.barnes.ummo;
-
-/* This stub is only used by the IDE. It is NOT the R class actually packed into the APK */
-public final class R {
-}
\ No newline at end of file
Index: fabtransitionactivity/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/proguard-rules.pro	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/proguard-rules.pro	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/fragment/SelectableTreeFragment.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/SelectableTreeFragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/SelectableTreeFragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,603 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.app.Activity;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.support.v4.content.LocalBroadcastManager;
-import android.support.v4.widget.DrawerLayout;
-import android.support.v4.widget.SwipeRefreshLayout;
-import android.support.v7.app.ActionBarDrawerToggle;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.RecyclerView;
-import android.support.v7.widget.Toolbar;
-import android.text.TextUtils;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.RelativeLayout;
-
-import com.example.barnes.ummo.Main_Activity;
-import com.example.barnes.ummo.MyAdapter;
-import com.example.barnes.ummo.R;
-import com.example.barnes.ummo.db.Db;
-import com.example.barnes.ummo.holder.IconTreeItemHolder;
-import com.example.barnes.ummo.holder.MaterialLetterIconTreeItemHolder;
-import com.example.barnes.ummo.holder.ProfileHolder;
-import com.example.barnes.ummo.holder.SelectableHeaderHolder_2;
-import com.example.barnes.ummo.holder.SelectableItemHolder;
-import com.example.barnes.ummo.ummoAPI.QUser;
-import com.example.barnes.ummo.ummoAPI.QUserListner;
-import com.github.fabtransitionactivity.SheetLayout;
-import com.melnykov.fab.FloatingActionButton;
-import com.melnykov.fab.ObservableScrollView;
-import com.unnamed.b.atv.model.TreeNode;
-import com.unnamed.b.atv.view.AndroidTreeView;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-import butterknife.OnClick;
-import uk.co.chrisjenx.calligraphy.CalligraphyConfig;
-
-/**
- * Created by barnes on 8/6/15.
- */
-
-public class SelectableTreeFragment extends BaseActivity implements SheetLayout.OnFabAnimationEndListener, QUserListner
-{
-    //First We Declare Titles And Icons For Our Navigation Drawer List View
-    //This Icons And Titles Are holded in an Array as you can see
-    String TITLES[] = {"Home","Frequently Used Qs","Tokens","Request Uber","Map view"};
-    int ICONS[] = {R.drawable.ic_home,R.drawable.ic_frequency,R.drawable.ic_tokens,R.drawable.uber,R.drawable.ic_map};
-    //Similarly we Create a String Resource for the name and email in the header view
-    //And we also create a int resource for profile picture in the header view
-    int PROFILE = R.drawable.cole;
-    private Toolbar toolbar;                              // Declaring the Toolbar Object
-    RecyclerView mRecyclerView;                           // Declaring RecyclerView
-    RecyclerView.Adapter mAdapter;                        // Declaring Adapter For Recycler View
-    RecyclerView.LayoutManager mLayoutManager;            // Declaring Layout Manager as a linear layout manager
-    DrawerLayout Drawer;                                  // Declaring DrawerLayout
-    ActionBarDrawerToggle mDrawerToggle;
-
-    @Bind(R.id.bottom_sheet) SheetLayout mSheetLayout;
-    @Bind(R.id.fab) FloatingActionButton mFab;
-    private AndroidTreeView tView;
-    Db db;
-    public List<String> qServiceTypeList = null;
-    public List<String> qServiceProviderName = null;
-    public List<String> qServiceName = null;
-    public List<String> qsJoined = null;
-    //ActionButton actionButton;
-    Context c;
-    private SwipeRefreshLayout swipeRefreshLayout;
-    private static final int REQUEST_CODE = 1;
-    Activity activity;
-    private QUser user;
-    private vQ selectedQ;
-    private String categoriesJSON;
-    private String qsJSON;
-    private String qJSON;
-    private String joinedQsJSON;
-    private String serviceProvidersJSON;
-    //Some setters and getters for qs
-    public void setSelectedQ(vQ vq)
-    {
-        selectedQ=vq;
-    }
-    public String getJoinedQsJSON()
-    {
-        return joinedQsJSON;
-    }
-
-    public void joinSelectedQ()
-    {
-        user.joinQ(selectedQ.getCellNumb());
-    }
-    public void setQinfoDialog(SelectableItemHolder info)
-    {
-        selectedQ.setInfo(info);
-    }
-    public vQ getSelectedQ()
-    {
-        return selectedQ;
-    }
-    public void setSelectedQ(String cell)
-    {
-        selectedQ = new vQ();
-        selectedQ.setCellNumb(cell);
-    }
-    public void setSelectedQ(JSONObject obj)
-    {
-        selectedQ = new vQ();
-        selectedQ.setFromJSON(obj);
-    }
-    //end setters and getters for qs
-    public QUser getUser(){return user;}
-    //Overriding for QUserListener Begins Here
-    //sucess Handlers
-    @Override
-    public void gotJoinedQs(String string)
-    {
-        Log.d("JoinedQs",string);
-    }
-    @Override
-    public void qReady(String string)
-    {
-        qJSON=string;
-        Log.d("QDATA",string);
-        try
-        {
-            JSONObject object = new JSONObject(qJSON);
-            selectedQ.getInfo().dialog(qJSON);
-        }
-        catch (JSONException jse)
-        {
-            Log.d("Error",jse.toString());
-        }
-    }
-    @Override
-    public void qError(String err)
-    {
-    }
-    public String getCategoriesJSON()
-    {
-        return categoriesJSON;
-    }
-    public String getQsJSON()
-    {
-        return qsJSON;
-    }
-    public String getServiceProvidersJSON()
-    {
-        return serviceProvidersJSON;
-    }
-    public final static String FRAGMENT_PARAM = "fragment";
-    @Override
-    public void userRegistered(String string)
-    {
-    }
-    @Override
-    public void qJoined(String string)
-    {
-    }
-    @Override
-    public void qLeft(String string)
-    {
-    }
-
-    /*@Override
-    public void updated(String string, String position) {
-
-    }*/
-
-    @Override
-    public void updated(String string)
-    {
-        Log.d("joinedQs",string);
-        try
-        {
-            //JSONObject object = new JSONObject(string);
-            JSONArray JSONqs = new JSONArray(string);
-            joinedQsJSON = JSONqs.toString();
-            if(JSONqs.length() > 0)
-            {
-                Intent i = new Intent();
-                i.putExtra("joinedQs",joinedQsJSON);
-                //i.putExtra("qpos");
-                i.setClass(this, Main_Activity.class);
-                this.startActivity(i);
-            }
-        }
-        catch (JSONException jse)
-        {
-            Log.e("JoinedQs",jse.toString());
-        }
-    }
-
-    @Override
-    public void categoriesReady(String string)
-    {
-        categoriesJSON = string;
-      /*  Bundle b = getIntent().getExtras();
-        Class<?> fragmentClass = (Class<?>) b.get(FRAGMENT_PARAM);
-        Fragment f = (Fragment)(new SelectableTreeFragment());//Fragment.instantiate(this, SelectableTreeFragment.class);
-        f.setArguments(b);
-        getFragmentManager().beginTransaction().replace(R.id.fragment, f, fragmentClass.getName()).commit();
-        //  user.makeNotification();
-        //Intent i = new Intent(SingleFragmentActivity.this, SelectableTreeFragment.class);
-        //i.putExtra("message", b);
-        //startActivity(i);*/
-    }
-    @Override
-    public void allQsReady(String string)
-    {
-        qsJSON = string;
-        Log.d("qs",string);
-    }
-    //Error Handlers
-    @Override
-    public void joinedQsError(String err)
-    {
-    }
-    @Override
-    public void userRegistrationError(String err)
-    {
-    }
-    @Override
-    public void qJoinedError(String err)
-    {
-    }
-    @Override
-    public void qLeftError(String err)
-    {
-    }
-    @Override
-    public void updateError(String err)
-    {
-    }
-    @Override
-    public void categoriesError(String err)
-    {
-    }
-    @Override
-    public void allQError(String err)
-    {
-    }
-    //End Overriding for QUserListener
-    @Override
-    protected void onCreate(final Bundle savedInstanceState)
-    {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.fragment_selectable_nodes);
-        user = new QUser(this);
-        if(user==null)
-        {
-            Log.e("USER","User Is Null");
-        }
-        else
-        {
-            Log.e("USER:",user.getName());
-        }
-
-        String NAME = user.getName();
-        String EMAIL = "+268 "+user.getCellNumb();
-
-        /* Assinging the toolbar object ot the view
-        and setting the the Action bar to our toolbar
-        */
-        toolbar = (Toolbar) findViewById(R.id.tool_bar);
-        setSupportActionBar(toolbar);
-        mRecyclerView = (RecyclerView) findViewById(R.id.RecyclerView); // Assigning the RecyclerView Object to the xml View
-        mRecyclerView.setHasFixedSize(true);
-        //int width = getResources().getDisplayMetrics().widthPixels/2;// Letting the system know that the list objects are of fixed size
-        mAdapter = new MyAdapter(TITLES,ICONS,NAME,EMAIL,PROFILE,this);       // Creating the Adapter of MyAdapter class(which we are going to see in a bit)
-        // And passing the titles,icons,header view name, header view email,
-        // and header view profile picture
-        mRecyclerView.setAdapter(mAdapter);                              // Setting the adapter to RecyclerView
-        mLayoutManager = new LinearLayoutManager(this);                 // Creating a layout Manager
-        mRecyclerView.setLayoutManager(mLayoutManager);                 // Setting the layout Manager
-        Drawer = (DrawerLayout) findViewById(R.id.DrawerLayout);        // Drawer object Assigned to the view
-        mDrawerToggle = new ActionBarDrawerToggle(this,Drawer,toolbar,R.string.openDrawer,R.string.closeDrawer)
-        {
-            @Override
-            public void onDrawerOpened(View drawerView) {
-                super.onDrawerOpened(drawerView);
-                // code here will execute once the drawer is opened( As I dont want anything happened whe drawer is
-                // open I am not going to put anything here)
-            }
-
-            @Override
-            public void onDrawerClosed(View drawerView) {
-                super.onDrawerClosed(drawerView);
-                // Code here will execute once drawer is closed
-            }
-
-        }; // Drawer Toggle Object Made
-        Drawer.setDrawerListener(mDrawerToggle); // Drawer Listener set to the Drawer toggle
-        mDrawerToggle.syncState();               // Finally we set the drawer toggle sync State
-
-        int width = getResources().getDisplayMetrics().widthPixels - 100;
-        DrawerLayout.LayoutParams params = (android.support.v4.widget.DrawerLayout.LayoutParams) mRecyclerView.getLayoutParams();
-        params.width = width;
-        mRecyclerView.setLayoutParams(params);
-
-        //final View rootView = inflater.inflate(R.layout.fragment_selectable_nodes, null, false);
-        final ViewGroup containerView = (ViewGroup) findViewById(R.id.container);
-        CalligraphyConfig.initDefault(new CalligraphyConfig.Builder()
-                        .setDefaultFontPath("fonts/Ubuntu-C.ttf")
-                        .setFontAttrId(R.attr.fontPath)
-                        .build()
-        );
-        ButterKnife.bind(this);
-        //Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_actionbar);
-        //toolbar.setTitle("mmo");
-        //toolbar.setLogo(R.mipmap.ummo_logo);
-        //setUpToolbarWithTitle("Ummo", false);
-        //setUpToolbarWithTitle(getString(R.string.app_name), false);
-        //setActionBar();
-        //getSupportActionBar().setIcon(R.mipmap.ummo_logo);
-        //mFab = (com.melnykov.fab.FloatingActionButton) findViewById(R.id.fab);
-        mSheetLayout.setFab(mFab);
-        mFab.setImageResource(R.drawable.fab_plus_icon);
-        mSheetLayout.setFabAnimationEndListener(this);
-        //mSheetLayout.setFab(mFab);
-        swipeRefreshLayout = (SwipeRefreshLayout) findViewById(R.id.swipeRefCategory);
-        //swipeRefreshLayout.setOnRefreshListener(this.);
-        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener()
-        {
-            @Override
-            public void onRefresh()
-            {
-            }
-        });
-        activity = this;
-        Intent intent = getIntent();
-        containerView.removeAllViews();
-        String mess = intent.getStringExtra("categoriesJSON");
-        //Log.e("Greeting",mess);
-        c = SelectableTreeFragment.this;
-        TreeNode root = TreeNode.root();
-
-        ObservableScrollView scrollView = (ObservableScrollView) findViewById(R.id.scroll_view);
-        RelativeLayout list = (RelativeLayout) findViewById(R.id.container);
-
-        mFab.attachToScrollView(scrollView);
-
-        String string = mess;
-        try
-        {
-            ArrayList<TreeNode> treeNodeList = new ArrayList<>();
-            ArrayList<TreeNode> treeNodeList2 = new ArrayList<>();
-            ArrayList<JSONObject> serviceNameColl = new ArrayList<>();
-            JSONArray array= new JSONArray(string);
-            qServiceTypeList = new ArrayList<String>();
-            for (int i =0; i<array.length();i++)
-            {
-                JSONObject object = array.getJSONObject(i);
-                String categoryName = object.getString("name");
-                qServiceTypeList.add(categoryName);
-                if (categoryName.equals("Governmental"))
-                {
-                    treeNodeList.add(new TreeNode(new IconTreeItemHolder.IconTreeItem(categoryName,R.string.fa_globe)).setViewHolder(new ProfileHolder(activity)));
-                }
-                else if(categoryName.equals("Financial"))
-                {
-                    treeNodeList.add(new TreeNode(new IconTreeItemHolder.IconTreeItem(categoryName,R.string.fa_credit_card)).setViewHolder(new ProfileHolder(activity)));
-                }
-                else if(categoryName.equals("Entertainment"))
-                {
-                    treeNodeList.add(new TreeNode(new IconTreeItemHolder.IconTreeItem(categoryName,R.string.fa_music)).setViewHolder(new ProfileHolder(activity)));
-                }
-                else if(categoryName.equals("Medical"))
-                {
-                    treeNodeList.add(new TreeNode(new IconTreeItemHolder.IconTreeItem(categoryName,R.string.fa_stethoscope)).setViewHolder(new ProfileHolder(activity)));
-                }
-                else if(categoryName.equals("Miscellaneous"))
-                {
-                    treeNodeList.add(new TreeNode(new IconTreeItemHolder.IconTreeItem(categoryName,R.string.fa_sort_alpha_desc)).setViewHolder(new ProfileHolder(activity)));
-                }
-                else
-                {
-                    treeNodeList.add(new TreeNode(new IconTreeItemHolder.IconTreeItem(categoryName, R.string.ic_sd_storage)).setViewHolder(new ProfileHolder(activity)));
-                }
-                if (object.has("Providers"))
-                {
-                    JSONArray providers = object.getJSONArray("Providers");
-                    for (int j = 0; j < providers.length(); j++)
-                    {
-                        //Setting the Service Categories
-                        JSONObject providerObj = providers.getJSONObject(j);
-                        Log.d("object",providerObj.toString());
-                        treeNodeList2.add(new TreeNode(new MaterialLetterIconTreeItemHolder.IconTreeItem(providerObj.getString("name"))).setViewHolder(new SelectableHeaderHolder_2(activity)));
-                        treeNodeList.get(i).addChildren(treeNodeList2.get(j));
-                       /* getServicePID = db.getQServicePid(qServiceProviderName.get(j));
-                        string_serviceProviderid = getServicePID.get(0);
-                        int_serviceProviderid = Integer.parseInt(string_serviceProviderid);
-                        qServiceName = db.getQServiceName(int_serviceProviderid);
-                         */
-                        if (providerObj.has("Services"))
-                        {
-                            JSONArray services = providerObj.getJSONArray("Services");
-                            for (int k = 0; k < services.length(); k++)
-                            {
-                                serviceNameColl.add(services.getJSONObject(k));
-                            }
-                            customfillFolder(treeNodeList2.get(j), serviceNameColl, "qServiceProviderName.get(i)");
-                        }
-                    }
-                }
-                serviceNameColl.clear();
-                treeNodeList2.clear();
-            }
-            Log.d("List",array.toString());
-            root.addChildren(treeNodeList);
-        }
-        catch (JSONException jse)
-        {
-            Log.e("JSON Error",jse.toString());
-        }
-        //actionButton = (ActionButton) rootView.findViewById(R.id.action_button);
-        //actionButton.setImageResource(R.drawable.fab_plus_icon);
-        //actionButton.setButtonColor(getResources().getColor(R.color.fab_material_light_blue_500));
-        //actionButton.hide();
-        db = new Db(SelectableTreeFragment.this);
-        db.open();
-        qsJoined = db.getQsJoined();
-                /*actionButton.setOnClickListener(new View.OnClickListener() {
-                    @Override
-                    public void onClick(View view) {
-                        ((SingleFragmentActivity) getActivity()).getUser().updateJoinedQs();
-                        if (qsJoined.size() > 0) {
-
-                        } else {
-                            Toast.makeText(c, "You have not joined any ques yet", Toast.LENGTH_SHORT).show();
-                        }
-                    }
-                });*/
-        // = db.getAllQServiceTypesName();
-        //int qServicesTypeSize = qServiceTypeList.size();
-        int int_servicetypeid;
-        String string_servicetypeid;
-        int int_serviceProviderid;
-        String string_serviceProviderid;
-
-        List<String> getServiceTId;
-        List<String> getServicePID;
-
-        //for (int i = 0;i < qServicesTypeSize;i++)
-        //{
-            /*if (qServiceTypeList.get(i) == "Financial Services_")
-            {
-                treeNodeList.add(new TreeNode(new IconTreeItemHolder.IconTreeItem(qServiceTypeList.get(i).toString(),R.drawable.currency9)).setViewHolder(new ProfileHolder(getActivity())));
-            }
-            else
-            {
-                treeNodeList.add(new TreeNode(new IconTreeItemHolder.IconTreeItem(qServiceTypeList.get(i).toString(),R.string.ic_sd_storage)).setViewHolder(new ProfileHolder(getActivity())));
-            }
-
-            //string_servicetypeid = getServiceTId.get(0);//id for displayed q service type
-
-            //int_servicetypeid = Integer.parseInt(string_servicetypeid);
-            //qServiceProviderName = db.getQServiceProviderName(int_servicetypeid);
-
-            */
-        //}
-        tView = new AndroidTreeView(SelectableTreeFragment.this, root);
-        tView.setDefaultAnimation(true);
-        containerView.addView(tView.getView());
-
-        if (savedInstanceState != null)
-        {
-            String state = savedInstanceState.getString("tState");
-            if (!TextUtils.isEmpty(state))
-            {
-                tView.restoreState(state);
-            }
-        }
-        tView.setSelectionModeEnabled(true);
-    }
-
-    //activity.registerReceiver(broadcastReceiver, new IntentFilter("com.example.barnes.ummo.CATEGORIES"));
-    //return rootView;
-
-
-    private void customfillFolder(TreeNode folder, ArrayList<JSONObject> list, String serviceName)
-    {
-        List<String> qJoinedList = null;
-        //qJoinedList = db.getQName(serviceName);
-        try
-        {
-            if (true)
-            {
-                for (int i = 0; i < list.size(); i++)
-                {
-                    folder.addChildren(new TreeNode(list.get(i).getString("name")).setViewHolder(new SelectableItemHolder(activity, list.get(i), "serviceName")));
-                }
-            }
-            else
-            {
-                for (int i = 0; i < list.size(); i++)
-                {
-                    folder.addChildren(new TreeNode(list.get(i)).setViewHolder(new SelectableItemHolder(activity, list.get(i), "serviceName")));
-                }
-            }
-        }
-        catch(JSONException jse)
-        {
-            Log.e("Json Error Passing Qs",jse.toString());
-        }
-    }
-
-    @OnClick(R.id.fab)
-    void onFabClick()
-    {
-        mSheetLayout.expandFab();
-    }
-
-    @Override
-    public void onFabAnimationEnd()
-    {
-        Intent intent = new Intent(this, Main_Activity.class);
-        startActivityForResult(intent, REQUEST_CODE);
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data)
-    {
-        super.onActivityResult(requestCode, resultCode, data);
-        if (requestCode == REQUEST_CODE)
-        {
-            mSheetLayout.contractFab();
-        }
-    }
-    @Override
-    public void onSaveInstanceState(Bundle outState)
-    {
-        super.onSaveInstanceState(outState);
-        outState.putString("tState", tView.getSaveState());
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-
-        LocalBroadcastManager.getInstance(this).registerReceiver(mMessageReceiver,
-                new IntentFilter("com.example.barnes.ummo.CATEGORIES"));
-    }
-
-    private BroadcastReceiver mMessageReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            // Extract data included in the Intent
-            String message = intent.getStringExtra("message");
-            Log.e("receiver", "Got message: " + message);
-        }
-    };
-}
-
-class vQ{
-    private String cellNumb;
-    private SelectableItemHolder info;
-    private String qLocation;
-    private int qlength;
-    private int ttdqMin;
-    private int ttdqSec;
-
-    public void setInfo(SelectableItemHolder info1){
-        info=info1;
-    }
-
-    public SelectableItemHolder getInfo(){
-        return info;
-    }
-
-    public vQ()
-    {
-    }
-
-    public void calculateStats()
-    {
-    }
-
-    public String getCellNumb(){
-        return cellNumb;
-    }
-
-    public void setFromJSON(JSONObject vq){
-        Log.e("cellNumber",cellNumb);
-        info.dialog(vq.toString());
-    }
-
-    public void setCellNumb(String cellNumb1){
-        cellNumb = cellNumb1;
-    }
-}
\ No newline at end of file
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew.bat	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ gradlew.bat	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/QUser.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/QUser.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/QUser.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,705 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-import android.app.Activity;
-import android.content.ComponentName;
-import android.content.Context;
-import android.content.Intent;
-import android.content.ServiceConnection;
-import android.content.SharedPreferences;
-import android.os.IBinder;
-import android.preference.PreferenceManager;
-import android.util.Log;
-
-import com.example.barnes.ummo.R;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.net.MalformedURLException;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Created by barnes on 11/1/15.
- */
-public class QUser
-{
-    private Activity callingActivity;
-    private String uCellNumber;
-    private boolean registered = false;
-    private String uName;
-    private boolean mBound=false;
-    private UmmoDaemon daemon;
-    //private UmmoDaemon ummoDaemon;
-    private ServiceConnection mConnection = new ServiceConnection()
-    {
-        @Override
-        public void onServiceConnected(ComponentName className, IBinder service)
-        {
-            Log.e("Function","onServiceConnected");
-            // We've bound to LocalService, cast the IBinder and get LocalService instance
-            UmmoDaemon.LocalBinder binder = (UmmoDaemon.LocalBinder) service;
-            daemon = binder.getService();
-            mBound = true;
-            daemon.setCalee(callingActivity);
-            daemon.getUpadates(QUser.this);
-            daemon.makeNotification();
-            if(daemon==null)
-            {
-                Log.e("Error3","Demon is NULL");
-            }
-        }
-        @Override
-        public void onServiceDisconnected(ComponentName arg0) {
-            mBound = false;
-        }
-    };
-
-    public boolean isRegistered() {
-        return registered;
-    }
-
-    public void setCallingActivity(Activity activity) {
-        callingActivity = activity;
-    }
-
-    public void register(final String name, final String cellNumber)
-    {
-        try
-        {
-            uName = name;
-            uCellNumber = cellNumber;
-            String urlString = callingActivity.getString(R.string.SERVER_URL) + "user/register";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("cellnum", cellNumber);
-            formPoster.add("alias", name);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try
-                    {
-                        InputStream is = formPoster.post();
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final String uname = name;
-                        final String cellphone = cellNumber;
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while ((line = rd.readLine()) != null)
-                        {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).userRegistered(objString);
-                            }
-                        });
-                        //This would mean the registration was compleate
-                        //
-                        //JSONObject obj = new JSONObject(objString);
-                        //Set the Shared Preferences for User Name and CellNumber
-                        SharedPreferences sp = PreferenceManager
-                                .getDefaultSharedPreferences(callingActivity);
-                        sp.edit().putString(callingActivity.getString(R.string.PREF_USER_NAME), uname).apply();
-                        sp.edit().putString(callingActivity.getString(R.string.PREF_USER_CELLNUMBER), cellphone).apply();
-                        sp.edit().putBoolean(callingActivity.getString(R.string.PREF_USER_REGISTERED), true).apply();
-                        //Log.d("Response",id);
-                        //Toast.makeText(calee,"Sent Information",Toast.LENGTH_LONG).show();
-                    } catch (final IOException ioe)
-                    {
-                        Log.e("IO Exception", ioe.toString());
-                        Log.e("IO Exception", ioe.toString());
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).userRegistrationError(ioe.toString());
-                            }
-                        });
-                    }
-                }
-            });
-            thread.start();
-        }
-        catch (MalformedURLException me)
-        {
-            Log.e("NetWork Exception", me.toString());
-        }
-    }
-    public QUser(Activity activity)
-    {
-        setCallingActivity(activity);
-        SharedPreferences sp = PreferenceManager
-                .getDefaultSharedPreferences(callingActivity);
-        registered = sp.getBoolean(callingActivity.getString(R.string.PREF_USER_REGISTERED), false);
-        if (registered)
-        {
-            uName = sp.getString(callingActivity.getString(R.string.PREF_USER_NAME), "NO NAME");
-            uCellNumber = sp.getString(callingActivity.getString(R.string.PREF_USER_CELLNUMBER), "NO NUMBER");
-            //   Intent intent = new Intent(Register.this, MainActivity.class);
-            //  startActivity(intent);
-            //  finish();
-            Log.d("prefs", "registered");
-        }
-        //startUpdatesDaemon();
-        if (daemon==null)
-        {
-            Log.e("Error","Daemon is still null");
-        }
-    }
-
-    public void getAvailableQs()
-    {
-        try
-        {
-            String urlString = callingActivity.getString(R.string.SERVER_URL) + "/user/availQs";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            //formPoster.add("uid",uCellNumber);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try
-                    {
-                        InputStream is = formPoster.post();
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while ((line = rd.readLine()) != null)
-                        {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).allQsReady(objString);
-                            }
-                        });
-                    }
-                    catch (final IOException ioe)
-                    {
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).allQError(ioe.toString());
-                            }
-                        });
-                    }
-                }
-            });
-            thread.start();
-        } catch (MalformedURLException me)
-        {
-            Log.e("NetWork Exception", me.toString());
-        }
-    }
-
-    public void setName()
-    {
-    }
-
-    public UmmoDaemon getDaemon() {
-        return daemon;
-    }
-
-    public void setCellNumber()
-    {
-    }
-
-    public String getName() {
-        return uName;
-    }
-
-    public String getCellNumb() {
-        return uCellNumber;
-    }
-
-    public void getCategories()
-    {
-        try
-        {
-            String urlString = callingActivity.getString(R.string.SERVER_URL) + "user/categories";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("user",uCellNumber);
-            String token = PreferenceManager.getDefaultSharedPreferences(callingActivity).getString("gcmToken","token");
-            formPoster.add("token",token);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try
-                    {
-                        InputStream is = formPoster.post();
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while ((line = rd.readLine()) != null)
-                        {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).categoriesReady(objString);
-                            }
-                        });
-                    }
-                    catch (final IOException ioe)
-                    {
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).categoriesError(ioe.toString());
-                            }
-                        });
-                    }
-                }
-            });
-            thread.start();
-        }
-        catch (MalformedURLException me)
-        {
-            Log.e("NetWork Exception", me.toString());
-        }
-    }
-
-    public void getQ(String qcell)
-    {
-        try {
-
-            String urlString = callingActivity.getString(R.string.SERVER_URL) + "user/getQ";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("qid",qcell);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try {
-                        InputStream is = formPoster.post();
-
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while ((line = rd.readLine()) != null) {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).qReady(objString);
-                            }
-                        });
-
-
-                    } catch (final IOException ioe) {
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).qError(ioe.toString());
-                            }
-                        });
-                    }
-
-                }
-            });
-
-            thread.start();
-
-
-        } catch (MalformedURLException me) {
-            Log.e("NetWork Exception", me.toString());
-        }
-
-    }
-
-    public void clearQList(){
-        Log.e("QUSER","Clearing Qs");
-        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(callingActivity);
-        String arrString = sp.getString("JOINEDQS_LIST_PREF","PREF");
-        if (arrString!="PREF"){
-            try {
-                JSONArray arr = new JSONArray(arrString);
-                for (int i=0;i<arr.length();i++){
-                    new JoinedQ().deleateQ(arr.getString(i),callingActivity);
-                }
-
-                sp.edit().remove("JOINEDQS_LIST_PREF").commit();
-            }
-
-            catch (JSONException jse){
-                Log.e("CLEARQS",jse.toString());
-            }
-        }
-    }
-
-    public List<JoinedQ> getLocalJoinedQList(){
-        List<JoinedQ> qlist = new ArrayList<JoinedQ>();
-        String arrString = PreferenceManager.getDefaultSharedPreferences(callingActivity).getString("JOINEDQS_LIST_PREF","PREF");
-        if (arrString!="PREF"){
-            try {
-                JSONArray arr = new JSONArray(arrString);
-                for (int i=0;i<arr.length();i++){
-                    JoinedQ joinedQ = new JoinedQ();
-                    joinedQ.readByQId(arr.getString(i), callingActivity);
-
-                   // Log.d("QNAME",joinedQ.getMyPos());
-                    qlist.add(joinedQ);
-                }
-            }
-
-            catch (JSONException jse){
-                Log.e("LOCALQLIST",jse.toString());
-            }
-        }
-
-        return qlist;
-    }
-
-    public void updateJoinedQList(JSONArray arr){
-        clearQList();
-        Log.e("USER","UpdateList");
-        try {
-            JSONArray jsonArray = new JSONArray();
-            for(int i =0; i<arr.length();i++){
-                Log.d("ARRAYLENGTH",String.valueOf(arr.length()));
-                JoinedQ joinedQ= new JoinedQ(arr.getJSONObject(i),uCellNumber);
-                jsonArray.put(joinedQ.getqId());
-            }
-
-            PreferenceManager.getDefaultSharedPreferences(callingActivity).edit().putString("JOINEDQS_LIST_PREF", jsonArray.toString()).commit();
-        }
-
-        catch (JSONException jse){
-            Log.e("UPDTAEJQLIST",jse.toString());
-        }
-
-
-        try {
-            JSONArray jsonArray = new JSONArray();
-            for(int i =0; i<arr.length();i++){
-                Log.d("ARRAYLENGTH",String.valueOf(arr.length()));
-                JoinedQ joinedQ= new JoinedQ(arr.getJSONObject(i),uCellNumber);
-                joinedQ.save(callingActivity,this);
-            }
-
-
-        }
-
-        catch (JSONException jse){
-            Log.e("UPDTAEJQLIST",jse.toString());
-        }
-
-    }
-
-    public void getProvides()
-    {
-    }
-
-
-    public boolean isQJoined(String q_id){
-        boolean retval = false;
-        String arrString = PreferenceManager.getDefaultSharedPreferences(callingActivity).getString("JOINEDQS_LIST_PREF","PREF");
-        if (arrString!="PREF"){
-            try {
-                JSONArray arr = new JSONArray(arrString);
-                for (int i=0;i<arr.length();i++){
-                    Log.d("ISJOINED",arr.getString(i));
-                    Log.d("QIDISJ",q_id);
-                    if(q_id.equals(arr.getString(i))){
-                        retval=true;
-                    }
-                }
-            }
-
-            catch (JSONException jse){
-                Log.e("ISQJOINED",jse.toString());
-            }
-        }
-
-        else {
-            Log.e("ISQJOINED",arrString);
-        }
-
-        return retval;
-    }
-    public void updateJoinedQs()
-    {
-        try
-        {
-            String urlString = callingActivity.getString(R.string.SERVER_URL) + "user/joinedQs";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("uid", uCellNumber);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try
-                    {
-                        InputStream is = formPoster.post();
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while ((line = rd.readLine()) != null)
-                        {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-                        final String objString = response.toString();
-                        Log.e("QUSER","JoinedQS"+objString);
-                        try{
-                            JSONArray arr = new JSONArray(objString);
-                            updateJoinedQList(arr);
-
-                        }
-
-                        catch (JSONException jse){
-                            Log.e("JSONERR",jse.toString());
-                        }
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).updated(objString);
-                            }
-                        });
-                        Log.d("QUSER_UPDATE",response.toString());
-                    }
-                    catch (final IOException ioe)
-                    {
-
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).updateError(ioe.toString());
-                            }
-                        });
-
-                        Log.e("quser",ioe.toString());
-                    }
-                }
-            });
-            thread.start();
-        }
-        catch (MalformedURLException me)
-        {
-            Log.e("NetWork Exception", me.toString());
-        }
-    }
-
-    public void joinQ(String qCellnumber)
-    {
-        try
-        {
-            String urlString = callingActivity.getString(R.string.SERVER_URL) + "/user/joinQ";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("uid", uCellNumber);
-            formPoster.add("qid", qCellnumber);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try
-                    {
-                        InputStream is = formPoster.post();
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while ((line = rd.readLine()) != null)
-                        {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).qJoined(objString);
-                            }
-                        });
-                    }
-                    catch (final IOException ioe)
-                    {
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).qJoinedError(ioe.toString());
-                            }
-                        });
-                    }
-                }
-            });
-            thread.start();
-        }
-        catch (MalformedURLException me)
-        {
-            Log.e("NetWork Exception", me.toString());
-        }
-    }
-
-    public void leaveQ(String qCellnumber)
-    {
-        try
-        {
-            String urlString = callingActivity.getString(R.string.SERVER_URL) + "/user/leaveQ";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("uid", uCellNumber);
-            formPoster.add("qid", qCellnumber);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try
-                    {
-                        InputStream is = formPoster.post();
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while ((line = rd.readLine()) != null)
-                        {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).qLeft(objString);
-                            }
-                        });
-                    }
-                    catch (final IOException ioe)
-                    {
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).qLeftError(ioe.toString());
-                            }
-                        });
-                    }
-                }
-            });
-            thread.start();
-        }
-        catch (MalformedURLException me)
-        {
-            Log.e("NetWork Exception", me.toString());
-        }
-    }
-
-    public void startUpdatesDaemon()
-    {
-        Log.e("daemon","about To satrt");
-        Intent intent = new Intent(callingActivity, UmmoDaemon.class);
-        if((callingActivity!=null)||(mConnection!=null))
-        {
-            callingActivity.bindService(intent, mConnection, Context.BIND_AUTO_CREATE);
-            Log.e("Activity","Calling activity is not null");
-        }
-        else
-        {
-            Log.e("Fuck","Calling activity is null");
-        }
-    }
-
-    public void makeNotification()
-    {
-        if(daemon == null)
-        {
-            Log.e("DAEMON", "Still Null");
-        }
-        else
-        {
-            Log.e("DAEMON","YAY ITS NOT NULL");
-        }
-    }
-
-    public ServiceConnection getServiceConnection()
-    {
-        return new ServiceConnection()
-        {
-            @Override
-            public void onServiceConnected(ComponentName className, IBinder service)
-            {
-                // We've bound to LocalService, cast the IBinder and get LocalService instance
-                UmmoDaemon.LocalBinder binder = (UmmoDaemon.LocalBinder) service;
-                daemon = binder.getService();
-                daemon.setCalee((QUser.this).callingActivity);
-            }
-            @Override
-            public void onServiceDisconnected(ComponentName arg0)
-            {
-                //mBound = false;
-            }
-        };
-    }
-
-    public void getJoinedQs()
-    {
-        try
-        {
-            String urlString = callingActivity.getString(R.string.SERVER_URL) + "/user/getJoinedQs";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("uid", uCellNumber);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try
-                    {
-                        InputStream is = formPoster.post();
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while ((line = rd.readLine()) != null)
-                        {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).gotJoinedQs(objString);
-                            }
-                        });
-                    }
-                    catch (final IOException ioe)
-                    {
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QUserListner) callingActivity).joinedQsError(ioe.toString());
-                            }
-                        });
-                    }
-                }
-            });
-            thread.start();
-        }
-        catch (MalformedURLException me)
-        {
-            Log.e("NetWork Exception", me.toString());
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/recycler/RecyclerAdapter.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/recycler/RecyclerAdapter.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/recycler/RecyclerAdapter.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,53 +0,0 @@
-package com.example.barnes.ummo.recycler;
-
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.barnes.ummo.R;
-
-/**
- * Created by barnes on 12/30/15.
- */
-public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>
-{
-    protected static final int TYPE_HEADER = 0;
-    protected static final int TYPE_CELL = 1;
-
-    @Override
-    public int getItemViewType(int position)
-    {
-        switch (position)
-        {
-            case 0: return TYPE_HEADER;
-            default: return TYPE_CELL;
-        }
-    }
-
-    @Override
-    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup viewGroup, int type)
-    {
-        View view;
-        switch (type)
-        {
-            case TYPE_HEADER:
-                view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.hvp_header_placeholder,viewGroup,false);
-                break;
-            default:
-                view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.content_card,viewGroup,false);
-                break;
-        }
-        return new RecyclerView.ViewHolder(view) {};
-    }
-
-    @Override
-    public void onBindViewHolder(RecyclerView.ViewHolder viewHolder, int i)
-    {
-    }
-
-    @Override
-    public int getItemCount() {
-        return 100;
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/holder/SelectableItemHolder.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/SelectableItemHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/SelectableItemHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,438 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.app.Activity;
-import android.content.Context;
-import android.os.CountDownTimer;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.example.barnes.ummo.R;
-import com.example.barnes.ummo.db.Db;
-import com.example.barnes.ummo.fragment.SelectableTreeFragment;
-import com.example.barnes.ummo.ummoAPI.QUser;
-import com.unnamed.b.atv.model.TreeNode;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.util.List;
-import java.util.Random;
-
-import cn.pedant.SweetAlert.SweetAlertDialog;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class SelectableItemHolder extends TreeNode.BaseNodeViewHolder<String>
-{
-    private TextView tvValue;
-    private CheckBox nodeSelector;
-    private Button exit_q_menu;
-    public String selecHeader;
-    String tabTitle;
-    private int i = -1;
-    SelectableTreeFragment parent;
-    int tabPos = 0;
-    public List<String> qsJoinedNum = null;
-    public List<String> qNameList = null;
-    public List<String> qNameServiceId = null;
-    public List<String> qJoinedQid = null;
-    List<String> qName_List;
-    String qsJoined;
-    Db db;
-    JSONObject vq;
-    public void dialog(final String text)
-    {
-        final Context c = context;
-        final String text_ = text;
-        final SweetAlertDialog pDialog;
-        pDialog = new SweetAlertDialog(context, SweetAlertDialog.PROGRESS_TYPE)
-                .setTitleText(selecHeader)
-                .setContentText("Loading...");
-        pDialog.show();
-        pDialog.setCancelable(false);
-        //Extracts Qstats from text
-        int mins=0;
-        int qLength=0;
-        try
-        {
-            JSONObject jobject = new JSONObject(text);
-            if (jobject.has("ttdq"))
-            {
-                mins = jobject.getInt("ttdq");
-            }
-            if (jobject.has("qErs"))
-            {
-                qLength = jobject.getJSONObject("qErs").length();
-            }
-        }
-        catch (JSONException jse)
-        {
-            Log.e("Erorr","Can't Extract Qstats form text"+jse.toString());
-        }
-        final int ttdq_mins = mins/(60*1000);
-        final int ttqd_secs = mins/(1000)-ttdq_mins*60;
-        final int final_length=qLength;
-        //End Extracts Qstats from text
-        new CountDownTimer(800 * 7, 800)
-        {
-            public void onTick(long millisUntilFinished)
-            {
-                i++;
-                switch (i)
-                {
-                    case 0:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.blue_btn_bg_color));
-                        break;
-                    case 1:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.material_deep_teal_50));
-                        break;
-                    case 2:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                    case 3:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.material_deep_teal_20));
-                        break;
-                    case 4:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.material_blue_grey_80));
-                        break;
-                    case 5:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.warning_stroke_color));
-                        break;
-                    case 6:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                }
-            }
-            public void onFinish()
-            {
-                i = -1;
-                pDialog.setTitleText(selecHeader + " Queue")
-                        .setContentText(
-                                "Location of service : ".toUpperCase() + "\nMbabane\n" +
-                                        "Length of queue : ".toUpperCase() + "\n"+final_length+"\n" +
-                                        "Time for single process : ".toUpperCase() + "\n"+ttdq_mins+":"+ttqd_secs+"\n" +
-                                        "Service Requirements:".toUpperCase() + "\nNational Id")
-                        .setConfirmText("Join Q")
-                        .setCancelClickListener(new SweetAlertDialog.OnSweetClickListener()
-                        {
-                            @Override
-                            public void onClick(SweetAlertDialog sDialog)
-                            {
-                                sDialog.dismiss();
-                                pDialog.dismiss();
-                                nodeSelector.setChecked(false);
-                            }
-                        })
-                        .showCancelButton(true)
-                        .setConfirmClickListener(
-                                new SweetAlertDialog.OnSweetClickListener() {
-                                    @Override
-                                    public void onClick(SweetAlertDialog sDialog) {
-                                        qsJoinedNum = db.getAllQs();
-                                        if (!qsJoinedNum.isEmpty())
-                                        {
-                                            int qsJoinedSize = qsJoinedNum.size();
-                                            tabPos = qsJoinedSize;
-                                            Log.e("tabPos", "" + tabPos);
-                                        }
-                                        qNameList = db.getQName(text);
-                                        if (qNameList.isEmpty())
-                                        {
-                                            ++tabPos;
-                                            //Log.e("++tabPos", "" + tabPos);
-                                            //Log.e("Position", "" + tabPos);
-                                            Random r = new Random();
-                                            int i1 = r.nextInt(101 - 1) + 1;
-                                            final int qpos = final_length + 1;
-                                            final String pos = Integer.toString(i1);
-                                            sDialog.setTitleText("Queued in...")
-                                                    .setContentText("You have joined the " + selecHeader + " " + selecHeader + " queue, your position is #" + qpos)
-                                                    .setConfirmText("OK")
-                                                    .showCancelButton(false)
-                                                    .setCancelClickListener(null)
-                                                    .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {
-                                                        @Override
-                                                        public void onClick(SweetAlertDialog sDialog) {
-                                                            parent.joinSelectedQ();
-                                                            tabTitle = selecHeader + " " + text;
-                                                            qNameServiceId = db.getQService_id(text);
-                                                            //String serviceid_string = qNameServiceId.get(0);
-                                                            //int serviceid = Integer.parseInt(serviceid_string);
-                                                            //db.insertQ(serviceid, text, tabPos, pos);
-                                                            //select = true;
-                                                            //Intent i = new Intent();
-                                                            //i.setClass(context, Qs.class);
-                                                            //i.putExtra("tab", "tabTitle");
-                                                            //String positionTab = Integer.toString(tabPos);
-                                                            //String int_serviceid = Integer.toString(serviceid);
-                                                            //i.putExtra("serviceid", "int_serviceid");
-                                                            //i.putExtra("tabPos", positionTab);
-                                                            sDialog.dismiss();
-                                                            nodeSelector.setChecked(true);
-                                                            exit_q_menu.setVisibility(View.VISIBLE);
-                                                            nodeSelector.setClickable(false);
-                                                            //context.startActivity(i);
-                                                            /*final String qpos_string = Integer.toString(qpos);*/
-                                                                    ((SelectableTreeFragment) c).getUser().updateJoinedQs();
-                                                            //Intent i = new Intent(c, Main_Activity.class);
-                                                            //Log.e("++tabPos", "" + tabPos);
-                                                            //context.startActivity(i);
-                                                            pDialog.dismiss();
-                                                            db.close();
-                                                        }
-                                                    })
-                                                    .changeAlertType(SweetAlertDialog.SUCCESS_TYPE);
-                                        } else {
-                                            pDialog.setTitleText("Exit Queue")
-                                                    .setContentText("You are already queued in to this que. Do you want to exit the " + selecHeader + " " + text + " queue")
-                                                    .setConfirmText("yes")
-                                                    .showCancelButton(true)
-                                                    .setCancelClickListener(new SweetAlertDialog.OnSweetClickListener() {
-                                                        @Override
-                                                        public void onClick(SweetAlertDialog sDialog) {
-                                                            sDialog.dismiss();
-                                                            pDialog.dismiss();
-                                                            nodeSelector.setChecked(true);
-                                                            exit_q_menu.setVisibility(View.VISIBLE);
-                                                        }
-                                                    })
-                                                    .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {
-                                                        @Override
-                                                        public void onClick(SweetAlertDialog sDialog) {
-                                                            qJoinedQid = db.getJoinedQ_id(text);
-                                                            String qid_string = qJoinedQid.get(0);
-                                                            db.deleteQ(qid_string);
-                                                            //select = false;
-                                                            sDialog.dismiss();
-                                                            pDialog.dismiss();
-                                                            exit_q_menu.setVisibility(View.GONE);
-                                                            nodeSelector.setChecked(false);
-                                                            nodeSelector.setEnabled(true);
-                                                            nodeSelector.setClickable(true);
-                                                            tvValue.setClickable(true);
-                                                            db.close();
-                                                        }
-                                                    })
-                                                    .changeAlertType(SweetAlertDialog.SUCCESS_TYPE);
-                                        }
-                                    }
-                                })
-                        .changeAlertType(SweetAlertDialog.SUCCESS_TYPE);
-            }
-        }.start();
-    }
-
-    public void dialogEjectQ(final String text, final CheckBox nodeSelector)
-    {
-        final Context c = context;
-        final String text_ = text;
-        final SweetAlertDialog pDialog;
-        pDialog = new SweetAlertDialog(context, SweetAlertDialog.PROGRESS_TYPE)
-                .setTitleText(selecHeader+" "+text)
-                .setContentText("Exiting " + text);
-
-        pDialog.show();
-        pDialog.setCancelable(false);
-        new CountDownTimer(800 * 7, 800)
-        {
-            public void onTick(long millisUntilFinished)
-            {
-                i++;
-                switch (i)
-                {
-                    case 0:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.blue_btn_bg_color));
-                        break;
-                    case 1:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.material_deep_teal_50));
-                        break;
-                    case 2:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                    case 3:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.material_deep_teal_20));
-                        break;
-                    case 4:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.material_blue_grey_80));
-                        break;
-                    case 5:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.warning_stroke_color));
-                        break;
-                    case 6:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                }
-            }
-            public void onFinish()
-            {
-                i = -1;
-                pDialog.setTitleText("Exit Queue")
-                        .setContentText("You are already queued in to this que. Do you want to exit the " + selecHeader + " " + text + " queue")
-                        .setConfirmText("yes")
-                        .showCancelButton(true)
-                        .setCancelClickListener(new SweetAlertDialog.OnSweetClickListener() {
-                            @Override
-                            public void onClick(SweetAlertDialog sDialog) {
-                                sDialog.dismiss();
-                                pDialog.dismiss();
-                                nodeSelector.setChecked(true);
-                                exit_q_menu.setVisibility(View.VISIBLE);
-                            }
-                        })
-                        .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {
-                            @Override
-                            public void onClick(SweetAlertDialog sDialog) {
-                                qJoinedQid = db.getJoinedQ_id(text);
-                                String qid_string = qJoinedQid.get(0);
-                                db.deleteQ(qid_string);
-                                qName_List = db.getQName(text);
-                                //select = false;
-                                sDialog.dismiss();
-                                pDialog.dismiss();
-                                nodeSelector.setChecked(false);
-                                nodeSelector.setClickable(true);
-                                exit_q_menu.setVisibility(View.GONE);
-                                db.close();
-                            }
-                        })
-                        .changeAlertType(SweetAlertDialog.SUCCESS_TYPE);
-            }
-        }.start();
-    }
-
-    public SelectableItemHolder(Activity context, JSONObject itemHeader, String qjoined)
-    {
-        super(context);
-        vq = itemHeader;
-        parent = (SelectableTreeFragment)context;
-        db = new Db(context);
-        //String s =((SingleFragmentActivity)context).getUser().getName();
-        Log.e("User","s");
-        try
-        {
-            selecHeader = itemHeader.getString("name");
-        }
-        catch (JSONException jse)
-        {
-            Log.e("Error",jse.toString());
-            selecHeader = "Error, get Help";
-        }
-        qsJoined = qjoined;
-    }
-
-    @Override
-    public View createNodeView(final TreeNode node, String value)
-    {
-        final LayoutInflater inflater = LayoutInflater.from(context);
-        final View view = inflater.inflate(R.layout.layout_selectable_item, null, false);
-        tvValue = (TextView) view.findViewById(R.id.node_value);
-        tvValue.setText(value);
-        tvValue.isClickable();
-        tvValue.setTextIsSelectable(true);
-        nodeSelector = (CheckBox) view.findViewById(R.id.node_selector);
-        exit_q_menu = (Button) view.findViewById(R.id.btn_exit_q_menu);
-        nodeSelector.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                db.open();
-                //Log.e("User", parent.getUser().getName());
-                qNameList = db.getQName(tvValue.getText().toString());
-                if (nodeSelector.isChecked())
-                {
-                    //dialog(tvValue.getText().toString());
-                    try
-                    {
-                        parent.setSelectedQ(vq.getString("Id"));
-                        QUser user =parent.getUser();
-                        if(user!=null){
-                            user.getQ(vq.getString("Id"));
-                            Log.e("USER",user.getName());
-                        }
-
-                        else {
-                            Log.e("USER","NULL");
-                        }
-
-                        parent.setQinfoDialog(SelectableItemHolder.this);
-                    }
-                    catch (JSONException jse)
-                    {
-                        Toast.makeText(parent,"Cannot Get The Q information, Q ID is Broken",Toast.LENGTH_LONG).show();
-                    }
-                }
-                db.close();
-            }
-        });
-
-        exit_q_menu.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                dialogEjectQ(tvValue.getText().toString(), nodeSelector);
-            }
-        });
-
-        db.open();
-        qName_List = db.getQName(tvValue.getText().toString());
-        if (!qName_List.isEmpty())
-        {
-            exit_q_menu.setVisibility(View.VISIBLE);
-            nodeSelector.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-                @Override
-                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                    if (qName_List.isEmpty())
-                    {
-                        nodeSelector.setChecked(false);
-                        nodeSelector.setEnabled(true);
-                        nodeSelector.setClickable(true);
-                        nodeSelector.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-                            @Override
-                            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                                qNameList = db.getQName(tvValue.getText().toString());
-                                if (nodeSelector.isChecked())
-                                {
-                                    dialog(tvValue.getText().toString());
-                                }
-                            }
-                        });
-                    } else if (!qName_List.isEmpty()) {
-                        nodeSelector.setChecked(true);
-                        nodeSelector.setClickable(false);
-                    }
-                }
-            });
-        }
-        db.close();
-
-        tvValue.setOnClickListener(new View.OnClickListener()
-        {
-            @Override
-            public void onClick(View view)
-            {
-                if (tvValue.isPressed())
-                {
-                    nodeSelector.setChecked(true);
-                }
-            }
-        });
-
-        if (node.isLastChild())
-        {
-            view.findViewById(R.id.bot_line).setVisibility(View.INVISIBLE);
-        }
-        return view;
-    }
-
-    @Override
-    public void toggleSelectionMode(boolean editModeEnabled)
-    {
-        nodeSelector.setVisibility(editModeEnabled ? View.VISIBLE : View.GONE);
-        nodeSelector.setChecked(false);
-    }
-}
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ build.gradle	(revision )
@@ -6,17 +6,19 @@
         maven {
             url  "http://dl.bintray.com/jfrog/jfrog-jars"
         }
+
+        maven { url 'https://jitpack.io' }
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.5.0'
+        classpath 'com.android.tools.build:gradle:2.0.0'
         classpath 'com.google.gms:google-services:1.5.0-beta2'
         classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
         classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
         classpath "com.novoda:bintray-release:$BINTRAY_RELEASE"
         classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1"
-        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.+'
+        classpath 'com.github.JakeWharton:sdk-manager-plugin:220bf7a88a7072df3ed16dc8466fb144f2817070'
         classpath 'com.github.ben-manes:gradle-versions-plugin:0.10.1'
-
+        classpath 'com.google.gms:google-services:2.0.0-alpha6'
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
     }
\ No newline at end of file
Index: fabtransitionactivity/src/main/java/com/github/fabtransitionactivity/SheetLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/src/main/java/com/github/fabtransitionactivity/SheetLayout.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/src/main/java/com/github/fabtransitionactivity/SheetLayout.java	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/QUserInfo.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/QUserInfo.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/QUserInfo.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,97 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-/**
- * Created by barnes on 10/4/15.
- */
-public class QUserInfo
-{
-    String qcategoryid;
-    String qcategoryname;
-    String qserviceproviderid;
-    String qserviceprovidername;
-    String qserviceid;
-    String qservicename;
-    String userCellNumber;
-
-    public QUserInfo(String qcategoryid, String qcategoryname, String qserviceproviderid,
-                     String qserviceprovidername, String qserviceid, String qservicename, String userCellNumber)
-    {
-        this.setQcategoryid(qcategoryid);
-        this.setQcategoryname(qcategoryname);
-        this.setQServiceproviderid(qserviceproviderid);
-        this.setQServiceprovidername(qserviceprovidername);
-        this.setQServiceid(qserviceid);
-        this.setQServicename(qservicename);
-        this.setUserCellNumber(userCellNumber);
-    }
-
-    public void setQcategoryid(String qcategoryid)
-    {
-        this.qcategoryid = qcategoryid;
-    }
-
-    public void setQcategoryname(String qcategoryname)
-    {
-        this.qcategoryname = qcategoryname;
-    }
-
-    public void setQServiceproviderid(String qserviceproviderid)
-    {
-        this.qserviceproviderid = qserviceproviderid;
-    }
-
-    public void setQServiceprovidername(String qserviceprovidername)
-    {
-        this.qserviceprovidername = qserviceprovidername;
-    }
-
-    public void setQServiceid(String qserviceid)
-    {
-        this.qserviceid = qserviceid;
-    }
-
-    public void setQServicename(String qservicename)
-    {
-        this.qservicename = qservicename;
-    }
-
-    public void setUserCellNumber(String userCellNumber)
-    {
-        this.userCellNumber = userCellNumber;
-    }
-
-    public String getQcategoryid()
-    {
-        return qcategoryid;
-    }
-
-    public String getQcategoryname()
-    {
-        return qcategoryname;
-    }
-
-    public String getQServiceProviderid()
-    {
-        return qserviceproviderid;
-    }
-
-    public String getQServiceProvidername()
-    {
-        return qserviceprovidername;
-    }
-
-    public String getQserviceid()
-    {
-        return qserviceid;
-    }
-
-    public String getQservicename()
-    {
-        return qservicename;
-    }
-
-    public String getUserCellNumber()
-    {
-        return userCellNumber;
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/activity_after_fab_animation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_after_fab_animation.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/res/layout/activity_after_fab_animation.xml	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/db/Constants.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/db/Constants.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/db/Constants.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,28 +0,0 @@
-package com.example.barnes.ummo.db;
-
-/**
- * Created by barnes on 8/6/15.
- */
-public class Constants
-{
-    public static final String DATABASE_NAME = "qdb";
-    public static final int DATABASE_VERSION = 1;
-
-    public static final String TABLE_NAME_Q = "qtable";
-    public static final String Q_ID = "qid";
-    public static final String Q_NAME = "qname";
-    public static final String Q_TAB_POSITION = "qtabposition";
-    public static final String Q_POSITION = "qposition";
-
-    public static final String TABLE_Q_SERVICETYPE = "qservicetype";
-    public static final String Q_SERVICETYPEID = "qserviceid";
-    public static final String Q_SERVICETYPENAME = "qservicetypename";
-
-    public static final String TABLE_Q_SERVICEPROVIDER = "qserviceprovider";
-    public static final String Q_SERVICEPROVIDERID = "qserviceproviderid";
-    public static final String Q_SERVICEPROVIDERNAME = "qserviceprovidername";
-
-    public static final String TABLE_Q_SERVICE = "qservice";
-    public static final String Q_SERVICENAMEID = "qservicenameid";
-    public static final String Q_SERVICENAME = "qservicename";
-}
Index: hollyviewpager/hollyviewpager.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hollyviewpager/hollyviewpager.iml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ hollyviewpager/hollyviewpager.iml	(revision )
@@ -12,10 +12,7 @@
         <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
         <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
         <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
-        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugAndroidTest" />
-        <option name="COMPILE_JAVA_TEST_TASK_NAME" value="compileDebugAndroidTestSources" />
         <afterSyncTasks>
-          <task>generateDebugAndroidTestSources</task>
           <task>generateDebugSources</task>
         </afterSyncTasks>
         <option name="ALLOW_USER_CONFIGURATION" value="false" />
@@ -29,7 +26,7 @@
   </component>
   <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
-    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/androidTest/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
@@ -51,6 +48,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
@@ -65,6 +69,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/UmmoBroadCastReciever.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/UmmoBroadCastReciever.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/UmmoBroadCastReciever.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,15 +0,0 @@
-package com.example.barnes.ummo;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-
-/**
- * Created by sihle on 1/10/16.
- */
-public class UmmoBroadCastReciever extends BroadcastReceiver{
-    @Override
-    public void onReceive(Context context, Intent intent) {
-
-    }
-}
Index: app/src/main/java/com/example/barnes/ummo/Qs.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/Qs.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/Qs.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,148 +0,0 @@
-package com.example.barnes.ummo;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.preference.PreferenceManager;
-import android.support.v4.view.ViewPager;
-import android.support.v7.app.AppCompatActivity;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-
-import com.astuetz.PagerSlidingTabStrip;
-import com.example.barnes.ummo.db.Db;
-import com.example.barnes.ummo.fragment.QFragmentManager;
-import com.example.barnes.ummo.ummoAPI.JoinedQ;
-import com.github.florent37.hollyviewpager.HollyViewPager;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import butterknife.Bind;
-import uk.co.chrisjenx.calligraphy.CalligraphyConfig;
-
-public class Qs extends AppCompatActivity
-{
-    @Bind(R.id.hollyViewPager)
-    HollyViewPager hollyViewPager;
-
-    private ViewPager viewPager;
-    private PagerSlidingTabStrip pagerSlidingTabStrip;
-    Db db;
-    public List<String> qTabsList = null;
-    public List<String> qTabsNames = null;
-    public List<String> qPos = null;
-    int numTabs;
-    String qsJSON;
-    //I replaced the String with the JoinedQ Class, to encapsulate more information.
-    List<JoinedQ> qnames = new ArrayList<JoinedQ>();
-    int tabpos;
-    @Override
-    protected void onCreate(Bundle savedInstanceState)
-    {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.q);
-        String cellnumb =  PreferenceManager.getDefaultSharedPreferences(this).getString(getString(R.string.PREF_USER_CELLNUMBER),"NULL");
-        CalligraphyConfig.initDefault(new CalligraphyConfig.Builder()
-                        .setDefaultFontPath("fonts/Ubuntu-C.ttf")
-                        .setFontAttrId(R.attr.fontPath)
-                        .build()
-        );
-        qsJSON=getIntent().getStringExtra("joinedQs");
-        Log.d("QSTRING",qsJSON);
-        try{
-            String qAlphaNum ="";
-            String pos = "";
-            JSONArray qArrays = new JSONArray(qsJSON);
-            for(int i=0;i<qArrays.length();i++){
-                String Qname = qArrays.getJSONObject(i).getJSONObject("managedQ").getString("qName");
-                if(cellnumb!="NULL"){
-                    JoinedQ joinedQ = new JoinedQ(qArrays.getJSONObject(i),cellnumb);
-                    qnames.add(joinedQ);
-                    pos=qArrays.getJSONObject(i).getJSONObject("managedQ").getJSONObject("qErs").getJSONObject(cellnumb).getString("position");
-                    qAlphaNum = qArrays.getJSONObject(i).getJSONObject("managedQ").getJSONObject("qErs").getJSONObject(cellnumb).getString("numCode");
-                }
-                //TextView tv = (TextView)findViewById(R.id.man_one_text);
-                //        tv.setText(qAlphaNum);
-            }
-        }
-        catch (JSONException jse)
-        {
-            Log.e("JoinedQS",jse.toString());
-        }
-        db = new Db(this);
-        db.open();
-        qTabsNames = db.getAllQs();
-        qTabsList = db.getAllQs();
-        qPos = db.getQPosition();
-        db.close();
-        numTabs = qTabsList.size();
-        viewPager = (ViewPager) findViewById(R.id.view_pager);
-        pagerSlidingTabStrip = (PagerSlidingTabStrip) findViewById(R.id.tabs);
-        Intent intent = getIntent();
-        if (intent != null)
-        {
-            String tabPos = intent.getStringExtra("tabPos");
-            if ((tabPos!=null))
-            {
-                int int_tabPos = Integer.parseInt(tabPos);
-                tabpos = int_tabPos;
-                viewPager.setAdapter(new QFragmentManager(getSupportFragmentManager(), qnames, tabpos));
-                pagerSlidingTabStrip.setViewPager(viewPager);
-                if (tabpos != -1)
-                {
-                    viewPager.setCurrentItem(tabpos);
-                }
-            }
-            else
-            {
-                tabpos = -1;
-                viewPager.setAdapter(new QFragmentManager(getSupportFragmentManager(), qnames, tabpos));
-                pagerSlidingTabStrip.setViewPager(viewPager);
-            }
-        }
-    }
-
-    private List<String> getTitles()
-    {
-       /* if (qTabsNames.size() == 1)
-            return Lists.newArrayList(qTabsNames.get(0));
-        else if (qTabsNames.size() == 2)
-            return Lists.newArrayList(qTabsNames.get(0), qTabsNames.get(1));
-        else if (qTabsNames.size() == 3)
-            return Lists.newArrayList(qTabsNames.get(0),qTabsNames.get(1),qTabsNames.get(2));
-        else if (qTabsNames.size() == 4)
-            return Lists.newArrayList(qTabsNames.get(0),qTabsNames.get(1),qTabsNames.get(2),qTabsNames.get(3));
-        else if (qTabsNames.size() == 5)
-            return Lists.newArrayList(qTabsNames.get(0),qTabsNames.get(1),qTabsNames.get(2),qTabsNames.get(3),qTabsNames.get(4));
-        else if (qTabsNames.size() == 6)
-            return Lists.newArrayList(qTabsNames.get(0),qTabsNames.get(1),qTabsNames.get(2),qTabsNames.get(3),qTabsNames.get(4),qTabsNames.get(5));
-        else if (qTabsNames.size() == 7)
-            return Lists.newArrayList(qTabsNames.get(0),qTabsNames.get(1),qTabsNames.get(2),qTabsNames.get(3),qTabsNames.get(4),qTabsNames.get(5),qTabsNames.get(6));
-        else
-            return Lists.newArrayList(qTabsNames.get(0));*/
-        return new ArrayList<String>();
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu)
-    {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.menu_qs, menu);
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item)
-    {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-        //noinspection SimplifiableIfStatement
-        return super.onOptionsItemSelected(item);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/holder/SimpleStringRecyclerViewAdapter.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/SimpleStringRecyclerViewAdapter.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/SimpleStringRecyclerViewAdapter.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,97 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.content.Context;
-import android.support.v7.widget.RecyclerView;
-import android.util.TypedValue;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.ivbaranov.mli.MaterialLetterIcon;
-
-import java.util.Random;
-
-/**
- * Created by barnes on 12/14/15.
- */
-public class SimpleStringRecyclerViewAdapter extends RecyclerView.Adapter<SimpleStringRecyclerViewAdapter.ViewHolder>
-{
-    private final TypedValue mTypedValue = new TypedValue();
-    private int mBackground;
-    private String mValues;
-    private int[] mMaterialColors;
-    private int mType;
-
-    private static final int PROVIDERS = 0;
-    private static final int COUNTRIES = 1;
-    private static final Random RANDOM = new Random();
-
-    public static class ViewHolder extends RecyclerView.ViewHolder
-    {
-        public String mBoundString;
-        public final View mView;
-        public final MaterialLetterIcon mIcon;
-        public final TextView mTextView;
-
-        public ViewHolder(View view)
-        {
-            super(view);
-            mView = view;
-            mIcon = (MaterialLetterIcon) view.findViewById(R.id.icon);
-            mTextView = (TextView) view.findViewById(android.R.id.text1);
-        }
-
-        @Override public String toString() {
-            return super.toString() + " '" + mTextView.getText();
-        }
-    }
-
-    public String getValueAt(int position)
-    {
-        return mValues;
-    }
-
-    public SimpleStringRecyclerViewAdapter(Context context, String item, int type)
-    {
-        context.getTheme().resolveAttribute(R.attr.selectableItemBackground, mTypedValue, true);
-        mMaterialColors = context.getResources().getIntArray(R.array.colors);
-        mBackground = mTypedValue.resourceId;
-        mValues = item;
-        mType = type;
-    }
-
-    @Override public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType)
-    {
-        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_icon_node, parent, false);
-        //final View view = inflater.inflate(R.layout.layout_icon_node, null, false);
-        view.setBackgroundResource(mBackground);
-        return new ViewHolder(view);
-    }
-
-    @Override public void onBindViewHolder(final ViewHolder holder, int position)
-    {
-        switch (mType)
-        {
-            case PROVIDERS:
-                holder.mIcon.setInitials(true);
-                holder.mIcon.setInitialsNumber(4);
-                holder.mIcon.setLetterSize(18);
-                break;
-            case COUNTRIES:
-                holder.mIcon.setInitials(true);
-                holder.mIcon.setLettersNumber(4);
-                holder.mIcon.setLetterSize(16);
-                break;
-        }
-        holder.mBoundString = mValues;
-        holder.mIcon.setShapeColor(mMaterialColors[RANDOM.nextInt(mMaterialColors.length)]);
-        holder.mTextView.setText(mValues);
-        holder.mIcon.setLetter(mValues);
-    }
-    @Override public int getItemCount()
-    {
-        return 1;
-    }
-}
Index: fabtransitionactivity/src/androidTest/java/com/github/fabtransitionactivity/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/src/androidTest/java/com/github/fabtransitionactivity/ApplicationTest.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/src/androidTest/java/com/github/fabtransitionactivity/ApplicationTest.java	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/Main_Activity.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/Main_Activity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/Main_Activity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,272 +0,0 @@
-package com.example.barnes.ummo;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.preference.PreferenceManager;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentPagerAdapter;
-import android.support.v4.content.LocalBroadcastManager;
-import android.support.v7.widget.Toolbar;
-import android.util.Log;
-import android.view.MenuItem;
-import android.view.View;
-import android.widget.TextView;
-
-import com.crashlytics.android.Crashlytics;
-import com.example.barnes.ummo.fragment.BaseActivity;
-import com.example.barnes.ummo.fragment.ScrollViewFragment;
-import com.example.barnes.ummo.ummoAPI.JoinedQ;
-import com.example.barnes.ummo.ummoAPI.QUser;
-import com.github.florent37.hollyviewpager.HollyViewPager;
-import com.github.florent37.hollyviewpager.HollyViewPagerConfigurator;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-import io.fabric.sdk.android.Fabric;
-
-/**
- * Created by barnes on 12/30/15.
- */
-public class Main_Activity extends BaseActivity
-{
-    int pageCount = 2;
-    @Bind(R.id.toolbar)
-    Toolbar toolbar;
-    @Bind(R.id.hollyViewPager)
-    HollyViewPager hollyViewPager;
-    String qsJSON;
-    List<JoinedQ> qnames = new ArrayList<JoinedQ>();
-    List<ScrollViewFragment> frags = new ArrayList<ScrollViewFragment>();
-    UmmoBrouadcatReciever broadcastReceiver;
-    String qname;
-    String qposition;
-    String qalphaNum;
-
-    @Override
-    protected void onPause()
-    {
-        exitToBottomAnimation();
-        super.onPause();
-    }
-    @Override
-    protected void onCreate(Bundle savedInstanceState)
-    {
-        super.onCreate(savedInstanceState);
-
-        //LocalBroadcastManager.getInstance(this).registerReceiver(mMessageReceiver, new IntentFilter("com.example.barnes.ummo.CATEGORIES"));
-        //enterFromBottomAnimation();
-        Fabric.with(this, new Crashlytics());
-        setContentView(R.layout.activity_main);
-        String cellnumb =  PreferenceManager.getDefaultSharedPreferences(this).getString(getString(R.string.PREF_USER_CELLNUMBER),"NULL");
-        ButterKnife.bind(this);
-        setSupportActionBar(toolbar);
-        toolbar.setTitleTextColor(0xFFFFFFFF);
-        toolbar.setBackgroundColor(getResources().getColor(R.color.ummo));
-        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-
-        hollyViewPager.getViewPager().setPageMargin(getResources().getDimensionPixelOffset(R.dimen.viewpager_margin));
-        hollyViewPager.setConfigurator(new HollyViewPagerConfigurator() {
-            @Override
-            public float getHeightPercentForPage(int page) {
-                return ((page + 4) % 10) / 10f;
-            }
-        });
-
-        Bundle extras = getIntent().getExtras();
-        Intent intent = getIntent();
-
-       /* if(extras == null)
-        {
-            hollyViewPager.setAdapter(new FragmentPagerAdapter(getSupportFragmentManager())
-            {
-                @Override
-                public Fragment getItem(int position)
-                {
-                    //if(position%2==0)
-                    //    return new RecyclerViewFragment();
-                    //else
-                    qnames = new QUser(Main_Activity.this).getLocalJoinedQList();
-                    enterFromBottomAnimation();
-                    return ScrollViewFragment2.newInstance((String) getPageTitle(position));
-                }
-
-                @Override
-                public int getCount() {
-                    return pageCount;
-                }
-
-                @Override
-                public CharSequence getPageTitle(int position) {
-                    return "TITLE" + position;
-                }
-            });
-        }*/
-        //else
-        //{
-
-       // }
-
-        setView();
-    }
-
-
-    public void setView(){
-        qnames = new QUser(this).getLocalJoinedQList();
-
-        Log.d("MAINACT","Setting View");
-
-        if (qnames.isEmpty())
-        {
-            TextView emptyQList = (TextView) findViewById(R.id.empty_qlist);
-            emptyQList.setVisibility(View.VISIBLE);
-        }
-        else
-        {
-            Log.e("QNAME)",qnames.get(0).getqName());
-        }
-
-        //Log.e("QNAME)",qnames.get(0).getqName());
-            /*qsJSON = getIntent().getStringExtra("joinedQs");
-            Log.d("QSTRING", qsJSON);
-            try
-            {
-                String qAlphaNum ="";
-                String pos = "";
-                JSONArray qArrays = new JSONArray(qsJSON);
-                for(int i=0;i<qArrays.length();i++)
-                {
-                    String q_name = qArrays.getJSONObject(i).getJSONObject("managedQ").getString("qName");
-                    qname = q_name;
-                    if(cellnumb!="NULL")
-                    {
-                        JoinedQ joinedQ = new JoinedQ(qArrays.getJSONObject(i),cellnumb);
-                        qnames.add(joinedQ);
-                        pos = qArrays.getJSONObject(i).getJSONObject("managedQ").getJSONObject("qErs").getJSONObject(cellnumb).getString("position");
-                        qposition = getIntent().getStringExtra("qpos");
-                        qAlphaNum = qArrays.getJSONObject(i).getJSONObject("managedQ").getJSONObject("qErs").getJSONObject(cellnumb).getString("numCode");
-                        qalphaNum = qAlphaNum;
-                    }
-                    //TextView tv = (TextView)findViewById(R.id.man_one_text);
-                    //tv.setText(qAlphaNum);
-                }
-            }
-            catch (JSONException jse)
-            {
-                Log.e("JoinedQS",jse.toString());
-            }*/
-
-        hollyViewPager.setAdapter(adapter);
-    }
-    // handler for received Intents for the "my-event" event
-    FragmentPagerAdapter adapter = new FragmentPagerAdapter(getSupportFragmentManager())
-    {
-
-        @Override
-        public int getItemPosition(Object object) {
-
-            return super.getItemPosition(object);
-        }
-
-        @Override
-        public Fragment getItem(int position)
-        {
-            //if(position%2==0)
-            //    return new RecyclerViewFragment();
-            //else
-            enterFromBottomAnimation();
-            ScrollViewFragment sv = ScrollViewFragment.newInstance(qnames.get(position),qname, "4", "qalphaNum");
-            frags.add(position,sv);
-
-            return sv;
-        }
-
-
-
-        @Override
-        public void notifyDataSetChanged() {
-
-            super.notifyDataSetChanged();
-
-        }
-
-
-
-        @Override
-        public int getCount() {
-            return qnames.size();
-        }
-
-        @Override
-        public CharSequence getPageTitle(int position) {
-            return qnames.get(position).getqName();
-        }
-    };
-
-    private BroadcastReceiver mMessageReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            // Extract data included in the Intent
-            String message = intent.getStringExtra("message");
-            try{
-                JSONObject obj = new JSONObject(message);
-                QUser user = new QUser(Main_Activity.this);
-                JoinedQ joinedQ = new JoinedQ(obj,user.getCellNumb());
-                joinedQ.save(Main_Activity.this,user);
-                qnames = new QUser(Main_Activity.this).getLocalJoinedQList();
-                //adapter.notifyDataSetChanged();
-
-                for(int i=0;i<qnames.size();i++){
-                    frags.get(i).setInfo(qnames.get(i));
-                }
-
-                //hollyViewPager.removeAllViews();
-
-                //setView();
-            }
-            catch (JSONException jse){
-                Log.e("Q_ACTIVITY",jse.toString());
-            }
-            Log.d("receiver", "Got message: " + message);
-        }
-    };
-
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item)
-    {
-        switch (item.getItemId())
-        {
-            case android.R.id.home:
-                onBackPressed();
-                return true;
-        }
-        return super.onOptionsItemSelected(item);
-    }
-
-    @Override
-    protected void onResume()
-    {
-        super.onResume();
-        LocalBroadcastManager.getInstance(this).registerReceiver(mMessageReceiver,
-                new IntentFilter("com.example.barnes.ummo.CATEGORIES"));
-    }
-}
-
-class UmmoBrouadcatReciever extends BroadcastReceiver
-{
-    @Override
-    public void onReceive(Context context, Intent intent)
-    {
-        String mess =intent.getStringExtra("message");
-        Log.d("MESSAGE",mess);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/fragment/BaseActivity.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/BaseActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/BaseActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,34 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-
-import com.example.barnes.ummo.R;
-
-/**
- * Created by barnes on 12/18/15.
- */
-public class BaseActivity extends AppCompatActivity
-{
-    protected void setUpToolbarWithTitle(String title, boolean hasBackButton)
-    {
-        Toolbar toolBar = (Toolbar) findViewById(R.id.toolbar_actionbar);
-        //setSupportActionBar(toolBar);
-        if(getSupportActionBar() != null)
-        {
-            getSupportActionBar().setTitle(title);
-            getSupportActionBar().setDisplayShowHomeEnabled(hasBackButton);
-            getSupportActionBar().setDisplayHomeAsUpEnabled(hasBackButton);
-        }
-    }
-
-    protected void enterFromBottomAnimation()
-    {
-        overridePendingTransition(R.anim.activity_open_translate_from_bottom, R.anim.activity_no_animation);
-    }
-
-    protected void exitToBottomAnimation()
-    {
-        overridePendingTransition(R.anim.activity_no_animation, R.anim.activity_close_translate_to_bottom);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/holder/MaterialLetterIconTreeItemHolder.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/holder/MaterialLetterIconTreeItemHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/holder/MaterialLetterIconTreeItemHolder.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,88 +0,0 @@
-package com.example.barnes.ummo.holder;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.github.ivbaranov.mli.MaterialLetterIcon;
-import com.github.johnkil.print.PrintView;
-import com.unnamed.b.atv.model.TreeNode;
-
-import java.util.Random;
-
-/**
- * Created by barnes on 12/14/15.
- */
-public class MaterialLetterIconTreeItemHolder extends TreeNode.BaseNodeViewHolder<MaterialLetterIconTreeItemHolder.IconTreeItem> {
-    public TextView tvValue;
-    private PrintView arrowView;
-    String serviceProviderName;
-
-    public MaterialLetterIconTreeItemHolder(Context context)
-    {
-        super(context);
-    }
-
-    @Override
-    public View createNodeView(final TreeNode node, IconTreeItem value)
-    {
-        final LayoutInflater inflater = LayoutInflater.from(context);
-        final View view = inflater.inflate(R.layout.layout_icon_node, null, false);
-        tvValue = (TextView) view.findViewById(R.id.node_value);
-        tvValue.setText(value.text);
-
-        serviceProviderName = value.text.toString();
-        int[] mMaterialColors;
-        Random RANDOM = new Random();
-        //final PrintView iconView = (PrintView) view.findViewById(R.id.icon);
-        MaterialLetterIcon mIcon = (MaterialLetterIcon) view.findViewById(R.id.icon);
-        mMaterialColors = view.getContext().getResources().getIntArray(R.array.colors);
-        mIcon.setShapeColor(mMaterialColors[RANDOM.nextInt(mMaterialColors.length)]);
-        mIcon.setInitials(true);
-        mIcon.setInitialsNumber(1);
-        mIcon.setLetterSize(18);
-        mIcon.setLetter(serviceProviderName);
-        //mIcon.setIconText(context.getResources().getString(value.icon));
-        arrowView = (PrintView) view.findViewById(R.id.arrow_icon);
-        view.findViewById(R.id.btn_addFolder).setOnClickListener(new View.OnClickListener()
-        {
-            @Override
-            public void onClick(View v)
-            {
-                TreeNode newFolder = new TreeNode(new IconTreeItem(serviceProviderName));
-                getTreeView().addNode(node, newFolder);
-            }
-        });
-        view.findViewById(R.id.btn_delete).setOnClickListener(new View.OnClickListener()
-        {
-            @Override
-            public void onClick(View v)
-            {
-                getTreeView().removeNode(node);
-            }
-        });
-        //if My computer
-        if (node.getLevel() == 1)
-        {
-            view.findViewById(R.id.btn_delete).setVisibility(View.GONE);
-        }
-        return view;
-    }
-
-    @Override
-    public void toggle(boolean active)
-    {
-        arrowView.setIconText(context.getResources().getString(active ? R.string.ic_keyboard_arrow_down : R.string.ic_keyboard_arrow_right));
-    }
-
-    public static class IconTreeItem
-    {
-        public String text;
-        public IconTreeItem(String text)
-        {
-            this.text = text;
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/QMaster.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/QMaster.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/QMaster.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,381 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-import android.app.Activity;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
-import android.util.Log;
-
-import com.example.barnes.ummo.R;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.net.MalformedURLException;
-import java.net.URL;
-
-/**
- * Created by barnes on 11/1/15.
- */
-public class QMaster
-{
-    private Activity callingActivity;
-    private String uCellNumber;
-    private boolean registered=false;
-    private String uName;
-
-
-    public void register(final String name,final String cell) {
-        try {
-
-            String urlString = callingActivity.getString(R.string.SERVER_URL)+"qMaster/register";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("uid",cell);
-            formPoster.add("fullName",name);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try {
-                        InputStream is = formPoster.post();
-
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while((line = rd.readLine()) != null) {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-
-                        final String objString = response.toString();
-                        ((QUserListner) callingActivity).userRegistered(objString);
-                        //This would mean the registration was compleate
-                        //
-                        //JSONObject obj = new JSONObject(objString);
-                        //Set the Shared Preferences for User Name and CellNumber
-                        SharedPreferences sp = PreferenceManager
-                                .getDefaultSharedPreferences(callingActivity);
-                        sp.edit().putString(callingActivity.getString(R.string.PREF_USER_NAME), name).apply();
-                        sp.edit().putString(callingActivity.getString(R.string.PREF_USER_CELLNUMBER), cell).apply();
-                        sp.edit().putBoolean(callingActivity.getString(R.string.PREF_USER_REGISTERED), true).apply();
-
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener) callingActivity).registered(objString);
-                            }
-                        });
-
-
-                    }
-
-                    catch (final IOException ioe){
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener)callingActivity).registrationError(ioe.toString());
-                            }
-                        });
-                    }
-
-                }
-            });
-
-            thread.start();
-
-
-        }
-
-        catch (MalformedURLException me){
-            Log.e("NetWork Exception", me.toString());
-        }
-
-
-
-
-    }
-
-    public boolean isRegistered() {
-        return registered;
-    }
-
-
-    public void createQ(String frame,String qname,String qTag) {
-        try {
-            String urlString = callingActivity.getString(R.string.SERVER_URL)+"qMaster/craeteQ";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("cellnum",uCellNumber);
-            formPoster.add("frame",frame);
-            formPoster.add("qName",qname);
-            formPoster.add("tag",qTag);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try {
-                        InputStream is = formPoster.post();
-
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while((line = rd.readLine()) != null) {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener) callingActivity).qCreated(objString);
-                            }
-                        });
-
-
-                    }
-
-                    catch (final IOException ioe){
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener)callingActivity).createQError(ioe.toString());
-                            }
-                        });
-                    }
-
-                }
-            });
-
-            thread.start();
-
-
-        }
-
-        catch (MalformedURLException me){
-            Log.e("NetWork Exception", me.toString());
-        }
-
-
-
-
-    }
-
-    public void destroyQ() {
-        try {
-            String urlString = callingActivity.getString(R.string.SERVER_URL)+"qMaster/destroyQ";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("cellnum",uCellNumber);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try {
-                        InputStream is = formPoster.post();
-
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while((line = rd.readLine()) != null) {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener) callingActivity).qDestroyed(objString);
-                            }
-                        });
-
-
-                    }
-
-                    catch (final IOException ioe){
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener)callingActivity).onQDestroyError(ioe.toString());
-                            }
-                        });
-                    }
-
-                }
-            });
-
-            thread.start();
-
-
-        }
-
-        catch (MalformedURLException me){
-            Log.e("NetWork Exception", me.toString());
-        }
-
-
-
-
-    }
-
-    public void getQUpdates() {
-        try {
-            String urlString = callingActivity.getString(R.string.SERVER_URL)+"qMaster/updates";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("cellnum",uCellNumber);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try {
-                        InputStream is = formPoster.post();
-
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while((line = rd.readLine()) != null) {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener) callingActivity).updatesRecieved(objString);
-                            }
-                        });
-
-
-                    }
-
-                    catch (final IOException ioe){
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener)callingActivity).onUpdtaesError(ioe.toString());
-                            }
-                        });
-                    }
-
-                }
-            });
-
-            thread.start();
-
-
-        }
-
-        catch (MalformedURLException me){
-            Log.e("NetWork Exception", me.toString());
-        }
-
-
-
-
-    }
-
-
-    public void dQUser(String ucellnum) {
-        try {
-            String urlString = callingActivity.getString(R.string.SERVER_URL)+"qMaster/deQUser";
-            final FormPoster formPoster = new FormPoster(new URL(urlString));
-            formPoster.add("mcellnum",uCellNumber);
-            formPoster.add("ucellnum",ucellnum);
-            formPoster.add("data", "data");
-            Thread thread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    try {
-                        InputStream is = formPoster.post();
-
-                        BufferedReader rd = new BufferedReader(new InputStreamReader(is));
-                        final StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+
-                        String line;
-                        while((line = rd.readLine()) != null) {
-                            response.append(line);
-                            response.append('\r');
-                        }
-                        rd.close();
-
-                        final String objString = response.toString();
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener) callingActivity).userDQd(objString);
-                            }
-                        });
-
-
-                    }
-
-                    catch (final IOException ioe){
-                        callingActivity.runOnUiThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                ((QMasterListener)callingActivity).onUserDQError(ioe.toString());
-                            }
-                        });
-                    }
-
-                }
-            });
-
-            thread.start();
-
-
-        }
-
-        catch (MalformedURLException me){
-            Log.e("NetWork Exception", me.toString());
-        }
-
-
-
-
-    }
-
-
-
-
-    QMaster(Activity activity){
-        setCallingActivity(activity);
-        SharedPreferences sp = PreferenceManager
-                .getDefaultSharedPreferences(callingActivity);
-        registered = sp.getBoolean(callingActivity.getString(R.string.PREF_USER_REGISTERED), false);
-        if (registered) {
-            uName = sp.getString(callingActivity.getString(R.string.PREF_USER_NAME), "NO NAME");
-            uCellNumber = sp.getString(callingActivity.getString(R.string.PREF_USER_CELLNUMBER), "NO NUMBER");
-            //   Intent intent = new Intent(Register.this, MainActivity.class);
-            //  startActivity(intent);
-            //  finish();
-            Log.d("prefs", "registered");
-        }
-    }
-
-    public void setCallingActivity(Activity activity) {
-        callingActivity = activity;
-    }
-
-
-    public void setName() {
-
-    }
-
-
-
-    public void setCellNumber() {
-
-    }
-
-    public String getName() {
-        return uName;
-    }
-
-    public String getCellNumb() {
-        return uCellNumber;
-    }
-}
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ gradle/wrapper/gradle-wrapper.properties	(revision )
@@ -3,4 +3,4 @@
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.4-all.zip
+distributionUrl=https://services.gradle.org/distributions/gradle-2.10-all.zip
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/res/values/strings.xml	(revision )
@@ -817,14 +817,12 @@
     <string name="PREF_USER_REGISTERED">user_registered</string>
     <string name="PREF_USER_CELLNUMBER">cell_numb_preference</string>
     <string name="PREF_USER_NAME">user_name_preference</string>
-
-    <string name="gcm_defaultSenderId">756312646384</string>
+    <string name="PREF_CATEGORIES_JSON">categories_saved</string>
     <string name="PREF_CATEGORIES">categoriesJSON</string>
 
     <string name="INBOX">Inbox</string>
     <string name="COMPOSE">Compose</string>
     <string name="SEND">Send</string>
-    
     <string name="uber_ummo">zxmWmZTHkJX51wAduKMVZjOaYLQZBzvs</string>
 
     <!-- TODO: Remove or change this placeholder text -->
Index: app/src/main/java/com/example/barnes/ummo/fragment/RecyclerViewFragment.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/RecyclerViewFragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/RecyclerViewFragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,43 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.barnes.ummo.R;
-import com.example.barnes.ummo.recycler.RecyclerAdapter;
-import com.github.florent37.hollyviewpager.HollyViewPagerBus;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-
-/**
- * Created by barnes on 12/30/15.
- */
-public class RecyclerViewFragment extends Fragment
-{
-    @Bind(R.id.recyclerView)
-    RecyclerView recyclerView;
-
-    @Nullable
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.fragment_recyclerview, container, false);
-    }
-
-    @Override
-    public void onViewCreated(View view, Bundle savedInstanceState) {
-        super.onViewCreated(view, savedInstanceState);
-        ButterKnife.bind(this, view);
-
-        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
-        recyclerView.setAdapter(new RecyclerAdapter());
-
-        HollyViewPagerBus.registerRecyclerView(getActivity(), recyclerView);
-    }
-}
Index: app/src/main/java/com/example/barnes/ummo/fragment/QFragmentManager.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/QFragmentManager.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/QFragmentManager.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,46 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentPagerAdapter;
-
-import com.example.barnes.ummo.ummoAPI.JoinedQ;
-
-import java.util.List;
-
-/**
- * Created by barnes on 10/12/15.
- */
-public class QFragmentManager extends FragmentPagerAdapter
-{
-    int frag_count;
-    List<JoinedQ> list_;
-    int tposition;
-
-    //So I had to change the Constructor too. or
-    public QFragmentManager(FragmentManager fm, List<JoinedQ> list, int tabp)
-    {
-        super(fm);
-        list_ = list;
-        frag_count = list.size();
-        tposition = tabp;
-    }
-
-    @Override
-    public CharSequence getPageTitle(int position)
-    {
-        return list_.get(position).getqName();
-    }
-
-    @Override
-    public Fragment getItem(int position)
-    {
-        return Qfragment.newInstance(position + 1, tposition, list_.get(position));
-    }
-
-    @Override
-    public int getCount()
-    {
-        return frag_count;
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/fragment/AfterFabAnimationActivity.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/AfterFabAnimationActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/AfterFabAnimationActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,73 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.os.Bundle;
-import android.support.v7.widget.Toolbar;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.widget.Toast;
-
-import com.example.barnes.ummo.R;
-
-import butterknife.ButterKnife;
-
-/**
- * Created by barnes on 12/4/15.
- */
-public class AfterFabAnimationActivity extends BaseActivity_2
-{
-    static int mFrag;
-    int nFrag;
-
-    public static AfterFabAnimationActivity newInstance(int frag, int frag_n)
-    {
-        //Bundle args = new Bundle();
-        //args.putInt(ARG_FRAG, frag);
-        //args.putInt("ARGFRAG", frag_n);
-        AfterFabAnimationActivity fragment = new AfterFabAnimationActivity();
-        //fragment.setArguments(args);
-        return fragment;
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState)
-    {
-        enterFromBottomAnimation();
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.q_list_items);
-        ButterKnife.bind(this);
-        setUpToolbarWithTitle(getString(R.string.app_name), true);
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_actionbar_);
-        //toolbar.setTitle("mmo");
-        //toolbar.setNavigationIcon(R.mipmap.ummo_logo);
-        toolbar.setLogo(R.mipmap.ummo_logo);
-    }
-
-    @Override
-    protected void onPause()
-    {
-        exitToBottomAnimation();
-        super.onPause();
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu)
-    {
-        getMenuInflater().inflate(R.menu.menu_send, menu);
-        return super.onCreateOptionsMenu(menu);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item)
-    {
-        switch (item.getItemId())
-        {
-            case R.id.menu_send:
-                Toast.makeText(getApplicationContext(), "Yeah!", Toast.LENGTH_SHORT).show();
-                break;
-            case android.R.id.home:
-                onBackPressed();
-                return true;
-        }
-        return super.onOptionsItemSelected(item);
-    }
-}
\ No newline at end of file
Index: fabtransitionactivity/src/main/res/layout/bottom_sheet_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/src/main/res/layout/bottom_sheet_layout.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/src/main/res/layout/bottom_sheet_layout.xml	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/gcm/GcmMessageHandler.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/gcm/GcmMessageHandler.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/gcm/GcmMessageHandler.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,81 +0,0 @@
-package com.example.barnes.ummo.gcm;
-
-/**
- * Created by sihle on 12/3/15.
- */
-import android.app.NotificationManager;
-import android.app.PendingIntent;
-import android.app.TaskStackBuilder;
-import android.content.Context;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.os.Bundle;
-import android.preference.PreferenceManager;
-import android.support.v4.app.NotificationCompat;
-import android.support.v4.content.LocalBroadcastManager;
-import android.util.Log;
-
-import com.example.barnes.ummo.Main_Activity;
-import com.example.barnes.ummo.Qs;
-import com.example.barnes.ummo.R;
-import com.example.barnes.ummo.SingleFragmentActivity;
-import com.google.android.gms.gcm.GcmListenerService;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-
-/**
- * Created by sihle on 11/28/15.
- */
-public class GcmMessageHandler extends GcmListenerService {
-    public static final int MESSAGE_NOTIFICATION_ID = 435345;
-
-    @Override
-    public void onMessageReceived(String from, Bundle data) {
-        String message = data.getString("message");
-        try{
-            JSONObject object = new JSONObject(message);
-            String title = object.getJSONObject("managedQ").getString("qName");
-            createNotification(title,"Changed");
-
-        }
-
-        catch (JSONException jse){
-            Log.e("NOTIFICATION",jse.toString());
-        }
-
-
-        Intent intent = new Intent("com.example.barnes.ummo.CATEGORIES");
-        intent.putExtra("message",message);
-        Log.e("GCM",message);
-        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
-
-    }
-
-    // Creates notification based on title and body received
-    private void createNotification(String title, String body) {
-        Context context = getBaseContext();
-        Intent resultIntent = new Intent(this, Main_Activity.class);
-
-        TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);
-        stackBuilder.addParentStack(Main_Activity.class);
-
-        stackBuilder.addNextIntent(resultIntent);
-        PendingIntent resultPendingIntent =
-                stackBuilder.getPendingIntent(
-                        0,
-                        PendingIntent.FLAG_UPDATE_CURRENT
-                );
-
-
-        NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(context)
-                .setSmallIcon(R.mipmap.ic_launcher).setContentTitle(title)
-                .setAutoCancel(true)
-                .setContentText(body);
-        mBuilder.setContentIntent(resultPendingIntent);
-        NotificationManager mNotificationManager = (NotificationManager) context
-                .getSystemService(Context.NOTIFICATION_SERVICE);
-        mNotificationManager.notify(MESSAGE_NOTIFICATION_ID, mBuilder.build());
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/qman_signup.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/qman_signup.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/qman_signup.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,172 +0,0 @@
-package com.example.barnes.ummo;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Toast;
-
-import com.example.barnes.ummo.fragment.SelectableTreeFragment;
-import com.example.barnes.ummo.ummoAPI.QUser;
-import com.example.barnes.ummo.ummoAPI.QUserListner;
-
-import java.util.LinkedHashMap;
-
-/**
- * Created by blinker on 12/3/15.
- */
-public class qman_signup extends Activity implements View.OnClickListener,QUserListner{
-
-    private QUser user;
-
-    //Overides for QUSER
-
-
-    @Override
-    public void userRegistered(String string) {
-        final LinkedHashMap<String, Class<?>> listItems = new LinkedHashMap<>();
-        Toast.makeText(this,"Thank you for signing up "+user.getName(),Toast.LENGTH_LONG).show();
-        listItems.put("Selectable Nodes", SelectableTreeFragment.class);
-        Class<?> clazz = listItems.values().toArray(new Class<?>[]{})[0];
-        Intent i = new Intent(this, SplashScreen.class);
-        // i.putExtra(SingleFragmentActivity.FRAGMENT_PARAM, clazz);
-        this.startActivity(i);
-        this.finish();
-        overridePendingTransition(R.layout.fadein, R.layout.fadeout);
-    }
-
-    @Override
-    public void qJoined(String string) {
-
-    }
-
-    @Override
-    public void qLeft(String string) {
-
-    }
-
-    @Override
-    public void updated(String string) {
-
-    }
-
-    @Override
-    public void qReady(String string) {
-
-    }
-
-    @Override
-    public void gotJoinedQs(String string) {
-
-    }
-
-
-    @Override
-    public void categoriesReady(String string) {
-      /*  categoriesJSON = string;
-        Bundle b = getIntent().getExtras();
-        //Class<?> fragmentClass = (Class<?>) b.get(FRAGMENT_PARAM);
-
-        Fragment f = Fragment.instantiate(this, fragmentClass.getName());
-        f.setArguments(b);
-        getFragmentManager().beginTransaction().replace(R.id.fragment, f, fragmentClass.getName()).commit();
-          user.makeNotification();*/
-    }
-
-    @Override
-    public void allQsReady(String string) {
-        // qsJSON = string;
-        Log.d("qs",string);
-    }
-
-    //Error Handlers
-
-    @Override
-    public void joinedQsError(String err) {
-
-    }
-
-    @Override
-    public void userRegistrationError(String err) {
-
-    }
-
-    @Override
-    public void qJoinedError(String err) {
-
-    }
-
-    @Override
-    public void qLeftError(String err) {
-
-    }
-
-    @Override
-    public void updateError(String err) {
-
-    }
-
-    @Override
-    public void categoriesError(String err) {
-
-    }
-
-    @Override
-    public void allQError(String err) {
-
-    }
-
-    @Override
-    public void qError(String err) {
-
-    }
-
-    //End Overide for Quser
-
-    Button signupButton;
-    EditText ummoAlias, ummoCell, ummoTestID;
-
-    @Override
-    public void onClick(View v) {
-        if (v.getId() == R.id.qman_signup_button){
-            String ummoAliasStr = ummoAlias.getText().toString();
-            String ummoCellVal = ummoCell.getText().toString();
-            int ummoTestIDVal = Integer.parseInt(ummoTestID.getText().toString());
-
-            // ummoTester signUpData = new ummoTester(ummoAliasStr, new Integer(ummoCellVal), ummoTestIDVal);
-            user = new QUser(this);
-            user.register(ummoAliasStr, ummoCellVal);
-            /*Intent intent = new Intent(this, Sin.class);
-            startActivity(intent);*/
-        }
-    }
-
-    @Override
-    protected void onCreate (Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.qman_signup);
-
-
-        signupButton = (Button) findViewById(R.id.qman_signup_button);
-        ummoAlias = (EditText) findViewById(R.id.qman_alias);
-        ummoCell = (EditText) findViewById(R.id.qman_cell);
-        ummoTestID = (EditText) findViewById(R.id.qman_testid);
-
-        signupButton.setOnClickListener(this);
-    }
-
-    /*public void onSignUpClick (View v) {
-        if (v.getId() == R.id.qman_signup_button){
-
-            String ummoAliasStr = ummoAlias.getText().toString();
-            String ummoCellStr = ummoCell.getText().toString();
-            String ummoTestIDStr = ummoTestID.getText().toString();
-
-            Intent intent = new Intent(this, SelectableTreeFragment.class);
-            startActivity(intent);
-        }
-    }*/
-}
\ No newline at end of file
Index: fabtransitionactivity/gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/gradle.properties	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/gradle.properties	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/fragment/Qfragment.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/fragment/Qfragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/fragment/Qfragment.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,268 +0,0 @@
-package com.example.barnes.ummo.fragment;
-
-import android.app.ProgressDialog;
-import android.content.Context;
-import android.os.Bundle;
-import android.os.CountDownTimer;
-import android.support.annotation.Nullable;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.RelativeLayout;
-import android.widget.TextView;
-
-import com.example.barnes.ummo.R;
-import com.example.barnes.ummo.db.Db;
-import com.example.barnes.ummo.ummoAPI.JoinedQ;
-
-import java.util.List;
-
-import butterknife.ButterKnife;
-import cn.pedant.SweetAlert.SweetAlertDialog;
-import uk.co.chrisjenx.calligraphy.CalligraphyConfig;
-
-/**
- * Created by barnes on 8/26/15.
- */
-public class Qfragment extends BaseActivityFragment
-{
-    Db db;
-    Context c;
-    Context c_;
-    private int i = -1;
-    private android.widget.ScrollView scrollView;
-    public List<String> joinedq = null;
-    public List<String> qPosition = null;
-    public List<String> qJoined = null;
-    public String num;
-    private ProgressDialog p_Dialog;
-    public static final String ARG_FRAG = "ARG_FRAG";
-    //public static final String ARGFRAG = "ARG_FRAG";
-    static int mFrag;
-    int nFrag;
-    static JoinedQ _joinedQ;
-
-    public static Qfragment newInstance(int frag, int frag_n,JoinedQ joinedQ)
-    {
-        Bundle args = new Bundle();
-        args.putInt(ARG_FRAG, frag);
-        args.putInt("ARGFRAG", frag_n);
-        Qfragment fragment = new Qfragment();
-        fragment.setArguments(args);
-        _joinedQ = joinedQ;
-        return fragment;
-    }
-
-    public void loadQinfo(Button qPositionbtn, final String position)
-    {
-        qPositionbtn.setText("#" + position);
-        qPositionbtn.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                dialog(c, "", position);
-            }
-        });
-        RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) qPositionbtn.getLayoutParams();
-        params.width = 150;
-        params.height = 150;
-        params.rightMargin = 150;
-        //params.rightMargin = 90;
-        qPositionbtn.setLayoutParams(params);
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState)
-    {
-        super.onCreate(savedInstanceState);
-        mFrag = getArguments().getInt("ARG_FRAG");
-        nFrag = getArguments().getInt("ARGFRAG");
-        //((AppCompatActivity)setUpToolbarWithTitle(getString(R.string.app_name), true));
-        ButterKnife.bind(getActivity());
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)
-    {
-        enterFromBottomAnimation();
-        View view = LayoutInflater.from(container.getContext()).inflate(R.layout.q_list_items, container, false);
-        View view_ = LayoutInflater.from(container.getContext()).inflate(R.layout.q, container, false);
-        CalligraphyConfig.initDefault(new CalligraphyConfig.Builder()
-                        .setDefaultFontPath("fonts/Ubuntu-C.ttf")
-                        .setFontAttrId(R.attr.fontPath)
-                        .build()
-        );
-        Toolbar toolbar = (Toolbar) view.findViewById(R.id.toolbar_actionbar_);
-        ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);
-        //getActivity().setTitle("mmo");
-        toolbar.setTitle("mmo");
-        toolbar.setLogo(R.mipmap.ummo_logo);
-        //toolbar.setNavigationIcon(R.mipmap.ummo_logo);
-        //toolbar.setLogo(R.mipmap.ummo_logo);
-        ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayShowHomeEnabled(true);
-        ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-        //setUpToolbarWithTitle("mmo",true);
-        TextView tv = ((TextView)view.findViewById(R.id.man_one_text));
-        tv.setText(_joinedQ.getMyAlphanumCode());
-        String lastNumber;
-        c_ = view_.getContext();
-        c = view.getContext();
-        db = new Db(view.getContext());
-        db.open();
-
-        Log.e("nFrag Position", "" + nFrag);
-        Log.e("mFrag Position", "" + mFrag);
-        joinedq = db.getQNameJoinedFromTabPosition(mFrag);
-        //String qname = joinedq.get(0).toString();
-        //qPosition*onJoined(qname);
-        //String pos = qPosition.get(0).toString();
-        //num = pos;
-        //lastNumber = num.substring(num.length() - 1);
-        //db.close();
-        Button man_Q_1 = (Button)view.findViewById(R.id.man_one);
-        Button man_Q_2 = (Button)view.findViewById(R.id.man_two);
-        Button man_Q_3 = (Button)view.findViewById(R.id.man_three);
-        Button man_Q_4 = (Button)view.findViewById(R.id.man_four);
-        Button man_Q_5 = (Button)view.findViewById(R.id.man_five);
-        man_Q_1.setText(_joinedQ.getMyPos());
-      /*  if (lastNumber.equals("0"))
-        {
-            loadQinfo(man_Q_5, num);
-        }
-        else if (lastNumber.equals("1"))
-        {
-            loadQinfo(man_Q_1, num);
-        }
-        else if (lastNumber.equals("2"))
-        {
-            loadQinfo(man_Q_2, num);
-        }
-        else if (lastNumber.equals("3"))
-        {
-            loadQinfo(man_Q_3, num);
-        }
-        else if (lastNumber.equals("4"))
-        {
-            loadQinfo(man_Q_4, num);
-        }
-        else if (lastNumber.equals("5"))
-        {
-            loadQinfo(man_Q_5, num);
-        }
-        else if (lastNumber.equals("6"))
-        {
-            loadQinfo(man_Q_1, num);
-        }
-        else if (lastNumber.equals("7"))
-        {
-            loadQinfo(man_Q_2, num);
-        }
-        else if (lastNumber.equals("8"))
-        {
-            loadQinfo(man_Q_3, num);
-        }
-        else if (lastNumber.equals("9"))
-        {
-            loadQinfo(man_Q_4, num);
-        }
-        db.close();*/
-        return view;
-    }
-
-    @Override
-    public void onViewCreated(View view, @Nullable Bundle savedInstanceState)
-    {
-        super.onViewCreated(view, savedInstanceState);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item)
-    {
-        switch (item.getItemId())
-        {
-            case android.R.id.home:
-                return true;
-        }
-        return super.onOptionsItemSelected(item);
-    }
-
-    protected void exitToBottomAnimation()
-    {
-        getActivity().overridePendingTransition(R.anim.activity_no_animation, R.anim.activity_close_translate_to_bottom);
-    }
-
-    protected void enterFromBottomAnimation()
-    {
-        getActivity().overridePendingTransition(R.anim.activity_open_translate_from_bottom, R.anim.activity_no_animation);
-    }
-
-    @Override
-    public void onPause()
-    {
-        exitToBottomAnimation();
-        super.onPause();
-    }
-
-    public void dialog(Context context, final String text, final String position)
-    {
-        final Context c = context;
-        final String text_ = text;
-        final SweetAlertDialog pDialog;
-        pDialog = new SweetAlertDialog(context, SweetAlertDialog.PROGRESS_TYPE)
-                .setTitleText(" "+text)
-                .setContentText("Loading...");
-        pDialog.show();
-        pDialog.setCancelable(false);
-        new CountDownTimer(800 * 7, 800)
-        {
-            public void onTick(long millisUntilFinished)
-            {
-                i++;
-                switch (i){
-                    case 0:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.blue_btn_bg_color));
-                        break;
-                    case 1:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.material_deep_teal_50));
-                        break;
-                    case 2:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                    case 3:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.material_deep_teal_20));
-                        break;
-                    case 4:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.material_blue_grey_80));
-                        break;
-                    case 5:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.warning_stroke_color));
-                        break;
-                    case 6:
-                        pDialog.getProgressHelper().setBarColor(c.getResources().getColor(R.color.success_stroke_color));
-                        break;
-                }
-            }
-            public void onFinish()
-            {
-                i = -1;
-                pDialog.setTitleText(" " + text_ + " Queue")
-                        .setContentText("Queue Position:"+ position +
-                                "\n" + " Queue Length:22" +
-                                "\n" + "Queue DQ time:00:05" +
-                                "\n" + "Queue Time Left to DQ:01:05")
-                        .setConfirmText("OK")
-                        .showCancelButton(true)
-                        .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {
-                            @Override
-                            public void onClick(SweetAlertDialog sDialog) {
-                                pDialog.dismiss();
-                            }
-                        });
-            }
-        }.start();
-    }
-}
\ No newline at end of file
Index: fabtransitionactivity/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/build.gradle	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/build.gradle	(revision )
@@ -1,0 +1,0 @@
Index: fabtransitionactivity/fabtransitionactivity.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/fabtransitionactivity.iml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/fabtransitionactivity.iml	(revision )
@@ -12,10 +12,7 @@
         <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
         <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
         <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
-        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugAndroidTest" />
-        <option name="COMPILE_JAVA_TEST_TASK_NAME" value="compileDebugAndroidTestSources" />
         <afterSyncTasks>
-          <task>generateDebugAndroidTestSources</task>
           <task>generateDebugSources</task>
         </afterSyncTasks>
         <option name="ALLOW_USER_CONFIGURATION" value="false" />
@@ -29,7 +26,7 @@
   </component>
   <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
-    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/androidTest/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
@@ -51,6 +48,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
@@ -65,6 +69,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
\ No newline at end of file
Index: app/src/main/java/com/example/barnes/ummo/ummoAPI/QueryString.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/ummoAPI/QueryString.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/ummoAPI/QueryString.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,34 +0,0 @@
-package com.example.barnes.ummo.ummoAPI;
-
-import java.io.UnsupportedEncodingException;
-import java.net.URLEncoder;
-
-/**
- * Created by barnes on 11/1/15.
- */
-public class QueryString
-{
-    private StringBuilder query = new StringBuilder();
-    public QueryString() {
-    }
-    public synchronized void add(String name, String value) {
-        query.append('&');
-        encode(name, value);
-    }
-    private synchronized void encode(String name, String value) {
-        try {
-            query.append(URLEncoder.encode(name, "UTF-8"));
-            query.append('=');
-            query.append(URLEncoder.encode(value, "UTF-8"));
-        } catch (UnsupportedEncodingException ex) {
-            throw new RuntimeException("Broken VM does not support UTF-8");
-        }
-    }
-    public synchronized String getQuery() {
-        return query.toString();
-    }
-    @Override
-    public String toString() {
-        return getQuery();
-    }
-}
\ No newline at end of file
Index: fabtransitionactivity/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- fabtransitionactivity/src/main/res/values/dimens.xml	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ fabtransitionactivity/src/main/res/values/dimens.xml	(revision )
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/example/barnes/ummo/MainActivity.java
===================================================================
--- app/src/main/java/com/example/barnes/ummo/MainActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
+++ app/src/main/java/com/example/barnes/ummo/MainActivity.java	(revision 4e9a0fe893bdb0dfef0119a4b97b16b2239580b4)
@@ -1,57 +0,0 @@
-package com.example.barnes.ummo;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.support.v4.content.LocalBroadcastManager;
-import android.support.v7.app.AppCompatActivity;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-
-public class MainActivity extends AppCompatActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.ummo_splash);
-    }
-
-    private BroadcastReceiver mMessageReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            // Extract data included in the Intent
-            String message = intent.getStringExtra("message");
-            Log.e("receiver", "Got message: " + message);
-        }
-    };
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-
-        LocalBroadcastManager.getInstance(this).registerReceiver(mMessageReceiver,
-                new IntentFilter("com.example.barnes.ummo.CATEGORIES"));
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.menu_main, menu);
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-
-
-
-        return super.onOptionsItemSelected(item);
-    }
-}
\ No newline at end of file
